function [flux_2d, coll_evap_2d, sources, flux_3d, flux_out, clust_flux] = dofluxes(c,K,E,WL,CS,source,calc_sources,fwl,fcs)

%%%%%%%%%%%%%%%%%%%%% KEY %%%%%%%%%%%%%%%%
% Cluster 1: 1A
% Cluster 2: 2A
% Cluster 3: 3A
% Cluster 4: 4A
% Cluster 5: 5A
% Cluster 6: 1N
% Cluster 7: 1A1N
% Cluster 8: 2A1N
% Cluster 9: 3A1N
% Cluster 10: 4A1N
% Cluster 11: 5A1N
% Cluster 12: 2N
% Cluster 13: 1A2N
% Cluster 14: 2A2N
% Cluster 15: 3A2N
% Cluster 16: 4A2N
% Cluster 17: 5A2N
% Cluster 18: 3N
% Cluster 19: 1A3N
% Cluster 20: 2A3N
% Cluster 21: 3A3N
% Cluster 22: 4A3N
% Cluster 23: 5A3N
% Cluster 24: 4N
% Cluster 25: 1A4N
% Cluster 26: 2A4N
% Cluster 27: 3A4N
% Cluster 28: 4A4N
% Cluster 29: 5A4N
% Cluster 30: 4A5N
% Cluster 31: 5A5N
% Cluster 32: 1B
% Cluster 33: 1A1B
% Cluster 34: 2A1B
% Cluster 35: 3A1B
% Cluster 36: 4A1B
% Cluster 37: 1B1N
% Cluster 38: 1A1B1N
% Cluster 39: 2A1B1N
% Cluster 40: 3A1B1N
% Cluster 41: 4A1B1N
% Cluster 42: 1B2N
% Cluster 43: 1A1B2N
% Cluster 44: 2A1B2N
% Cluster 45: 3A1B2N
% Cluster 46: 4A1B2N
% Cluster 47: 3A1B3N
% Cluster 48: 4A1B3N
% Cluster 49: 4A1B4N
% Cluster 50: 1N1P
% Cluster 51: 1A1N1P
% Cluster 52: 2A1N1P
% Cluster 53: 2N1P
% Cluster 54: 1A2N1P
% Cluster 55: 2A2N1P
% Cluster 56: 3A2N1P
% Cluster 57: 3N1P
% Cluster 58: 1A3N1P
% Cluster 59: 2A3N1P
% Cluster 60: 3A3N1P
% Cluster 61: 4A3N1P
% Cluster 62: 2A4N1P
% Cluster 63: 3A4N1P
% Cluster 64: 4A4N1P
% Cluster 65: 3A5N1P
% Cluster 66: 4A5N1P
% Cluster 67: 5A5N1P
% Cluster 68: generic negative ion 
% Cluster 69: generic positive ion 
% 70 is for source fluxes
% 71 is for coagulation losses 
% 72 is for wall losses 
% 73 is for dilution losses 
% 74 is for recombination of positive and negative charger ions with each other
% 75 is for collisions that lead succesfully out of the system as neutrals
% 76 is for collisions that lead succesfully out of the system as negatives
% 77 is for collisions that lead succesfully out of the system as positives
% 78 is for collisions that lead out of the system, but the resulting cluster is brought back
%%%%%%%%%%%%%%%%%%%%% END KEY %%%%%%%%%%%%%%%%

% name vector containing all the names (clusters, sources, losses etc.) in the flux matrices
clust_flux = {'1A' '2A' '3A' '4A' '5A' '1N' '1A1N' '2A1N' '3A1N' '4A1N' '5A1N' '2N' '1A2N' '2A2N' '3A2N' '4A2N' '5A2N' '3N' '1A3N' '2A3N' '3A3N' '4A3N' '5A3N' '4N' '1A4N' '2A4N' '3A4N' '4A4N' '5A4N' '4A5N' '5A5N' '1B' '1A1B' '2A1B' '3A1B' '4A1B' '1B1N' '1A1B1N' '2A1B1N' '3A1B1N' '4A1B1N' '1B2N' '1A1B2N' '2A1B2N' '3A1B2N' '4A1B2N' '3A1B3N' '4A1B3N' '4A1B4N' '1N1P' '1A1N1P' '2A1N1P' '2N1P' '1A2N1P' '2A2N1P' '3A2N1P' '3N1P' '1A3N1P' '2A3N1P' '3A3N1P' '4A3N1P' '2A4N1P' '3A4N1P' '4A4N1P' '3A5N1P' '4A5N1P' '5A5N1P' 'neg' 'pos' 'source' 'coag' 'wall' 'dil' 'rec' 'out_neu' 'out_neg' 'out_pos' 'bound' };

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Begin Equations Here
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

flux_2d = zeros(78,78);
flux_3d = [];
coll_evap_2d = zeros(78,78);
flux_out = zeros(69,69,4);
sources = zeros(69,1);

% Cluster 1: 1A
	% Collisions removing this cluster
	coll_evap_2d(1,2) = coll_evap_2d(1,2)+2*0.5*K(1,1)*c(1)*c(1);
	coll_evap_2d(1,3) = coll_evap_2d(1,3)+K(1,2)*c(1)*c(2);
	coll_evap_2d(1,4) = coll_evap_2d(1,4)+K(1,3)*c(1)*c(3);
	coll_evap_2d(1,5) = coll_evap_2d(1,5)+K(1,4)*c(1)*c(4);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,5)*c(1)*c(5);
	coll_evap_2d(1,7) = coll_evap_2d(1,7)+K(1,6)*c(1)*c(6);
	coll_evap_2d(1,8) = coll_evap_2d(1,8)+K(1,7)*c(1)*c(7);
	coll_evap_2d(1,9) = coll_evap_2d(1,9)+K(1,8)*c(1)*c(8);
	coll_evap_2d(1,10) = coll_evap_2d(1,10)+K(1,9)*c(1)*c(9);
	coll_evap_2d(1,11) = coll_evap_2d(1,11)+K(1,10)*c(1)*c(10);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,11)*c(1)*c(11);
	coll_evap_2d(1,13) = coll_evap_2d(1,13)+K(1,12)*c(1)*c(12);
	coll_evap_2d(1,14) = coll_evap_2d(1,14)+K(1,13)*c(1)*c(13);
	coll_evap_2d(1,15) = coll_evap_2d(1,15)+K(1,14)*c(1)*c(14);
	coll_evap_2d(1,16) = coll_evap_2d(1,16)+K(1,15)*c(1)*c(15);
	coll_evap_2d(1,17) = coll_evap_2d(1,17)+K(1,16)*c(1)*c(16);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,17)*c(1)*c(17);
	coll_evap_2d(1,19) = coll_evap_2d(1,19)+K(1,18)*c(1)*c(18);
	coll_evap_2d(1,20) = coll_evap_2d(1,20)+K(1,19)*c(1)*c(19);
	coll_evap_2d(1,21) = coll_evap_2d(1,21)+K(1,20)*c(1)*c(20);
	coll_evap_2d(1,22) = coll_evap_2d(1,22)+K(1,21)*c(1)*c(21);
	coll_evap_2d(1,23) = coll_evap_2d(1,23)+K(1,22)*c(1)*c(22);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,23)*c(1)*c(23);
	coll_evap_2d(1,25) = coll_evap_2d(1,25)+K(1,24)*c(1)*c(24);
	coll_evap_2d(1,26) = coll_evap_2d(1,26)+K(1,25)*c(1)*c(25);
	coll_evap_2d(1,27) = coll_evap_2d(1,27)+K(1,26)*c(1)*c(26);
	coll_evap_2d(1,28) = coll_evap_2d(1,28)+K(1,27)*c(1)*c(27);
	coll_evap_2d(1,29) = coll_evap_2d(1,29)+K(1,28)*c(1)*c(28);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,29)*c(1)*c(29);
	coll_evap_2d(1,31) = coll_evap_2d(1,31)+K(1,30)*c(1)*c(30);
	coll_evap_2d(1,75) = coll_evap_2d(1,75)+K(1,31)*c(1)*c(31);
	coll_evap_2d(1,33) = coll_evap_2d(1,33)+K(1,32)*c(1)*c(32);
	coll_evap_2d(1,34) = coll_evap_2d(1,34)+K(1,33)*c(1)*c(33);
	coll_evap_2d(1,35) = coll_evap_2d(1,35)+K(1,34)*c(1)*c(34);
	coll_evap_2d(1,36) = coll_evap_2d(1,36)+K(1,35)*c(1)*c(35);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,36)*c(1)*c(36);
	coll_evap_2d(1,38) = coll_evap_2d(1,38)+K(1,37)*c(1)*c(37);
	coll_evap_2d(1,39) = coll_evap_2d(1,39)+K(1,38)*c(1)*c(38);
	coll_evap_2d(1,40) = coll_evap_2d(1,40)+K(1,39)*c(1)*c(39);
	coll_evap_2d(1,41) = coll_evap_2d(1,41)+K(1,40)*c(1)*c(40);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,41)*c(1)*c(41);
	coll_evap_2d(1,43) = coll_evap_2d(1,43)+K(1,42)*c(1)*c(42);
	coll_evap_2d(1,44) = coll_evap_2d(1,44)+K(1,43)*c(1)*c(43);
	coll_evap_2d(1,45) = coll_evap_2d(1,45)+K(1,44)*c(1)*c(44);
	coll_evap_2d(1,46) = coll_evap_2d(1,46)+K(1,45)*c(1)*c(45);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,46)*c(1)*c(46);
	coll_evap_2d(1,48) = coll_evap_2d(1,48)+K(1,47)*c(1)*c(47);
	coll_evap_2d(1,76) = coll_evap_2d(1,76)+K(1,48)*c(1)*c(48);
	coll_evap_2d(1,76) = coll_evap_2d(1,76)+K(1,49)*c(1)*c(49);
	coll_evap_2d(1,51) = coll_evap_2d(1,51)+K(1,50)*c(1)*c(50);
	coll_evap_2d(1,52) = coll_evap_2d(1,52)+K(1,51)*c(1)*c(51);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,52)*c(1)*c(52);
	coll_evap_2d(1,54) = coll_evap_2d(1,54)+K(1,53)*c(1)*c(53);
	coll_evap_2d(1,55) = coll_evap_2d(1,55)+K(1,54)*c(1)*c(54);
	coll_evap_2d(1,56) = coll_evap_2d(1,56)+K(1,55)*c(1)*c(55);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,56)*c(1)*c(56);
	coll_evap_2d(1,58) = coll_evap_2d(1,58)+K(1,57)*c(1)*c(57);
	coll_evap_2d(1,59) = coll_evap_2d(1,59)+K(1,58)*c(1)*c(58);
	coll_evap_2d(1,60) = coll_evap_2d(1,60)+K(1,59)*c(1)*c(59);
	coll_evap_2d(1,61) = coll_evap_2d(1,61)+K(1,60)*c(1)*c(60);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,61)*c(1)*c(61);
	coll_evap_2d(1,63) = coll_evap_2d(1,63)+K(1,62)*c(1)*c(62);
	coll_evap_2d(1,64) = coll_evap_2d(1,64)+K(1,63)*c(1)*c(63);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,64)*c(1)*c(64);
	coll_evap_2d(1,66) = coll_evap_2d(1,66)+K(1,65)*c(1)*c(65);
	coll_evap_2d(1,67) = coll_evap_2d(1,67)+K(1,66)*c(1)*c(66);
	coll_evap_2d(1,78) = coll_evap_2d(1,78)+K(1,67)*c(1)*c(67);
	coll_evap_2d(1,32) = coll_evap_2d(1,32)+K(1,68)*c(1)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,5)*c(1)*c(5);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,11)*c(1)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,17)*c(1)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,23)*c(1)*c(23);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,29)*c(1)*c(29);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,36)*c(1)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,41)*c(1)*c(41);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,46)*c(1)*c(46);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,52)*c(1)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,56)*c(1)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,61)*c(1)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,64)*c(1)*c(64);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(1,67)*c(1)*c(67);
	% Evaporations resulting in this cluster
	coll_evap_2d(2,1) = coll_evap_2d(2,1)+2*E(1,1)*c(2);
	coll_evap_2d(3,1) = coll_evap_2d(3,1)+E(1,2)*c(3);
	coll_evap_2d(4,1) = coll_evap_2d(4,1)+E(1,3)*c(4);
	coll_evap_2d(5,1) = coll_evap_2d(5,1)+E(1,4)*c(5);
	coll_evap_2d(7,1) = coll_evap_2d(7,1)+E(1,6)*c(7);
	coll_evap_2d(8,1) = coll_evap_2d(8,1)+E(1,7)*c(8);
	coll_evap_2d(9,1) = coll_evap_2d(9,1)+E(1,8)*c(9);
	coll_evap_2d(10,1) = coll_evap_2d(10,1)+E(1,9)*c(10);
	coll_evap_2d(11,1) = coll_evap_2d(11,1)+E(1,10)*c(11);
	coll_evap_2d(13,1) = coll_evap_2d(13,1)+E(1,12)*c(13);
	coll_evap_2d(14,1) = coll_evap_2d(14,1)+E(1,13)*c(14);
	coll_evap_2d(15,1) = coll_evap_2d(15,1)+E(1,14)*c(15);
	coll_evap_2d(16,1) = coll_evap_2d(16,1)+E(1,15)*c(16);
	coll_evap_2d(17,1) = coll_evap_2d(17,1)+E(1,16)*c(17);
	coll_evap_2d(19,1) = coll_evap_2d(19,1)+E(1,18)*c(19);
	coll_evap_2d(20,1) = coll_evap_2d(20,1)+E(1,19)*c(20);
	coll_evap_2d(21,1) = coll_evap_2d(21,1)+E(1,20)*c(21);
	coll_evap_2d(22,1) = coll_evap_2d(22,1)+E(1,21)*c(22);
	coll_evap_2d(23,1) = coll_evap_2d(23,1)+E(1,22)*c(23);
	coll_evap_2d(25,1) = coll_evap_2d(25,1)+E(1,24)*c(25);
	coll_evap_2d(26,1) = coll_evap_2d(26,1)+E(1,25)*c(26);
	coll_evap_2d(27,1) = coll_evap_2d(27,1)+E(1,26)*c(27);
	coll_evap_2d(28,1) = coll_evap_2d(28,1)+E(1,27)*c(28);
	coll_evap_2d(29,1) = coll_evap_2d(29,1)+E(1,28)*c(29);
	coll_evap_2d(31,1) = coll_evap_2d(31,1)+E(1,30)*c(31);
	coll_evap_2d(33,1) = coll_evap_2d(33,1)+E(1,32)*c(33);
	coll_evap_2d(34,1) = coll_evap_2d(34,1)+E(1,33)*c(34);
	coll_evap_2d(35,1) = coll_evap_2d(35,1)+E(1,34)*c(35);
	coll_evap_2d(36,1) = coll_evap_2d(36,1)+E(1,35)*c(36);
	coll_evap_2d(38,1) = coll_evap_2d(38,1)+E(1,37)*c(38);
	coll_evap_2d(39,1) = coll_evap_2d(39,1)+E(1,38)*c(39);
	coll_evap_2d(40,1) = coll_evap_2d(40,1)+E(1,39)*c(40);
	coll_evap_2d(41,1) = coll_evap_2d(41,1)+E(1,40)*c(41);
	coll_evap_2d(43,1) = coll_evap_2d(43,1)+E(1,42)*c(43);
	coll_evap_2d(44,1) = coll_evap_2d(44,1)+E(1,43)*c(44);
	coll_evap_2d(45,1) = coll_evap_2d(45,1)+E(1,44)*c(45);
	coll_evap_2d(46,1) = coll_evap_2d(46,1)+E(1,45)*c(46);
	coll_evap_2d(48,1) = coll_evap_2d(48,1)+E(1,47)*c(48);
	coll_evap_2d(51,1) = coll_evap_2d(51,1)+E(1,50)*c(51);
	coll_evap_2d(52,1) = coll_evap_2d(52,1)+E(1,51)*c(52);
	coll_evap_2d(54,1) = coll_evap_2d(54,1)+E(1,53)*c(54);
	coll_evap_2d(55,1) = coll_evap_2d(55,1)+E(1,54)*c(55);
	coll_evap_2d(56,1) = coll_evap_2d(56,1)+E(1,55)*c(56);
	coll_evap_2d(58,1) = coll_evap_2d(58,1)+E(1,57)*c(58);
	coll_evap_2d(59,1) = coll_evap_2d(59,1)+E(1,58)*c(59);
	coll_evap_2d(60,1) = coll_evap_2d(60,1)+E(1,59)*c(60);
	coll_evap_2d(61,1) = coll_evap_2d(61,1)+E(1,60)*c(61);
	coll_evap_2d(63,1) = coll_evap_2d(63,1)+E(1,62)*c(63);
	coll_evap_2d(64,1) = coll_evap_2d(64,1)+E(1,63)*c(64);
	coll_evap_2d(66,1) = coll_evap_2d(66,1)+E(1,65)*c(66);
	coll_evap_2d(67,1) = coll_evap_2d(67,1)+E(1,66)*c(67);
	% External losses
	coll_evap_2d(1,71) = coll_evap_2d(1,71)+CS(1)*c(1);

% Cluster 2: 2A
	% Collisions removing this cluster
	coll_evap_2d(2,3) = coll_evap_2d(2,3)+K(1,2)*c(2)*c(1);
	coll_evap_2d(2,4) = coll_evap_2d(2,4)+2*0.5*K(2,2)*c(2)*c(2);
	coll_evap_2d(2,5) = coll_evap_2d(2,5)+K(2,3)*c(2)*c(3);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,4)*c(2)*c(4);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,5)*c(2)*c(5);
	coll_evap_2d(2,8) = coll_evap_2d(2,8)+K(2,6)*c(2)*c(6);
	coll_evap_2d(2,9) = coll_evap_2d(2,9)+K(2,7)*c(2)*c(7);
	coll_evap_2d(2,10) = coll_evap_2d(2,10)+K(2,8)*c(2)*c(8);
	coll_evap_2d(2,11) = coll_evap_2d(2,11)+K(2,9)*c(2)*c(9);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,10)*c(2)*c(10);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,11)*c(2)*c(11);
	coll_evap_2d(2,14) = coll_evap_2d(2,14)+K(2,12)*c(2)*c(12);
	coll_evap_2d(2,15) = coll_evap_2d(2,15)+K(2,13)*c(2)*c(13);
	coll_evap_2d(2,16) = coll_evap_2d(2,16)+K(2,14)*c(2)*c(14);
	coll_evap_2d(2,17) = coll_evap_2d(2,17)+K(2,15)*c(2)*c(15);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,16)*c(2)*c(16);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,17)*c(2)*c(17);
	coll_evap_2d(2,20) = coll_evap_2d(2,20)+K(2,18)*c(2)*c(18);
	coll_evap_2d(2,21) = coll_evap_2d(2,21)+K(2,19)*c(2)*c(19);
	coll_evap_2d(2,22) = coll_evap_2d(2,22)+K(2,20)*c(2)*c(20);
	coll_evap_2d(2,23) = coll_evap_2d(2,23)+K(2,21)*c(2)*c(21);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,22)*c(2)*c(22);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,23)*c(2)*c(23);
	coll_evap_2d(2,26) = coll_evap_2d(2,26)+K(2,24)*c(2)*c(24);
	coll_evap_2d(2,27) = coll_evap_2d(2,27)+K(2,25)*c(2)*c(25);
	coll_evap_2d(2,28) = coll_evap_2d(2,28)+K(2,26)*c(2)*c(26);
	coll_evap_2d(2,29) = coll_evap_2d(2,29)+K(2,27)*c(2)*c(27);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,28)*c(2)*c(28);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,29)*c(2)*c(29);
	coll_evap_2d(2,75) = coll_evap_2d(2,75)+K(2,30)*c(2)*c(30);
	coll_evap_2d(2,75) = coll_evap_2d(2,75)+K(2,31)*c(2)*c(31);
	coll_evap_2d(2,34) = coll_evap_2d(2,34)+K(2,32)*c(2)*c(32);
	coll_evap_2d(2,35) = coll_evap_2d(2,35)+K(2,33)*c(2)*c(33);
	coll_evap_2d(2,36) = coll_evap_2d(2,36)+K(2,34)*c(2)*c(34);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,35)*c(2)*c(35);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,36)*c(2)*c(36);
	coll_evap_2d(2,39) = coll_evap_2d(2,39)+K(2,37)*c(2)*c(37);
	coll_evap_2d(2,40) = coll_evap_2d(2,40)+K(2,38)*c(2)*c(38);
	coll_evap_2d(2,41) = coll_evap_2d(2,41)+K(2,39)*c(2)*c(39);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,40)*c(2)*c(40);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,41)*c(2)*c(41);
	coll_evap_2d(2,44) = coll_evap_2d(2,44)+K(2,42)*c(2)*c(42);
	coll_evap_2d(2,45) = coll_evap_2d(2,45)+K(2,43)*c(2)*c(43);
	coll_evap_2d(2,46) = coll_evap_2d(2,46)+K(2,44)*c(2)*c(44);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,45)*c(2)*c(45);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,46)*c(2)*c(46);
	coll_evap_2d(2,76) = coll_evap_2d(2,76)+K(2,47)*c(2)*c(47);
	coll_evap_2d(2,76) = coll_evap_2d(2,76)+K(2,48)*c(2)*c(48);
	coll_evap_2d(2,76) = coll_evap_2d(2,76)+K(2,49)*c(2)*c(49);
	coll_evap_2d(2,52) = coll_evap_2d(2,52)+K(2,50)*c(2)*c(50);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,51)*c(2)*c(51);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,52)*c(2)*c(52);
	coll_evap_2d(2,55) = coll_evap_2d(2,55)+K(2,53)*c(2)*c(53);
	coll_evap_2d(2,56) = coll_evap_2d(2,56)+K(2,54)*c(2)*c(54);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,55)*c(2)*c(55);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,56)*c(2)*c(56);
	coll_evap_2d(2,59) = coll_evap_2d(2,59)+K(2,57)*c(2)*c(57);
	coll_evap_2d(2,60) = coll_evap_2d(2,60)+K(2,58)*c(2)*c(58);
	coll_evap_2d(2,61) = coll_evap_2d(2,61)+K(2,59)*c(2)*c(59);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,60)*c(2)*c(60);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,61)*c(2)*c(61);
	coll_evap_2d(2,64) = coll_evap_2d(2,64)+K(2,62)*c(2)*c(62);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,63)*c(2)*c(63);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,64)*c(2)*c(64);
	coll_evap_2d(2,67) = coll_evap_2d(2,67)+K(2,65)*c(2)*c(65);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,66)*c(2)*c(66);
	coll_evap_2d(2,78) = coll_evap_2d(2,78)+K(2,67)*c(2)*c(67);
	coll_evap_2d(2,33) = coll_evap_2d(2,33)+K(2,68)*c(2)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,4)*c(2)*c(4);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,5)*c(2)*c(5);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,10)*c(2)*c(10);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,11)*c(2)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,16)*c(2)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,17)*c(2)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,22)*c(2)*c(22);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,23)*c(2)*c(23);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,28)*c(2)*c(28);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,29)*c(2)*c(29);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,35)*c(2)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,36)*c(2)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,40)*c(2)*c(40);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,41)*c(2)*c(41);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,45)*c(2)*c(45);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,46)*c(2)*c(46);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,51)*c(2)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,52)*c(2)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,55)*c(2)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,56)*c(2)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,60)*c(2)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,61)*c(2)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,63)*c(2)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,64)*c(2)*c(64);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(2,66)*c(2)*c(66);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(2,67)*c(2)*c(67);
	% Evaporations resulting in this cluster
	coll_evap_2d(3,2) = coll_evap_2d(3,2)+E(1,2)*c(3);
	coll_evap_2d(4,2) = coll_evap_2d(4,2)+2*E(2,2)*c(4);
	coll_evap_2d(5,2) = coll_evap_2d(5,2)+E(2,3)*c(5);
	coll_evap_2d(8,2) = coll_evap_2d(8,2)+E(2,6)*c(8);
	coll_evap_2d(9,2) = coll_evap_2d(9,2)+E(2,7)*c(9);
	coll_evap_2d(10,2) = coll_evap_2d(10,2)+E(2,8)*c(10);
	coll_evap_2d(11,2) = coll_evap_2d(11,2)+E(2,9)*c(11);
	coll_evap_2d(14,2) = coll_evap_2d(14,2)+E(2,12)*c(14);
	coll_evap_2d(15,2) = coll_evap_2d(15,2)+E(2,13)*c(15);
	coll_evap_2d(16,2) = coll_evap_2d(16,2)+E(2,14)*c(16);
	coll_evap_2d(17,2) = coll_evap_2d(17,2)+E(2,15)*c(17);
	coll_evap_2d(20,2) = coll_evap_2d(20,2)+E(2,18)*c(20);
	coll_evap_2d(21,2) = coll_evap_2d(21,2)+E(2,19)*c(21);
	coll_evap_2d(22,2) = coll_evap_2d(22,2)+E(2,20)*c(22);
	coll_evap_2d(23,2) = coll_evap_2d(23,2)+E(2,21)*c(23);
	coll_evap_2d(26,2) = coll_evap_2d(26,2)+E(2,24)*c(26);
	coll_evap_2d(27,2) = coll_evap_2d(27,2)+E(2,25)*c(27);
	coll_evap_2d(28,2) = coll_evap_2d(28,2)+E(2,26)*c(28);
	coll_evap_2d(29,2) = coll_evap_2d(29,2)+E(2,27)*c(29);
	coll_evap_2d(34,2) = coll_evap_2d(34,2)+E(2,32)*c(34);
	coll_evap_2d(35,2) = coll_evap_2d(35,2)+E(2,33)*c(35);
	coll_evap_2d(36,2) = coll_evap_2d(36,2)+E(2,34)*c(36);
	coll_evap_2d(39,2) = coll_evap_2d(39,2)+E(2,37)*c(39);
	coll_evap_2d(40,2) = coll_evap_2d(40,2)+E(2,38)*c(40);
	coll_evap_2d(41,2) = coll_evap_2d(41,2)+E(2,39)*c(41);
	coll_evap_2d(44,2) = coll_evap_2d(44,2)+E(2,42)*c(44);
	coll_evap_2d(45,2) = coll_evap_2d(45,2)+E(2,43)*c(45);
	coll_evap_2d(46,2) = coll_evap_2d(46,2)+E(2,44)*c(46);
	coll_evap_2d(52,2) = coll_evap_2d(52,2)+E(2,50)*c(52);
	coll_evap_2d(55,2) = coll_evap_2d(55,2)+E(2,53)*c(55);
	coll_evap_2d(56,2) = coll_evap_2d(56,2)+E(2,54)*c(56);
	coll_evap_2d(59,2) = coll_evap_2d(59,2)+E(2,57)*c(59);
	coll_evap_2d(60,2) = coll_evap_2d(60,2)+E(2,58)*c(60);
	coll_evap_2d(61,2) = coll_evap_2d(61,2)+E(2,59)*c(61);
	coll_evap_2d(64,2) = coll_evap_2d(64,2)+E(2,62)*c(64);
	coll_evap_2d(67,2) = coll_evap_2d(67,2)+E(2,65)*c(67);
	% External losses
	coll_evap_2d(2,71) = coll_evap_2d(2,71)+CS(2)*c(2);

% Cluster 3: 3A
	% Collisions removing this cluster
	coll_evap_2d(3,4) = coll_evap_2d(3,4)+K(1,3)*c(3)*c(1);
	coll_evap_2d(3,5) = coll_evap_2d(3,5)+K(2,3)*c(3)*c(2);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+2*0.5*K(3,3)*c(3)*c(3);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+0.5*K(3,3)*c(3)*c(3);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,4)*c(3)*c(4);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,5)*c(3)*c(5);
	coll_evap_2d(3,9) = coll_evap_2d(3,9)+K(3,6)*c(3)*c(6);
	coll_evap_2d(3,10) = coll_evap_2d(3,10)+K(3,7)*c(3)*c(7);
	coll_evap_2d(3,11) = coll_evap_2d(3,11)+K(3,8)*c(3)*c(8);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,9)*c(3)*c(9);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,10)*c(3)*c(10);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,11)*c(3)*c(11);
	coll_evap_2d(3,15) = coll_evap_2d(3,15)+K(3,12)*c(3)*c(12);
	coll_evap_2d(3,16) = coll_evap_2d(3,16)+K(3,13)*c(3)*c(13);
	coll_evap_2d(3,17) = coll_evap_2d(3,17)+K(3,14)*c(3)*c(14);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,15)*c(3)*c(15);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,16)*c(3)*c(16);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,17)*c(3)*c(17);
	coll_evap_2d(3,21) = coll_evap_2d(3,21)+K(3,18)*c(3)*c(18);
	coll_evap_2d(3,22) = coll_evap_2d(3,22)+K(3,19)*c(3)*c(19);
	coll_evap_2d(3,23) = coll_evap_2d(3,23)+K(3,20)*c(3)*c(20);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,21)*c(3)*c(21);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,22)*c(3)*c(22);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,23)*c(3)*c(23);
	coll_evap_2d(3,27) = coll_evap_2d(3,27)+K(3,24)*c(3)*c(24);
	coll_evap_2d(3,28) = coll_evap_2d(3,28)+K(3,25)*c(3)*c(25);
	coll_evap_2d(3,29) = coll_evap_2d(3,29)+K(3,26)*c(3)*c(26);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,27)*c(3)*c(27);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,28)*c(3)*c(28);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,29)*c(3)*c(29);
	coll_evap_2d(3,75) = coll_evap_2d(3,75)+K(3,30)*c(3)*c(30);
	coll_evap_2d(3,75) = coll_evap_2d(3,75)+K(3,31)*c(3)*c(31);
	coll_evap_2d(3,35) = coll_evap_2d(3,35)+K(3,32)*c(3)*c(32);
	coll_evap_2d(3,36) = coll_evap_2d(3,36)+K(3,33)*c(3)*c(33);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,34)*c(3)*c(34);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,35)*c(3)*c(35);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,36)*c(3)*c(36);
	coll_evap_2d(3,40) = coll_evap_2d(3,40)+K(3,37)*c(3)*c(37);
	coll_evap_2d(3,41) = coll_evap_2d(3,41)+K(3,38)*c(3)*c(38);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,39)*c(3)*c(39);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,40)*c(3)*c(40);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,41)*c(3)*c(41);
	coll_evap_2d(3,45) = coll_evap_2d(3,45)+K(3,42)*c(3)*c(42);
	coll_evap_2d(3,46) = coll_evap_2d(3,46)+K(3,43)*c(3)*c(43);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,44)*c(3)*c(44);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,45)*c(3)*c(45);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,46)*c(3)*c(46);
	coll_evap_2d(3,76) = coll_evap_2d(3,76)+K(3,47)*c(3)*c(47);
	coll_evap_2d(3,76) = coll_evap_2d(3,76)+K(3,48)*c(3)*c(48);
	coll_evap_2d(3,76) = coll_evap_2d(3,76)+K(3,49)*c(3)*c(49);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,50)*c(3)*c(50);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,51)*c(3)*c(51);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,52)*c(3)*c(52);
	coll_evap_2d(3,56) = coll_evap_2d(3,56)+K(3,53)*c(3)*c(53);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,54)*c(3)*c(54);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,55)*c(3)*c(55);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,56)*c(3)*c(56);
	coll_evap_2d(3,60) = coll_evap_2d(3,60)+K(3,57)*c(3)*c(57);
	coll_evap_2d(3,61) = coll_evap_2d(3,61)+K(3,58)*c(3)*c(58);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,59)*c(3)*c(59);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,60)*c(3)*c(60);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,61)*c(3)*c(61);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,62)*c(3)*c(62);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,63)*c(3)*c(63);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,64)*c(3)*c(64);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,65)*c(3)*c(65);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,66)*c(3)*c(66);
	coll_evap_2d(3,78) = coll_evap_2d(3,78)+K(3,67)*c(3)*c(67);
	coll_evap_2d(3,34) = coll_evap_2d(3,34)+K(3,68)*c(3)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+0.5*K(3,3)*c(3)*c(3);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,4)*c(3)*c(4);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,5)*c(3)*c(5);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,9)*c(3)*c(9);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,10)*c(3)*c(10);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,11)*c(3)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,15)*c(3)*c(15);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,16)*c(3)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,17)*c(3)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,21)*c(3)*c(21);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,22)*c(3)*c(22);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,23)*c(3)*c(23);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,27)*c(3)*c(27);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,28)*c(3)*c(28);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,29)*c(3)*c(29);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,34)*c(3)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,35)*c(3)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,36)*c(3)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,39)*c(3)*c(39);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,40)*c(3)*c(40);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,41)*c(3)*c(41);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,44)*c(3)*c(44);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,45)*c(3)*c(45);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,46)*c(3)*c(46);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,50)*c(3)*c(50);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,51)*c(3)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,52)*c(3)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,54)*c(3)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,55)*c(3)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,56)*c(3)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,59)*c(3)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,60)*c(3)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,61)*c(3)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,62)*c(3)*c(62);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,63)*c(3)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,64)*c(3)*c(64);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(3,65)*c(3)*c(65);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(3,66)*c(3)*c(66);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(3,67)*c(3)*c(67);
	% Evaporations resulting in this cluster
	coll_evap_2d(4,3) = coll_evap_2d(4,3)+E(1,3)*c(4);
	coll_evap_2d(5,3) = coll_evap_2d(5,3)+E(2,3)*c(5);
	coll_evap_2d(9,3) = coll_evap_2d(9,3)+E(3,6)*c(9);
	coll_evap_2d(10,3) = coll_evap_2d(10,3)+E(3,7)*c(10);
	coll_evap_2d(11,3) = coll_evap_2d(11,3)+E(3,8)*c(11);
	coll_evap_2d(15,3) = coll_evap_2d(15,3)+E(3,12)*c(15);
	coll_evap_2d(16,3) = coll_evap_2d(16,3)+E(3,13)*c(16);
	coll_evap_2d(17,3) = coll_evap_2d(17,3)+E(3,14)*c(17);
	coll_evap_2d(21,3) = coll_evap_2d(21,3)+E(3,18)*c(21);
	coll_evap_2d(22,3) = coll_evap_2d(22,3)+E(3,19)*c(22);
	coll_evap_2d(23,3) = coll_evap_2d(23,3)+E(3,20)*c(23);
	coll_evap_2d(27,3) = coll_evap_2d(27,3)+E(3,24)*c(27);
	coll_evap_2d(28,3) = coll_evap_2d(28,3)+E(3,25)*c(28);
	coll_evap_2d(29,3) = coll_evap_2d(29,3)+E(3,26)*c(29);
	coll_evap_2d(35,3) = coll_evap_2d(35,3)+E(3,32)*c(35);
	coll_evap_2d(36,3) = coll_evap_2d(36,3)+E(3,33)*c(36);
	coll_evap_2d(40,3) = coll_evap_2d(40,3)+E(3,37)*c(40);
	coll_evap_2d(41,3) = coll_evap_2d(41,3)+E(3,38)*c(41);
	coll_evap_2d(45,3) = coll_evap_2d(45,3)+E(3,42)*c(45);
	coll_evap_2d(46,3) = coll_evap_2d(46,3)+E(3,43)*c(46);
	coll_evap_2d(56,3) = coll_evap_2d(56,3)+E(3,53)*c(56);
	coll_evap_2d(60,3) = coll_evap_2d(60,3)+E(3,57)*c(60);
	coll_evap_2d(61,3) = coll_evap_2d(61,3)+E(3,58)*c(61);
	% External losses
	coll_evap_2d(3,71) = coll_evap_2d(3,71)+CS(3)*c(3);

% Cluster 4: 4A
	% Collisions removing this cluster
	coll_evap_2d(4,5) = coll_evap_2d(4,5)+K(1,4)*c(4)*c(1);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(2,4)*c(4)*c(2);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+K(2,4)*c(4)*c(2);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(3,4)*c(4)*c(3);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+K(3,4)*c(4)*c(3);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+2*0.5*K(4,4)*c(4)*c(4);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+0.5*K(4,4)*c(4)*c(4);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,5)*c(4)*c(5);
	coll_evap_2d(4,10) = coll_evap_2d(4,10)+K(4,6)*c(4)*c(6);
	coll_evap_2d(4,11) = coll_evap_2d(4,11)+K(4,7)*c(4)*c(7);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,8)*c(4)*c(8);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,9)*c(4)*c(9);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,10)*c(4)*c(10);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,11)*c(4)*c(11);
	coll_evap_2d(4,16) = coll_evap_2d(4,16)+K(4,12)*c(4)*c(12);
	coll_evap_2d(4,17) = coll_evap_2d(4,17)+K(4,13)*c(4)*c(13);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,14)*c(4)*c(14);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,15)*c(4)*c(15);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,16)*c(4)*c(16);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,17)*c(4)*c(17);
	coll_evap_2d(4,22) = coll_evap_2d(4,22)+K(4,18)*c(4)*c(18);
	coll_evap_2d(4,23) = coll_evap_2d(4,23)+K(4,19)*c(4)*c(19);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,20)*c(4)*c(20);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,21)*c(4)*c(21);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,22)*c(4)*c(22);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,23)*c(4)*c(23);
	coll_evap_2d(4,28) = coll_evap_2d(4,28)+K(4,24)*c(4)*c(24);
	coll_evap_2d(4,29) = coll_evap_2d(4,29)+K(4,25)*c(4)*c(25);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,26)*c(4)*c(26);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,27)*c(4)*c(27);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,28)*c(4)*c(28);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,29)*c(4)*c(29);
	coll_evap_2d(4,75) = coll_evap_2d(4,75)+K(4,30)*c(4)*c(30);
	coll_evap_2d(4,75) = coll_evap_2d(4,75)+K(4,31)*c(4)*c(31);
	coll_evap_2d(4,36) = coll_evap_2d(4,36)+K(4,32)*c(4)*c(32);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,33)*c(4)*c(33);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,34)*c(4)*c(34);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,35)*c(4)*c(35);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,36)*c(4)*c(36);
	coll_evap_2d(4,41) = coll_evap_2d(4,41)+K(4,37)*c(4)*c(37);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,38)*c(4)*c(38);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,39)*c(4)*c(39);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,40)*c(4)*c(40);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,41)*c(4)*c(41);
	coll_evap_2d(4,46) = coll_evap_2d(4,46)+K(4,42)*c(4)*c(42);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,43)*c(4)*c(43);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,44)*c(4)*c(44);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,45)*c(4)*c(45);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,46)*c(4)*c(46);
	coll_evap_2d(4,76) = coll_evap_2d(4,76)+K(4,47)*c(4)*c(47);
	coll_evap_2d(4,76) = coll_evap_2d(4,76)+K(4,48)*c(4)*c(48);
	coll_evap_2d(4,76) = coll_evap_2d(4,76)+K(4,49)*c(4)*c(49);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,50)*c(4)*c(50);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,51)*c(4)*c(51);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,52)*c(4)*c(52);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,53)*c(4)*c(53);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,54)*c(4)*c(54);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,55)*c(4)*c(55);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,56)*c(4)*c(56);
	coll_evap_2d(4,61) = coll_evap_2d(4,61)+K(4,57)*c(4)*c(57);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,58)*c(4)*c(58);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,59)*c(4)*c(59);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,60)*c(4)*c(60);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,61)*c(4)*c(61);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,62)*c(4)*c(62);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,63)*c(4)*c(63);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,64)*c(4)*c(64);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,65)*c(4)*c(65);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,66)*c(4)*c(66);
	coll_evap_2d(4,78) = coll_evap_2d(4,78)+K(4,67)*c(4)*c(67);
	coll_evap_2d(4,35) = coll_evap_2d(4,35)+K(4,68)*c(4)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*0.5*K(4,4)*c(4)*c(4);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,5)*c(4)*c(5);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,8)*c(4)*c(8);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,9)*c(4)*c(9);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,10)*c(4)*c(10);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,11)*c(4)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,14)*c(4)*c(14);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,15)*c(4)*c(15);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,16)*c(4)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,17)*c(4)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,20)*c(4)*c(20);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,21)*c(4)*c(21);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,22)*c(4)*c(22);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,23)*c(4)*c(23);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,26)*c(4)*c(26);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,27)*c(4)*c(27);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,28)*c(4)*c(28);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,29)*c(4)*c(29);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,33)*c(4)*c(33);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,34)*c(4)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,35)*c(4)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,36)*c(4)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,38)*c(4)*c(38);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,39)*c(4)*c(39);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,40)*c(4)*c(40);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,41)*c(4)*c(41);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,43)*c(4)*c(43);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,44)*c(4)*c(44);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,45)*c(4)*c(45);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,46)*c(4)*c(46);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,50)*c(4)*c(50);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,51)*c(4)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,52)*c(4)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,53)*c(4)*c(53);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,54)*c(4)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,55)*c(4)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,56)*c(4)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(4,58)*c(4)*c(58);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,59)*c(4)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,60)*c(4)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,61)*c(4)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,62)*c(4)*c(62);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,63)*c(4)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,64)*c(4)*c(64);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(4,65)*c(4)*c(65);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(4,66)*c(4)*c(66);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(4,67)*c(4)*c(67);
	% Evaporations resulting in this cluster
	coll_evap_2d(5,4) = coll_evap_2d(5,4)+E(1,4)*c(5);
	coll_evap_2d(10,4) = coll_evap_2d(10,4)+E(4,6)*c(10);
	coll_evap_2d(11,4) = coll_evap_2d(11,4)+E(4,7)*c(11);
	coll_evap_2d(16,4) = coll_evap_2d(16,4)+E(4,12)*c(16);
	coll_evap_2d(17,4) = coll_evap_2d(17,4)+E(4,13)*c(17);
	coll_evap_2d(22,4) = coll_evap_2d(22,4)+E(4,18)*c(22);
	coll_evap_2d(23,4) = coll_evap_2d(23,4)+E(4,19)*c(23);
	coll_evap_2d(28,4) = coll_evap_2d(28,4)+E(4,24)*c(28);
	coll_evap_2d(29,4) = coll_evap_2d(29,4)+E(4,25)*c(29);
	coll_evap_2d(36,4) = coll_evap_2d(36,4)+E(4,32)*c(36);
	coll_evap_2d(41,4) = coll_evap_2d(41,4)+E(4,37)*c(41);
	coll_evap_2d(46,4) = coll_evap_2d(46,4)+E(4,42)*c(46);
	coll_evap_2d(61,4) = coll_evap_2d(61,4)+E(4,57)*c(61);
	% External losses
	coll_evap_2d(4,71) = coll_evap_2d(4,71)+CS(4)*c(4);

% Cluster 5: 5A
	% Collisions removing this cluster
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(1,5)*c(5)*c(1);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+K(1,5)*c(5)*c(1);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(2,5)*c(5)*c(2);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+K(2,5)*c(5)*c(2);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(3,5)*c(5)*c(3);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+K(3,5)*c(5)*c(3);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(4,5)*c(5)*c(4);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+K(4,5)*c(5)*c(4);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+2*0.5*K(5,5)*c(5)*c(5);
	coll_evap_2d(78,5) = coll_evap_2d(78,5)+0.5*K(5,5)*c(5)*c(5);
	coll_evap_2d(5,11) = coll_evap_2d(5,11)+K(5,6)*c(5)*c(6);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,7)*c(5)*c(7);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,8)*c(5)*c(8);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,9)*c(5)*c(9);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,10)*c(5)*c(10);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,11)*c(5)*c(11);
	coll_evap_2d(5,17) = coll_evap_2d(5,17)+K(5,12)*c(5)*c(12);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,13)*c(5)*c(13);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,14)*c(5)*c(14);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,15)*c(5)*c(15);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,16)*c(5)*c(16);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,17)*c(5)*c(17);
	coll_evap_2d(5,23) = coll_evap_2d(5,23)+K(5,18)*c(5)*c(18);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,19)*c(5)*c(19);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,20)*c(5)*c(20);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,21)*c(5)*c(21);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,22)*c(5)*c(22);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,23)*c(5)*c(23);
	coll_evap_2d(5,29) = coll_evap_2d(5,29)+K(5,24)*c(5)*c(24);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,25)*c(5)*c(25);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,26)*c(5)*c(26);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,27)*c(5)*c(27);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,28)*c(5)*c(28);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,29)*c(5)*c(29);
	coll_evap_2d(5,75) = coll_evap_2d(5,75)+K(5,30)*c(5)*c(30);
	coll_evap_2d(5,75) = coll_evap_2d(5,75)+K(5,31)*c(5)*c(31);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,32)*c(5)*c(32);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,33)*c(5)*c(33);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,34)*c(5)*c(34);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,35)*c(5)*c(35);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,36)*c(5)*c(36);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,37)*c(5)*c(37);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,38)*c(5)*c(38);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,39)*c(5)*c(39);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,40)*c(5)*c(40);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,41)*c(5)*c(41);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,42)*c(5)*c(42);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,43)*c(5)*c(43);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,44)*c(5)*c(44);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,45)*c(5)*c(45);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,46)*c(5)*c(46);
	coll_evap_2d(5,76) = coll_evap_2d(5,76)+K(5,47)*c(5)*c(47);
	coll_evap_2d(5,76) = coll_evap_2d(5,76)+K(5,48)*c(5)*c(48);
	coll_evap_2d(5,76) = coll_evap_2d(5,76)+K(5,49)*c(5)*c(49);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,50)*c(5)*c(50);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,51)*c(5)*c(51);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,52)*c(5)*c(52);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,53)*c(5)*c(53);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,54)*c(5)*c(54);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,55)*c(5)*c(55);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,56)*c(5)*c(56);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,57)*c(5)*c(57);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,58)*c(5)*c(58);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,59)*c(5)*c(59);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,60)*c(5)*c(60);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,61)*c(5)*c(61);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,62)*c(5)*c(62);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,63)*c(5)*c(63);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,64)*c(5)*c(64);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,65)*c(5)*c(65);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,66)*c(5)*c(66);
	coll_evap_2d(5,78) = coll_evap_2d(5,78)+K(5,67)*c(5)*c(67);
	coll_evap_2d(5,36) = coll_evap_2d(5,36)+K(5,68)*c(5)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*0.5*K(5,5)*c(5)*c(5);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(5,7)*c(5)*c(7);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,8)*c(5)*c(8);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,9)*c(5)*c(9);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,10)*c(5)*c(10);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,11)*c(5)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(5,13)*c(5)*c(13);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,14)*c(5)*c(14);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,15)*c(5)*c(15);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,16)*c(5)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,17)*c(5)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(5,19)*c(5)*c(19);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,20)*c(5)*c(20);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,21)*c(5)*c(21);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,22)*c(5)*c(22);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,23)*c(5)*c(23);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(5,25)*c(5)*c(25);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,26)*c(5)*c(26);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,27)*c(5)*c(27);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,28)*c(5)*c(28);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,29)*c(5)*c(29);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(5,32)*c(5)*c(32);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,33)*c(5)*c(33);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,34)*c(5)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,35)*c(5)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,36)*c(5)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(5,37)*c(5)*c(37);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,38)*c(5)*c(38);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,39)*c(5)*c(39);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,40)*c(5)*c(40);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,41)*c(5)*c(41);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(5,42)*c(5)*c(42);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,43)*c(5)*c(43);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,44)*c(5)*c(44);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,45)*c(5)*c(45);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,46)*c(5)*c(46);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,50)*c(5)*c(50);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,51)*c(5)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,52)*c(5)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,53)*c(5)*c(53);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,54)*c(5)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,55)*c(5)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,56)*c(5)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(5,57)*c(5)*c(57);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(5,58)*c(5)*c(58);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,59)*c(5)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,60)*c(5)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,61)*c(5)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,62)*c(5)*c(62);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,63)*c(5)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,64)*c(5)*c(64);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(5,65)*c(5)*c(65);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(5,66)*c(5)*c(66);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(5,67)*c(5)*c(67);
	% Evaporations resulting in this cluster
	coll_evap_2d(11,5) = coll_evap_2d(11,5)+E(5,6)*c(11);
	coll_evap_2d(17,5) = coll_evap_2d(17,5)+E(5,12)*c(17);
	coll_evap_2d(23,5) = coll_evap_2d(23,5)+E(5,18)*c(23);
	coll_evap_2d(29,5) = coll_evap_2d(29,5)+E(5,24)*c(29);
	% External losses
	coll_evap_2d(5,71) = coll_evap_2d(5,71)+CS(5)*c(5);

% Cluster 6: 1N
	% Collisions removing this cluster
	coll_evap_2d(6,7) = coll_evap_2d(6,7)+K(1,6)*c(6)*c(1);
	coll_evap_2d(6,8) = coll_evap_2d(6,8)+K(2,6)*c(6)*c(2);
	coll_evap_2d(6,9) = coll_evap_2d(6,9)+K(3,6)*c(6)*c(3);
	coll_evap_2d(6,10) = coll_evap_2d(6,10)+K(4,6)*c(6)*c(4);
	coll_evap_2d(6,11) = coll_evap_2d(6,11)+K(5,6)*c(6)*c(5);
	coll_evap_2d(6,12) = coll_evap_2d(6,12)+2*0.5*K(6,6)*c(6)*c(6);
	coll_evap_2d(6,13) = coll_evap_2d(6,13)+K(6,7)*c(6)*c(7);
	coll_evap_2d(6,14) = coll_evap_2d(6,14)+K(6,8)*c(6)*c(8);
	coll_evap_2d(6,15) = coll_evap_2d(6,15)+K(6,9)*c(6)*c(9);
	coll_evap_2d(6,16) = coll_evap_2d(6,16)+K(6,10)*c(6)*c(10);
	coll_evap_2d(6,17) = coll_evap_2d(6,17)+K(6,11)*c(6)*c(11);
	coll_evap_2d(6,18) = coll_evap_2d(6,18)+K(6,12)*c(6)*c(12);
	coll_evap_2d(6,19) = coll_evap_2d(6,19)+K(6,13)*c(6)*c(13);
	coll_evap_2d(6,20) = coll_evap_2d(6,20)+K(6,14)*c(6)*c(14);
	coll_evap_2d(6,21) = coll_evap_2d(6,21)+K(6,15)*c(6)*c(15);
	coll_evap_2d(6,22) = coll_evap_2d(6,22)+K(6,16)*c(6)*c(16);
	coll_evap_2d(6,23) = coll_evap_2d(6,23)+K(6,17)*c(6)*c(17);
	coll_evap_2d(6,24) = coll_evap_2d(6,24)+K(6,18)*c(6)*c(18);
	coll_evap_2d(6,25) = coll_evap_2d(6,25)+K(6,19)*c(6)*c(19);
	coll_evap_2d(6,26) = coll_evap_2d(6,26)+K(6,20)*c(6)*c(20);
	coll_evap_2d(6,27) = coll_evap_2d(6,27)+K(6,21)*c(6)*c(21);
	coll_evap_2d(6,28) = coll_evap_2d(6,28)+K(6,22)*c(6)*c(22);
	coll_evap_2d(6,29) = coll_evap_2d(6,29)+K(6,23)*c(6)*c(23);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,24)*c(6)*c(24);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,25)*c(6)*c(25);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,26)*c(6)*c(26);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,27)*c(6)*c(27);
	coll_evap_2d(6,30) = coll_evap_2d(6,30)+K(6,28)*c(6)*c(28);
	coll_evap_2d(6,31) = coll_evap_2d(6,31)+K(6,29)*c(6)*c(29);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,30)*c(6)*c(30);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,31)*c(6)*c(31);
	coll_evap_2d(6,37) = coll_evap_2d(6,37)+K(6,32)*c(6)*c(32);
	coll_evap_2d(6,38) = coll_evap_2d(6,38)+K(6,33)*c(6)*c(33);
	coll_evap_2d(6,39) = coll_evap_2d(6,39)+K(6,34)*c(6)*c(34);
	coll_evap_2d(6,40) = coll_evap_2d(6,40)+K(6,35)*c(6)*c(35);
	coll_evap_2d(6,41) = coll_evap_2d(6,41)+K(6,36)*c(6)*c(36);
	coll_evap_2d(6,42) = coll_evap_2d(6,42)+K(6,37)*c(6)*c(37);
	coll_evap_2d(6,43) = coll_evap_2d(6,43)+K(6,38)*c(6)*c(38);
	coll_evap_2d(6,44) = coll_evap_2d(6,44)+K(6,39)*c(6)*c(39);
	coll_evap_2d(6,45) = coll_evap_2d(6,45)+K(6,40)*c(6)*c(40);
	coll_evap_2d(6,46) = coll_evap_2d(6,46)+K(6,41)*c(6)*c(41);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,42)*c(6)*c(42);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,43)*c(6)*c(43);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,44)*c(6)*c(44);
	coll_evap_2d(6,47) = coll_evap_2d(6,47)+K(6,45)*c(6)*c(45);
	coll_evap_2d(6,48) = coll_evap_2d(6,48)+K(6,46)*c(6)*c(46);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,47)*c(6)*c(47);
	coll_evap_2d(6,49) = coll_evap_2d(6,49)+K(6,48)*c(6)*c(48);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,49)*c(6)*c(49);
	coll_evap_2d(6,53) = coll_evap_2d(6,53)+K(6,50)*c(6)*c(50);
	coll_evap_2d(6,54) = coll_evap_2d(6,54)+K(6,51)*c(6)*c(51);
	coll_evap_2d(6,55) = coll_evap_2d(6,55)+K(6,52)*c(6)*c(52);
	coll_evap_2d(6,57) = coll_evap_2d(6,57)+K(6,53)*c(6)*c(53);
	coll_evap_2d(6,58) = coll_evap_2d(6,58)+K(6,54)*c(6)*c(54);
	coll_evap_2d(6,59) = coll_evap_2d(6,59)+K(6,55)*c(6)*c(55);
	coll_evap_2d(6,60) = coll_evap_2d(6,60)+K(6,56)*c(6)*c(56);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,57)*c(6)*c(57);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,58)*c(6)*c(58);
	coll_evap_2d(6,62) = coll_evap_2d(6,62)+K(6,59)*c(6)*c(59);
	coll_evap_2d(6,63) = coll_evap_2d(6,63)+K(6,60)*c(6)*c(60);
	coll_evap_2d(6,64) = coll_evap_2d(6,64)+K(6,61)*c(6)*c(61);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,62)*c(6)*c(62);
	coll_evap_2d(6,65) = coll_evap_2d(6,65)+K(6,63)*c(6)*c(63);
	coll_evap_2d(6,66) = coll_evap_2d(6,66)+K(6,64)*c(6)*c(64);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,65)*c(6)*c(65);
	coll_evap_2d(6,78) = coll_evap_2d(6,78)+K(6,66)*c(6)*c(66);
	coll_evap_2d(6,77) = coll_evap_2d(6,77)+K(6,67)*c(6)*c(67);
	coll_evap_2d(6,50) = coll_evap_2d(6,50)+K(6,69)*c(6)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,24)*c(6)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,25)*c(6)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,26)*c(6)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,27)*c(6)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,30)*c(6)*c(30);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,31)*c(6)*c(31);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,42)*c(6)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,43)*c(6)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,44)*c(6)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,47)*c(6)*c(47);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,49)*c(6)*c(49);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,57)*c(6)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,58)*c(6)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,62)*c(6)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,65)*c(6)*c(65);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(6,66)*c(6)*c(66);
	% Evaporations resulting in this cluster
	coll_evap_2d(7,6) = coll_evap_2d(7,6)+E(1,6)*c(7);
	coll_evap_2d(8,6) = coll_evap_2d(8,6)+E(2,6)*c(8);
	coll_evap_2d(9,6) = coll_evap_2d(9,6)+E(3,6)*c(9);
	coll_evap_2d(10,6) = coll_evap_2d(10,6)+E(4,6)*c(10);
	coll_evap_2d(11,6) = coll_evap_2d(11,6)+E(5,6)*c(11);
	coll_evap_2d(12,6) = coll_evap_2d(12,6)+2*E(6,6)*c(12);
	coll_evap_2d(13,6) = coll_evap_2d(13,6)+E(6,7)*c(13);
	coll_evap_2d(14,6) = coll_evap_2d(14,6)+E(6,8)*c(14);
	coll_evap_2d(15,6) = coll_evap_2d(15,6)+E(6,9)*c(15);
	coll_evap_2d(16,6) = coll_evap_2d(16,6)+E(6,10)*c(16);
	coll_evap_2d(17,6) = coll_evap_2d(17,6)+E(6,11)*c(17);
	coll_evap_2d(18,6) = coll_evap_2d(18,6)+E(6,12)*c(18);
	coll_evap_2d(19,6) = coll_evap_2d(19,6)+E(6,13)*c(19);
	coll_evap_2d(20,6) = coll_evap_2d(20,6)+E(6,14)*c(20);
	coll_evap_2d(21,6) = coll_evap_2d(21,6)+E(6,15)*c(21);
	coll_evap_2d(22,6) = coll_evap_2d(22,6)+E(6,16)*c(22);
	coll_evap_2d(23,6) = coll_evap_2d(23,6)+E(6,17)*c(23);
	coll_evap_2d(24,6) = coll_evap_2d(24,6)+E(6,18)*c(24);
	coll_evap_2d(25,6) = coll_evap_2d(25,6)+E(6,19)*c(25);
	coll_evap_2d(26,6) = coll_evap_2d(26,6)+E(6,20)*c(26);
	coll_evap_2d(27,6) = coll_evap_2d(27,6)+E(6,21)*c(27);
	coll_evap_2d(28,6) = coll_evap_2d(28,6)+E(6,22)*c(28);
	coll_evap_2d(29,6) = coll_evap_2d(29,6)+E(6,23)*c(29);
	coll_evap_2d(30,6) = coll_evap_2d(30,6)+E(6,28)*c(30);
	coll_evap_2d(31,6) = coll_evap_2d(31,6)+E(6,29)*c(31);
	coll_evap_2d(37,6) = coll_evap_2d(37,6)+E(6,32)*c(37);
	coll_evap_2d(38,6) = coll_evap_2d(38,6)+E(6,33)*c(38);
	coll_evap_2d(39,6) = coll_evap_2d(39,6)+E(6,34)*c(39);
	coll_evap_2d(40,6) = coll_evap_2d(40,6)+E(6,35)*c(40);
	coll_evap_2d(41,6) = coll_evap_2d(41,6)+E(6,36)*c(41);
	coll_evap_2d(42,6) = coll_evap_2d(42,6)+E(6,37)*c(42);
	coll_evap_2d(43,6) = coll_evap_2d(43,6)+E(6,38)*c(43);
	coll_evap_2d(44,6) = coll_evap_2d(44,6)+E(6,39)*c(44);
	coll_evap_2d(45,6) = coll_evap_2d(45,6)+E(6,40)*c(45);
	coll_evap_2d(46,6) = coll_evap_2d(46,6)+E(6,41)*c(46);
	coll_evap_2d(47,6) = coll_evap_2d(47,6)+E(6,45)*c(47);
	coll_evap_2d(48,6) = coll_evap_2d(48,6)+E(6,46)*c(48);
	coll_evap_2d(49,6) = coll_evap_2d(49,6)+E(6,48)*c(49);
	coll_evap_2d(53,6) = coll_evap_2d(53,6)+E(6,50)*c(53);
	coll_evap_2d(54,6) = coll_evap_2d(54,6)+E(6,51)*c(54);
	coll_evap_2d(55,6) = coll_evap_2d(55,6)+E(6,52)*c(55);
	coll_evap_2d(57,6) = coll_evap_2d(57,6)+E(6,53)*c(57);
	coll_evap_2d(58,6) = coll_evap_2d(58,6)+E(6,54)*c(58);
	coll_evap_2d(59,6) = coll_evap_2d(59,6)+E(6,55)*c(59);
	coll_evap_2d(60,6) = coll_evap_2d(60,6)+E(6,56)*c(60);
	coll_evap_2d(62,6) = coll_evap_2d(62,6)+E(6,59)*c(62);
	coll_evap_2d(63,6) = coll_evap_2d(63,6)+E(6,60)*c(63);
	coll_evap_2d(64,6) = coll_evap_2d(64,6)+E(6,61)*c(64);
	coll_evap_2d(65,6) = coll_evap_2d(65,6)+E(6,63)*c(65);
	coll_evap_2d(66,6) = coll_evap_2d(66,6)+E(6,64)*c(66);
	% External losses
	coll_evap_2d(6,71) = coll_evap_2d(6,71)+CS(6)*c(6);

% Cluster 7: 1A1N
	% Collisions removing this cluster
	coll_evap_2d(7,8) = coll_evap_2d(7,8)+K(1,7)*c(7)*c(1);
	coll_evap_2d(7,9) = coll_evap_2d(7,9)+K(2,7)*c(7)*c(2);
	coll_evap_2d(7,10) = coll_evap_2d(7,10)+K(3,7)*c(7)*c(3);
	coll_evap_2d(7,11) = coll_evap_2d(7,11)+K(4,7)*c(7)*c(4);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(5,7)*c(7)*c(5);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(5,7)*c(7)*c(5);
	coll_evap_2d(7,13) = coll_evap_2d(7,13)+K(6,7)*c(7)*c(6);
	coll_evap_2d(7,14) = coll_evap_2d(7,14)+2*0.5*K(7,7)*c(7)*c(7);
	coll_evap_2d(7,15) = coll_evap_2d(7,15)+K(7,8)*c(7)*c(8);
	coll_evap_2d(7,16) = coll_evap_2d(7,16)+K(7,9)*c(7)*c(9);
	coll_evap_2d(7,17) = coll_evap_2d(7,17)+K(7,10)*c(7)*c(10);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,11)*c(7)*c(11);
	coll_evap_2d(7,19) = coll_evap_2d(7,19)+K(7,12)*c(7)*c(12);
	coll_evap_2d(7,20) = coll_evap_2d(7,20)+K(7,13)*c(7)*c(13);
	coll_evap_2d(7,21) = coll_evap_2d(7,21)+K(7,14)*c(7)*c(14);
	coll_evap_2d(7,22) = coll_evap_2d(7,22)+K(7,15)*c(7)*c(15);
	coll_evap_2d(7,23) = coll_evap_2d(7,23)+K(7,16)*c(7)*c(16);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,17)*c(7)*c(17);
	coll_evap_2d(7,25) = coll_evap_2d(7,25)+K(7,18)*c(7)*c(18);
	coll_evap_2d(7,26) = coll_evap_2d(7,26)+K(7,19)*c(7)*c(19);
	coll_evap_2d(7,27) = coll_evap_2d(7,27)+K(7,20)*c(7)*c(20);
	coll_evap_2d(7,28) = coll_evap_2d(7,28)+K(7,21)*c(7)*c(21);
	coll_evap_2d(7,29) = coll_evap_2d(7,29)+K(7,22)*c(7)*c(22);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,23)*c(7)*c(23);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,24)*c(7)*c(24);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,25)*c(7)*c(25);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,26)*c(7)*c(26);
	coll_evap_2d(7,30) = coll_evap_2d(7,30)+K(7,27)*c(7)*c(27);
	coll_evap_2d(7,31) = coll_evap_2d(7,31)+K(7,28)*c(7)*c(28);
	coll_evap_2d(7,75) = coll_evap_2d(7,75)+K(7,29)*c(7)*c(29);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,30)*c(7)*c(30);
	coll_evap_2d(7,75) = coll_evap_2d(7,75)+K(7,31)*c(7)*c(31);
	coll_evap_2d(7,38) = coll_evap_2d(7,38)+K(7,32)*c(7)*c(32);
	coll_evap_2d(7,39) = coll_evap_2d(7,39)+K(7,33)*c(7)*c(33);
	coll_evap_2d(7,40) = coll_evap_2d(7,40)+K(7,34)*c(7)*c(34);
	coll_evap_2d(7,41) = coll_evap_2d(7,41)+K(7,35)*c(7)*c(35);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,36)*c(7)*c(36);
	coll_evap_2d(7,43) = coll_evap_2d(7,43)+K(7,37)*c(7)*c(37);
	coll_evap_2d(7,44) = coll_evap_2d(7,44)+K(7,38)*c(7)*c(38);
	coll_evap_2d(7,45) = coll_evap_2d(7,45)+K(7,39)*c(7)*c(39);
	coll_evap_2d(7,46) = coll_evap_2d(7,46)+K(7,40)*c(7)*c(40);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,41)*c(7)*c(41);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,42)*c(7)*c(42);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,43)*c(7)*c(43);
	coll_evap_2d(7,47) = coll_evap_2d(7,47)+K(7,44)*c(7)*c(44);
	coll_evap_2d(7,48) = coll_evap_2d(7,48)+K(7,45)*c(7)*c(45);
	coll_evap_2d(7,76) = coll_evap_2d(7,76)+K(7,46)*c(7)*c(46);
	coll_evap_2d(7,49) = coll_evap_2d(7,49)+K(7,47)*c(7)*c(47);
	coll_evap_2d(7,76) = coll_evap_2d(7,76)+K(7,48)*c(7)*c(48);
	coll_evap_2d(7,76) = coll_evap_2d(7,76)+K(7,49)*c(7)*c(49);
	coll_evap_2d(7,54) = coll_evap_2d(7,54)+K(7,50)*c(7)*c(50);
	coll_evap_2d(7,55) = coll_evap_2d(7,55)+K(7,51)*c(7)*c(51);
	coll_evap_2d(7,56) = coll_evap_2d(7,56)+K(7,52)*c(7)*c(52);
	coll_evap_2d(7,58) = coll_evap_2d(7,58)+K(7,53)*c(7)*c(53);
	coll_evap_2d(7,59) = coll_evap_2d(7,59)+K(7,54)*c(7)*c(54);
	coll_evap_2d(7,60) = coll_evap_2d(7,60)+K(7,55)*c(7)*c(55);
	coll_evap_2d(7,61) = coll_evap_2d(7,61)+K(7,56)*c(7)*c(56);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,57)*c(7)*c(57);
	coll_evap_2d(7,62) = coll_evap_2d(7,62)+K(7,58)*c(7)*c(58);
	coll_evap_2d(7,63) = coll_evap_2d(7,63)+K(7,59)*c(7)*c(59);
	coll_evap_2d(7,64) = coll_evap_2d(7,64)+K(7,60)*c(7)*c(60);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,61)*c(7)*c(61);
	coll_evap_2d(7,65) = coll_evap_2d(7,65)+K(7,62)*c(7)*c(62);
	coll_evap_2d(7,66) = coll_evap_2d(7,66)+K(7,63)*c(7)*c(63);
	coll_evap_2d(7,67) = coll_evap_2d(7,67)+K(7,64)*c(7)*c(64);
	coll_evap_2d(7,78) = coll_evap_2d(7,78)+K(7,65)*c(7)*c(65);
	coll_evap_2d(7,77) = coll_evap_2d(7,77)+K(7,66)*c(7)*c(66);
	coll_evap_2d(7,77) = coll_evap_2d(7,77)+K(7,67)*c(7)*c(67);
	coll_evap_2d(7,37) = coll_evap_2d(7,37)+K(7,68)*c(7)*c(68);
	coll_evap_2d(7,51) = coll_evap_2d(7,51)+K(7,69)*c(7)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(7,11)*c(7)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(7,17)*c(7)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(7,23)*c(7)*c(23);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(7,24)*c(7)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(7,25)*c(7)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(7,26)*c(7)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(7,30)*c(7)*c(30);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(7,36)*c(7)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(7,41)*c(7)*c(41);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(7,42)*c(7)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(7,43)*c(7)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(7,57)*c(7)*c(57);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(7,61)*c(7)*c(61);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(7,65)*c(7)*c(65);
	% Evaporations resulting in this cluster
	coll_evap_2d(8,7) = coll_evap_2d(8,7)+E(1,7)*c(8);
	coll_evap_2d(9,7) = coll_evap_2d(9,7)+E(2,7)*c(9);
	coll_evap_2d(10,7) = coll_evap_2d(10,7)+E(3,7)*c(10);
	coll_evap_2d(11,7) = coll_evap_2d(11,7)+E(4,7)*c(11);
	coll_evap_2d(13,7) = coll_evap_2d(13,7)+E(6,7)*c(13);
	coll_evap_2d(14,7) = coll_evap_2d(14,7)+2*E(7,7)*c(14);
	coll_evap_2d(15,7) = coll_evap_2d(15,7)+E(7,8)*c(15);
	coll_evap_2d(16,7) = coll_evap_2d(16,7)+E(7,9)*c(16);
	coll_evap_2d(17,7) = coll_evap_2d(17,7)+E(7,10)*c(17);
	coll_evap_2d(19,7) = coll_evap_2d(19,7)+E(7,12)*c(19);
	coll_evap_2d(20,7) = coll_evap_2d(20,7)+E(7,13)*c(20);
	coll_evap_2d(21,7) = coll_evap_2d(21,7)+E(7,14)*c(21);
	coll_evap_2d(22,7) = coll_evap_2d(22,7)+E(7,15)*c(22);
	coll_evap_2d(23,7) = coll_evap_2d(23,7)+E(7,16)*c(23);
	coll_evap_2d(25,7) = coll_evap_2d(25,7)+E(7,18)*c(25);
	coll_evap_2d(26,7) = coll_evap_2d(26,7)+E(7,19)*c(26);
	coll_evap_2d(27,7) = coll_evap_2d(27,7)+E(7,20)*c(27);
	coll_evap_2d(28,7) = coll_evap_2d(28,7)+E(7,21)*c(28);
	coll_evap_2d(29,7) = coll_evap_2d(29,7)+E(7,22)*c(29);
	coll_evap_2d(30,7) = coll_evap_2d(30,7)+E(7,27)*c(30);
	coll_evap_2d(31,7) = coll_evap_2d(31,7)+E(7,28)*c(31);
	coll_evap_2d(38,7) = coll_evap_2d(38,7)+E(7,32)*c(38);
	coll_evap_2d(39,7) = coll_evap_2d(39,7)+E(7,33)*c(39);
	coll_evap_2d(40,7) = coll_evap_2d(40,7)+E(7,34)*c(40);
	coll_evap_2d(41,7) = coll_evap_2d(41,7)+E(7,35)*c(41);
	coll_evap_2d(43,7) = coll_evap_2d(43,7)+E(7,37)*c(43);
	coll_evap_2d(44,7) = coll_evap_2d(44,7)+E(7,38)*c(44);
	coll_evap_2d(45,7) = coll_evap_2d(45,7)+E(7,39)*c(45);
	coll_evap_2d(46,7) = coll_evap_2d(46,7)+E(7,40)*c(46);
	coll_evap_2d(47,7) = coll_evap_2d(47,7)+E(7,44)*c(47);
	coll_evap_2d(48,7) = coll_evap_2d(48,7)+E(7,45)*c(48);
	coll_evap_2d(49,7) = coll_evap_2d(49,7)+E(7,47)*c(49);
	coll_evap_2d(54,7) = coll_evap_2d(54,7)+E(7,50)*c(54);
	coll_evap_2d(55,7) = coll_evap_2d(55,7)+E(7,51)*c(55);
	coll_evap_2d(56,7) = coll_evap_2d(56,7)+E(7,52)*c(56);
	coll_evap_2d(58,7) = coll_evap_2d(58,7)+E(7,53)*c(58);
	coll_evap_2d(59,7) = coll_evap_2d(59,7)+E(7,54)*c(59);
	coll_evap_2d(60,7) = coll_evap_2d(60,7)+E(7,55)*c(60);
	coll_evap_2d(61,7) = coll_evap_2d(61,7)+E(7,56)*c(61);
	coll_evap_2d(62,7) = coll_evap_2d(62,7)+E(7,58)*c(62);
	coll_evap_2d(63,7) = coll_evap_2d(63,7)+E(7,59)*c(63);
	coll_evap_2d(64,7) = coll_evap_2d(64,7)+E(7,60)*c(64);
	coll_evap_2d(65,7) = coll_evap_2d(65,7)+E(7,62)*c(65);
	coll_evap_2d(66,7) = coll_evap_2d(66,7)+E(7,63)*c(66);
	coll_evap_2d(67,7) = coll_evap_2d(67,7)+E(7,64)*c(67);
	% External losses
	coll_evap_2d(7,71) = coll_evap_2d(7,71)+CS(7)*c(7);

% Cluster 8: 2A1N
	% Collisions removing this cluster
	coll_evap_2d(8,9) = coll_evap_2d(8,9)+K(1,8)*c(8)*c(1);
	coll_evap_2d(8,10) = coll_evap_2d(8,10)+K(2,8)*c(8)*c(2);
	coll_evap_2d(8,11) = coll_evap_2d(8,11)+K(3,8)*c(8)*c(3);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(4,8)*c(8)*c(4);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(4,8)*c(8)*c(4);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(5,8)*c(8)*c(5);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(5,8)*c(8)*c(5);
	coll_evap_2d(8,14) = coll_evap_2d(8,14)+K(6,8)*c(8)*c(6);
	coll_evap_2d(8,15) = coll_evap_2d(8,15)+K(7,8)*c(8)*c(7);
	coll_evap_2d(8,16) = coll_evap_2d(8,16)+2*0.5*K(8,8)*c(8)*c(8);
	coll_evap_2d(8,17) = coll_evap_2d(8,17)+K(8,9)*c(8)*c(9);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,10)*c(8)*c(10);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,11)*c(8)*c(11);
	coll_evap_2d(8,20) = coll_evap_2d(8,20)+K(8,12)*c(8)*c(12);
	coll_evap_2d(8,21) = coll_evap_2d(8,21)+K(8,13)*c(8)*c(13);
	coll_evap_2d(8,22) = coll_evap_2d(8,22)+K(8,14)*c(8)*c(14);
	coll_evap_2d(8,23) = coll_evap_2d(8,23)+K(8,15)*c(8)*c(15);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,16)*c(8)*c(16);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,17)*c(8)*c(17);
	coll_evap_2d(8,26) = coll_evap_2d(8,26)+K(8,18)*c(8)*c(18);
	coll_evap_2d(8,27) = coll_evap_2d(8,27)+K(8,19)*c(8)*c(19);
	coll_evap_2d(8,28) = coll_evap_2d(8,28)+K(8,20)*c(8)*c(20);
	coll_evap_2d(8,29) = coll_evap_2d(8,29)+K(8,21)*c(8)*c(21);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,22)*c(8)*c(22);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,23)*c(8)*c(23);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,24)*c(8)*c(24);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,25)*c(8)*c(25);
	coll_evap_2d(8,30) = coll_evap_2d(8,30)+K(8,26)*c(8)*c(26);
	coll_evap_2d(8,31) = coll_evap_2d(8,31)+K(8,27)*c(8)*c(27);
	coll_evap_2d(8,75) = coll_evap_2d(8,75)+K(8,28)*c(8)*c(28);
	coll_evap_2d(8,75) = coll_evap_2d(8,75)+K(8,29)*c(8)*c(29);
	coll_evap_2d(8,75) = coll_evap_2d(8,75)+K(8,30)*c(8)*c(30);
	coll_evap_2d(8,75) = coll_evap_2d(8,75)+K(8,31)*c(8)*c(31);
	coll_evap_2d(8,39) = coll_evap_2d(8,39)+K(8,32)*c(8)*c(32);
	coll_evap_2d(8,40) = coll_evap_2d(8,40)+K(8,33)*c(8)*c(33);
	coll_evap_2d(8,41) = coll_evap_2d(8,41)+K(8,34)*c(8)*c(34);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,35)*c(8)*c(35);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,36)*c(8)*c(36);
	coll_evap_2d(8,44) = coll_evap_2d(8,44)+K(8,37)*c(8)*c(37);
	coll_evap_2d(8,45) = coll_evap_2d(8,45)+K(8,38)*c(8)*c(38);
	coll_evap_2d(8,46) = coll_evap_2d(8,46)+K(8,39)*c(8)*c(39);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,40)*c(8)*c(40);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,41)*c(8)*c(41);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,42)*c(8)*c(42);
	coll_evap_2d(8,47) = coll_evap_2d(8,47)+K(8,43)*c(8)*c(43);
	coll_evap_2d(8,48) = coll_evap_2d(8,48)+K(8,44)*c(8)*c(44);
	coll_evap_2d(8,76) = coll_evap_2d(8,76)+K(8,45)*c(8)*c(45);
	coll_evap_2d(8,76) = coll_evap_2d(8,76)+K(8,46)*c(8)*c(46);
	coll_evap_2d(8,76) = coll_evap_2d(8,76)+K(8,47)*c(8)*c(47);
	coll_evap_2d(8,76) = coll_evap_2d(8,76)+K(8,48)*c(8)*c(48);
	coll_evap_2d(8,76) = coll_evap_2d(8,76)+K(8,49)*c(8)*c(49);
	coll_evap_2d(8,55) = coll_evap_2d(8,55)+K(8,50)*c(8)*c(50);
	coll_evap_2d(8,56) = coll_evap_2d(8,56)+K(8,51)*c(8)*c(51);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,52)*c(8)*c(52);
	coll_evap_2d(8,59) = coll_evap_2d(8,59)+K(8,53)*c(8)*c(53);
	coll_evap_2d(8,60) = coll_evap_2d(8,60)+K(8,54)*c(8)*c(54);
	coll_evap_2d(8,61) = coll_evap_2d(8,61)+K(8,55)*c(8)*c(55);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,56)*c(8)*c(56);
	coll_evap_2d(8,62) = coll_evap_2d(8,62)+K(8,57)*c(8)*c(57);
	coll_evap_2d(8,63) = coll_evap_2d(8,63)+K(8,58)*c(8)*c(58);
	coll_evap_2d(8,64) = coll_evap_2d(8,64)+K(8,59)*c(8)*c(59);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,60)*c(8)*c(60);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,61)*c(8)*c(61);
	coll_evap_2d(8,66) = coll_evap_2d(8,66)+K(8,62)*c(8)*c(62);
	coll_evap_2d(8,67) = coll_evap_2d(8,67)+K(8,63)*c(8)*c(63);
	coll_evap_2d(8,78) = coll_evap_2d(8,78)+K(8,64)*c(8)*c(64);
	coll_evap_2d(8,77) = coll_evap_2d(8,77)+K(8,65)*c(8)*c(65);
	coll_evap_2d(8,77) = coll_evap_2d(8,77)+K(8,66)*c(8)*c(66);
	coll_evap_2d(8,77) = coll_evap_2d(8,77)+K(8,67)*c(8)*c(67);
	coll_evap_2d(8,38) = coll_evap_2d(8,38)+K(8,68)*c(8)*c(68);
	coll_evap_2d(8,52) = coll_evap_2d(8,52)+K(8,69)*c(8)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,10)*c(8)*c(10);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(8,11)*c(8)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,16)*c(8)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(8,17)*c(8)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,22)*c(8)*c(22);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(8,23)*c(8)*c(23);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(8,24)*c(8)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(8,25)*c(8)*c(25);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,35)*c(8)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(8,36)*c(8)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,40)*c(8)*c(40);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(8,41)*c(8)*c(41);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(8,42)*c(8)*c(42);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,52)*c(8)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,56)*c(8)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,60)*c(8)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(8,61)*c(8)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(8,64)*c(8)*c(64);
	% Evaporations resulting in this cluster
	coll_evap_2d(9,8) = coll_evap_2d(9,8)+E(1,8)*c(9);
	coll_evap_2d(10,8) = coll_evap_2d(10,8)+E(2,8)*c(10);
	coll_evap_2d(11,8) = coll_evap_2d(11,8)+E(3,8)*c(11);
	coll_evap_2d(14,8) = coll_evap_2d(14,8)+E(6,8)*c(14);
	coll_evap_2d(15,8) = coll_evap_2d(15,8)+E(7,8)*c(15);
	coll_evap_2d(16,8) = coll_evap_2d(16,8)+2*E(8,8)*c(16);
	coll_evap_2d(17,8) = coll_evap_2d(17,8)+E(8,9)*c(17);
	coll_evap_2d(20,8) = coll_evap_2d(20,8)+E(8,12)*c(20);
	coll_evap_2d(21,8) = coll_evap_2d(21,8)+E(8,13)*c(21);
	coll_evap_2d(22,8) = coll_evap_2d(22,8)+E(8,14)*c(22);
	coll_evap_2d(23,8) = coll_evap_2d(23,8)+E(8,15)*c(23);
	coll_evap_2d(26,8) = coll_evap_2d(26,8)+E(8,18)*c(26);
	coll_evap_2d(27,8) = coll_evap_2d(27,8)+E(8,19)*c(27);
	coll_evap_2d(28,8) = coll_evap_2d(28,8)+E(8,20)*c(28);
	coll_evap_2d(29,8) = coll_evap_2d(29,8)+E(8,21)*c(29);
	coll_evap_2d(30,8) = coll_evap_2d(30,8)+E(8,26)*c(30);
	coll_evap_2d(31,8) = coll_evap_2d(31,8)+E(8,27)*c(31);
	coll_evap_2d(39,8) = coll_evap_2d(39,8)+E(8,32)*c(39);
	coll_evap_2d(40,8) = coll_evap_2d(40,8)+E(8,33)*c(40);
	coll_evap_2d(41,8) = coll_evap_2d(41,8)+E(8,34)*c(41);
	coll_evap_2d(44,8) = coll_evap_2d(44,8)+E(8,37)*c(44);
	coll_evap_2d(45,8) = coll_evap_2d(45,8)+E(8,38)*c(45);
	coll_evap_2d(46,8) = coll_evap_2d(46,8)+E(8,39)*c(46);
	coll_evap_2d(47,8) = coll_evap_2d(47,8)+E(8,43)*c(47);
	coll_evap_2d(48,8) = coll_evap_2d(48,8)+E(8,44)*c(48);
	coll_evap_2d(55,8) = coll_evap_2d(55,8)+E(8,50)*c(55);
	coll_evap_2d(56,8) = coll_evap_2d(56,8)+E(8,51)*c(56);
	coll_evap_2d(59,8) = coll_evap_2d(59,8)+E(8,53)*c(59);
	coll_evap_2d(60,8) = coll_evap_2d(60,8)+E(8,54)*c(60);
	coll_evap_2d(61,8) = coll_evap_2d(61,8)+E(8,55)*c(61);
	coll_evap_2d(62,8) = coll_evap_2d(62,8)+E(8,57)*c(62);
	coll_evap_2d(63,8) = coll_evap_2d(63,8)+E(8,58)*c(63);
	coll_evap_2d(64,8) = coll_evap_2d(64,8)+E(8,59)*c(64);
	coll_evap_2d(66,8) = coll_evap_2d(66,8)+E(8,62)*c(66);
	coll_evap_2d(67,8) = coll_evap_2d(67,8)+E(8,63)*c(67);
	% External losses
	coll_evap_2d(8,71) = coll_evap_2d(8,71)+CS(8)*c(8);

% Cluster 9: 3A1N
	% Collisions removing this cluster
	coll_evap_2d(9,10) = coll_evap_2d(9,10)+K(1,9)*c(9)*c(1);
	coll_evap_2d(9,11) = coll_evap_2d(9,11)+K(2,9)*c(9)*c(2);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(3,9)*c(9)*c(3);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(3,9)*c(9)*c(3);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(4,9)*c(9)*c(4);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(4,9)*c(9)*c(4);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(5,9)*c(9)*c(5);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(5,9)*c(9)*c(5);
	coll_evap_2d(9,15) = coll_evap_2d(9,15)+K(6,9)*c(9)*c(6);
	coll_evap_2d(9,16) = coll_evap_2d(9,16)+K(7,9)*c(9)*c(7);
	coll_evap_2d(9,17) = coll_evap_2d(9,17)+K(8,9)*c(9)*c(8);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+2*0.5*K(9,9)*c(9)*c(9);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+0.5*K(9,9)*c(9)*c(9);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,10)*c(9)*c(10);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,11)*c(9)*c(11);
	coll_evap_2d(9,21) = coll_evap_2d(9,21)+K(9,12)*c(9)*c(12);
	coll_evap_2d(9,22) = coll_evap_2d(9,22)+K(9,13)*c(9)*c(13);
	coll_evap_2d(9,23) = coll_evap_2d(9,23)+K(9,14)*c(9)*c(14);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,15)*c(9)*c(15);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,16)*c(9)*c(16);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,17)*c(9)*c(17);
	coll_evap_2d(9,27) = coll_evap_2d(9,27)+K(9,18)*c(9)*c(18);
	coll_evap_2d(9,28) = coll_evap_2d(9,28)+K(9,19)*c(9)*c(19);
	coll_evap_2d(9,29) = coll_evap_2d(9,29)+K(9,20)*c(9)*c(20);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,21)*c(9)*c(21);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,22)*c(9)*c(22);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,23)*c(9)*c(23);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,24)*c(9)*c(24);
	coll_evap_2d(9,30) = coll_evap_2d(9,30)+K(9,25)*c(9)*c(25);
	coll_evap_2d(9,31) = coll_evap_2d(9,31)+K(9,26)*c(9)*c(26);
	coll_evap_2d(9,75) = coll_evap_2d(9,75)+K(9,27)*c(9)*c(27);
	coll_evap_2d(9,75) = coll_evap_2d(9,75)+K(9,28)*c(9)*c(28);
	coll_evap_2d(9,75) = coll_evap_2d(9,75)+K(9,29)*c(9)*c(29);
	coll_evap_2d(9,75) = coll_evap_2d(9,75)+K(9,30)*c(9)*c(30);
	coll_evap_2d(9,75) = coll_evap_2d(9,75)+K(9,31)*c(9)*c(31);
	coll_evap_2d(9,40) = coll_evap_2d(9,40)+K(9,32)*c(9)*c(32);
	coll_evap_2d(9,41) = coll_evap_2d(9,41)+K(9,33)*c(9)*c(33);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,34)*c(9)*c(34);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,35)*c(9)*c(35);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,36)*c(9)*c(36);
	coll_evap_2d(9,45) = coll_evap_2d(9,45)+K(9,37)*c(9)*c(37);
	coll_evap_2d(9,46) = coll_evap_2d(9,46)+K(9,38)*c(9)*c(38);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,39)*c(9)*c(39);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,40)*c(9)*c(40);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,41)*c(9)*c(41);
	coll_evap_2d(9,47) = coll_evap_2d(9,47)+K(9,42)*c(9)*c(42);
	coll_evap_2d(9,48) = coll_evap_2d(9,48)+K(9,43)*c(9)*c(43);
	coll_evap_2d(9,76) = coll_evap_2d(9,76)+K(9,44)*c(9)*c(44);
	coll_evap_2d(9,76) = coll_evap_2d(9,76)+K(9,45)*c(9)*c(45);
	coll_evap_2d(9,76) = coll_evap_2d(9,76)+K(9,46)*c(9)*c(46);
	coll_evap_2d(9,76) = coll_evap_2d(9,76)+K(9,47)*c(9)*c(47);
	coll_evap_2d(9,76) = coll_evap_2d(9,76)+K(9,48)*c(9)*c(48);
	coll_evap_2d(9,76) = coll_evap_2d(9,76)+K(9,49)*c(9)*c(49);
	coll_evap_2d(9,56) = coll_evap_2d(9,56)+K(9,50)*c(9)*c(50);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,51)*c(9)*c(51);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,52)*c(9)*c(52);
	coll_evap_2d(9,60) = coll_evap_2d(9,60)+K(9,53)*c(9)*c(53);
	coll_evap_2d(9,61) = coll_evap_2d(9,61)+K(9,54)*c(9)*c(54);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,55)*c(9)*c(55);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,56)*c(9)*c(56);
	coll_evap_2d(9,63) = coll_evap_2d(9,63)+K(9,57)*c(9)*c(57);
	coll_evap_2d(9,64) = coll_evap_2d(9,64)+K(9,58)*c(9)*c(58);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,59)*c(9)*c(59);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,60)*c(9)*c(60);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,61)*c(9)*c(61);
	coll_evap_2d(9,67) = coll_evap_2d(9,67)+K(9,62)*c(9)*c(62);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,63)*c(9)*c(63);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,64)*c(9)*c(64);
	coll_evap_2d(9,77) = coll_evap_2d(9,77)+K(9,65)*c(9)*c(65);
	coll_evap_2d(9,77) = coll_evap_2d(9,77)+K(9,66)*c(9)*c(66);
	coll_evap_2d(9,77) = coll_evap_2d(9,77)+K(9,67)*c(9)*c(67);
	coll_evap_2d(9,39) = coll_evap_2d(9,39)+K(9,68)*c(9)*c(68);
	coll_evap_2d(9,78) = coll_evap_2d(9,78)+K(9,69)*c(9)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+0.5*K(9,9)*c(9)*c(9);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,10)*c(9)*c(10);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(9,11)*c(9)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,15)*c(9)*c(15);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,16)*c(9)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(9,17)*c(9)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,21)*c(9)*c(21);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,22)*c(9)*c(22);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(9,23)*c(9)*c(23);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(9,24)*c(9)*c(24);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,34)*c(9)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,35)*c(9)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(9,36)*c(9)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,39)*c(9)*c(39);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,40)*c(9)*c(40);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(9,41)*c(9)*c(41);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,51)*c(9)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,52)*c(9)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,55)*c(9)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,56)*c(9)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,59)*c(9)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,60)*c(9)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(9,61)*c(9)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,63)*c(9)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(9,64)*c(9)*c(64);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(9,69)*c(9)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(10,9) = coll_evap_2d(10,9)+E(1,9)*c(10);
	coll_evap_2d(11,9) = coll_evap_2d(11,9)+E(2,9)*c(11);
	coll_evap_2d(15,9) = coll_evap_2d(15,9)+E(6,9)*c(15);
	coll_evap_2d(16,9) = coll_evap_2d(16,9)+E(7,9)*c(16);
	coll_evap_2d(17,9) = coll_evap_2d(17,9)+E(8,9)*c(17);
	coll_evap_2d(21,9) = coll_evap_2d(21,9)+E(9,12)*c(21);
	coll_evap_2d(22,9) = coll_evap_2d(22,9)+E(9,13)*c(22);
	coll_evap_2d(23,9) = coll_evap_2d(23,9)+E(9,14)*c(23);
	coll_evap_2d(27,9) = coll_evap_2d(27,9)+E(9,18)*c(27);
	coll_evap_2d(28,9) = coll_evap_2d(28,9)+E(9,19)*c(28);
	coll_evap_2d(29,9) = coll_evap_2d(29,9)+E(9,20)*c(29);
	coll_evap_2d(30,9) = coll_evap_2d(30,9)+E(9,25)*c(30);
	coll_evap_2d(31,9) = coll_evap_2d(31,9)+E(9,26)*c(31);
	coll_evap_2d(40,9) = coll_evap_2d(40,9)+E(9,32)*c(40);
	coll_evap_2d(41,9) = coll_evap_2d(41,9)+E(9,33)*c(41);
	coll_evap_2d(45,9) = coll_evap_2d(45,9)+E(9,37)*c(45);
	coll_evap_2d(46,9) = coll_evap_2d(46,9)+E(9,38)*c(46);
	coll_evap_2d(47,9) = coll_evap_2d(47,9)+E(9,42)*c(47);
	coll_evap_2d(48,9) = coll_evap_2d(48,9)+E(9,43)*c(48);
	coll_evap_2d(56,9) = coll_evap_2d(56,9)+E(9,50)*c(56);
	coll_evap_2d(60,9) = coll_evap_2d(60,9)+E(9,53)*c(60);
	coll_evap_2d(61,9) = coll_evap_2d(61,9)+E(9,54)*c(61);
	coll_evap_2d(63,9) = coll_evap_2d(63,9)+E(9,57)*c(63);
	coll_evap_2d(64,9) = coll_evap_2d(64,9)+E(9,58)*c(64);
	coll_evap_2d(67,9) = coll_evap_2d(67,9)+E(9,62)*c(67);
	% External losses
	coll_evap_2d(9,71) = coll_evap_2d(9,71)+CS(9)*c(9);

% Cluster 10: 4A1N
	% Collisions removing this cluster
	coll_evap_2d(10,11) = coll_evap_2d(10,11)+K(1,10)*c(10)*c(1);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(2,10)*c(10)*c(2);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(2,10)*c(10)*c(2);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(3,10)*c(10)*c(3);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(3,10)*c(10)*c(3);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(4,10)*c(10)*c(4);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(4,10)*c(10)*c(4);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(5,10)*c(10)*c(5);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(5,10)*c(10)*c(5);
	coll_evap_2d(10,16) = coll_evap_2d(10,16)+K(6,10)*c(10)*c(6);
	coll_evap_2d(10,17) = coll_evap_2d(10,17)+K(7,10)*c(10)*c(7);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(8,10)*c(10)*c(8);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(8,10)*c(10)*c(8);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(9,10)*c(10)*c(9);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(9,10)*c(10)*c(9);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+2*0.5*K(10,10)*c(10)*c(10);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+0.5*K(10,10)*c(10)*c(10);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,11)*c(10)*c(11);
	coll_evap_2d(10,22) = coll_evap_2d(10,22)+K(10,12)*c(10)*c(12);
	coll_evap_2d(10,23) = coll_evap_2d(10,23)+K(10,13)*c(10)*c(13);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,14)*c(10)*c(14);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,15)*c(10)*c(15);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,16)*c(10)*c(16);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,17)*c(10)*c(17);
	coll_evap_2d(10,28) = coll_evap_2d(10,28)+K(10,18)*c(10)*c(18);
	coll_evap_2d(10,29) = coll_evap_2d(10,29)+K(10,19)*c(10)*c(19);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,20)*c(10)*c(20);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,21)*c(10)*c(21);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,22)*c(10)*c(22);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,23)*c(10)*c(23);
	coll_evap_2d(10,30) = coll_evap_2d(10,30)+K(10,24)*c(10)*c(24);
	coll_evap_2d(10,31) = coll_evap_2d(10,31)+K(10,25)*c(10)*c(25);
	coll_evap_2d(10,75) = coll_evap_2d(10,75)+K(10,26)*c(10)*c(26);
	coll_evap_2d(10,75) = coll_evap_2d(10,75)+K(10,27)*c(10)*c(27);
	coll_evap_2d(10,75) = coll_evap_2d(10,75)+K(10,28)*c(10)*c(28);
	coll_evap_2d(10,75) = coll_evap_2d(10,75)+K(10,29)*c(10)*c(29);
	coll_evap_2d(10,75) = coll_evap_2d(10,75)+K(10,30)*c(10)*c(30);
	coll_evap_2d(10,75) = coll_evap_2d(10,75)+K(10,31)*c(10)*c(31);
	coll_evap_2d(10,41) = coll_evap_2d(10,41)+K(10,32)*c(10)*c(32);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,33)*c(10)*c(33);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,34)*c(10)*c(34);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,35)*c(10)*c(35);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,36)*c(10)*c(36);
	coll_evap_2d(10,46) = coll_evap_2d(10,46)+K(10,37)*c(10)*c(37);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,38)*c(10)*c(38);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,39)*c(10)*c(39);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,40)*c(10)*c(40);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,41)*c(10)*c(41);
	coll_evap_2d(10,48) = coll_evap_2d(10,48)+K(10,42)*c(10)*c(42);
	coll_evap_2d(10,76) = coll_evap_2d(10,76)+K(10,43)*c(10)*c(43);
	coll_evap_2d(10,76) = coll_evap_2d(10,76)+K(10,44)*c(10)*c(44);
	coll_evap_2d(10,76) = coll_evap_2d(10,76)+K(10,45)*c(10)*c(45);
	coll_evap_2d(10,76) = coll_evap_2d(10,76)+K(10,46)*c(10)*c(46);
	coll_evap_2d(10,76) = coll_evap_2d(10,76)+K(10,47)*c(10)*c(47);
	coll_evap_2d(10,76) = coll_evap_2d(10,76)+K(10,48)*c(10)*c(48);
	coll_evap_2d(10,76) = coll_evap_2d(10,76)+K(10,49)*c(10)*c(49);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,50)*c(10)*c(50);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,51)*c(10)*c(51);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,52)*c(10)*c(52);
	coll_evap_2d(10,61) = coll_evap_2d(10,61)+K(10,53)*c(10)*c(53);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,54)*c(10)*c(54);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,55)*c(10)*c(55);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,56)*c(10)*c(56);
	coll_evap_2d(10,64) = coll_evap_2d(10,64)+K(10,57)*c(10)*c(57);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,58)*c(10)*c(58);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,59)*c(10)*c(59);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,60)*c(10)*c(60);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,61)*c(10)*c(61);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,62)*c(10)*c(62);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,63)*c(10)*c(63);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,64)*c(10)*c(64);
	coll_evap_2d(10,77) = coll_evap_2d(10,77)+K(10,65)*c(10)*c(65);
	coll_evap_2d(10,77) = coll_evap_2d(10,77)+K(10,66)*c(10)*c(66);
	coll_evap_2d(10,77) = coll_evap_2d(10,77)+K(10,67)*c(10)*c(67);
	coll_evap_2d(10,40) = coll_evap_2d(10,40)+K(10,68)*c(10)*c(68);
	coll_evap_2d(10,78) = coll_evap_2d(10,78)+K(10,69)*c(10)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*0.5*K(10,10)*c(10)*c(10);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(10,11)*c(10)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(10,14)*c(10)*c(14);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,15)*c(10)*c(15);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(10,16)*c(10)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(10,17)*c(10)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(10,20)*c(10)*c(20);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,21)*c(10)*c(21);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(10,22)*c(10)*c(22);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(10,23)*c(10)*c(23);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(10,33)*c(10)*c(33);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,34)*c(10)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(10,35)*c(10)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(10,36)*c(10)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(10,38)*c(10)*c(38);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,39)*c(10)*c(39);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(10,40)*c(10)*c(40);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(10,41)*c(10)*c(41);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(10,50)*c(10)*c(50);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,51)*c(10)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(10,52)*c(10)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(10,54)*c(10)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,55)*c(10)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(10,56)*c(10)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(10,58)*c(10)*c(58);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,59)*c(10)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(10,60)*c(10)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(10,61)*c(10)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(10,62)*c(10)*c(62);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,63)*c(10)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(10,64)*c(10)*c(64);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(10,69)*c(10)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(11,10) = coll_evap_2d(11,10)+E(1,10)*c(11);
	coll_evap_2d(16,10) = coll_evap_2d(16,10)+E(6,10)*c(16);
	coll_evap_2d(17,10) = coll_evap_2d(17,10)+E(7,10)*c(17);
	coll_evap_2d(22,10) = coll_evap_2d(22,10)+E(10,12)*c(22);
	coll_evap_2d(23,10) = coll_evap_2d(23,10)+E(10,13)*c(23);
	coll_evap_2d(28,10) = coll_evap_2d(28,10)+E(10,18)*c(28);
	coll_evap_2d(29,10) = coll_evap_2d(29,10)+E(10,19)*c(29);
	coll_evap_2d(30,10) = coll_evap_2d(30,10)+E(10,24)*c(30);
	coll_evap_2d(31,10) = coll_evap_2d(31,10)+E(10,25)*c(31);
	coll_evap_2d(41,10) = coll_evap_2d(41,10)+E(10,32)*c(41);
	coll_evap_2d(46,10) = coll_evap_2d(46,10)+E(10,37)*c(46);
	coll_evap_2d(48,10) = coll_evap_2d(48,10)+E(10,42)*c(48);
	coll_evap_2d(61,10) = coll_evap_2d(61,10)+E(10,53)*c(61);
	coll_evap_2d(64,10) = coll_evap_2d(64,10)+E(10,57)*c(64);
	% External losses
	coll_evap_2d(10,71) = coll_evap_2d(10,71)+CS(10)*c(10);

% Cluster 11: 5A1N
	% Collisions removing this cluster
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(1,11)*c(11)*c(1);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(1,11)*c(11)*c(1);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(2,11)*c(11)*c(2);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(2,11)*c(11)*c(2);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(3,11)*c(11)*c(3);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(3,11)*c(11)*c(3);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(4,11)*c(11)*c(4);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(4,11)*c(11)*c(4);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(5,11)*c(11)*c(5);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(5,11)*c(11)*c(5);
	coll_evap_2d(11,17) = coll_evap_2d(11,17)+K(6,11)*c(11)*c(6);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(7,11)*c(11)*c(7);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(7,11)*c(11)*c(7);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(8,11)*c(11)*c(8);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(8,11)*c(11)*c(8);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(9,11)*c(11)*c(9);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(9,11)*c(11)*c(9);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(10,11)*c(11)*c(10);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(10,11)*c(11)*c(10);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+2*0.5*K(11,11)*c(11)*c(11);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+0.5*K(11,11)*c(11)*c(11);
	coll_evap_2d(11,23) = coll_evap_2d(11,23)+K(11,12)*c(11)*c(12);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,13)*c(11)*c(13);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,14)*c(11)*c(14);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,15)*c(11)*c(15);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,16)*c(11)*c(16);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,17)*c(11)*c(17);
	coll_evap_2d(11,29) = coll_evap_2d(11,29)+K(11,18)*c(11)*c(18);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,19)*c(11)*c(19);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,20)*c(11)*c(20);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,21)*c(11)*c(21);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,22)*c(11)*c(22);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,23)*c(11)*c(23);
	coll_evap_2d(11,31) = coll_evap_2d(11,31)+K(11,24)*c(11)*c(24);
	coll_evap_2d(11,75) = coll_evap_2d(11,75)+K(11,25)*c(11)*c(25);
	coll_evap_2d(11,75) = coll_evap_2d(11,75)+K(11,26)*c(11)*c(26);
	coll_evap_2d(11,75) = coll_evap_2d(11,75)+K(11,27)*c(11)*c(27);
	coll_evap_2d(11,75) = coll_evap_2d(11,75)+K(11,28)*c(11)*c(28);
	coll_evap_2d(11,75) = coll_evap_2d(11,75)+K(11,29)*c(11)*c(29);
	coll_evap_2d(11,75) = coll_evap_2d(11,75)+K(11,30)*c(11)*c(30);
	coll_evap_2d(11,75) = coll_evap_2d(11,75)+K(11,31)*c(11)*c(31);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,32)*c(11)*c(32);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,33)*c(11)*c(33);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,34)*c(11)*c(34);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,35)*c(11)*c(35);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,36)*c(11)*c(36);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,37)*c(11)*c(37);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,38)*c(11)*c(38);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,39)*c(11)*c(39);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,40)*c(11)*c(40);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,41)*c(11)*c(41);
	coll_evap_2d(11,76) = coll_evap_2d(11,76)+K(11,42)*c(11)*c(42);
	coll_evap_2d(11,76) = coll_evap_2d(11,76)+K(11,43)*c(11)*c(43);
	coll_evap_2d(11,76) = coll_evap_2d(11,76)+K(11,44)*c(11)*c(44);
	coll_evap_2d(11,76) = coll_evap_2d(11,76)+K(11,45)*c(11)*c(45);
	coll_evap_2d(11,76) = coll_evap_2d(11,76)+K(11,46)*c(11)*c(46);
	coll_evap_2d(11,76) = coll_evap_2d(11,76)+K(11,47)*c(11)*c(47);
	coll_evap_2d(11,76) = coll_evap_2d(11,76)+K(11,48)*c(11)*c(48);
	coll_evap_2d(11,76) = coll_evap_2d(11,76)+K(11,49)*c(11)*c(49);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,50)*c(11)*c(50);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,51)*c(11)*c(51);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,52)*c(11)*c(52);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,53)*c(11)*c(53);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,54)*c(11)*c(54);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,55)*c(11)*c(55);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,56)*c(11)*c(56);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,57)*c(11)*c(57);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,58)*c(11)*c(58);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,59)*c(11)*c(59);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,60)*c(11)*c(60);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,61)*c(11)*c(61);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,62)*c(11)*c(62);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,63)*c(11)*c(63);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,64)*c(11)*c(64);
	coll_evap_2d(11,77) = coll_evap_2d(11,77)+K(11,65)*c(11)*c(65);
	coll_evap_2d(11,77) = coll_evap_2d(11,77)+K(11,66)*c(11)*c(66);
	coll_evap_2d(11,77) = coll_evap_2d(11,77)+K(11,67)*c(11)*c(67);
	coll_evap_2d(11,41) = coll_evap_2d(11,41)+K(11,68)*c(11)*c(68);
	coll_evap_2d(11,78) = coll_evap_2d(11,78)+K(11,69)*c(11)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*0.5*K(11,11)*c(11)*c(11);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(11,13)*c(11)*c(13);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(11,14)*c(11)*c(14);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,15)*c(11)*c(15);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(11,16)*c(11)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(11,17)*c(11)*c(17);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(11,19)*c(11)*c(19);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(11,20)*c(11)*c(20);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,21)*c(11)*c(21);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(11,22)*c(11)*c(22);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(11,23)*c(11)*c(23);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(11,32)*c(11)*c(32);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(11,33)*c(11)*c(33);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,34)*c(11)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(11,35)*c(11)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(11,36)*c(11)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(11,37)*c(11)*c(37);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(11,38)*c(11)*c(38);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,39)*c(11)*c(39);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(11,40)*c(11)*c(40);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(11,41)*c(11)*c(41);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(11,50)*c(11)*c(50);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,51)*c(11)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(11,52)*c(11)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(11,53)*c(11)*c(53);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(11,54)*c(11)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,55)*c(11)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(11,56)*c(11)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(11,57)*c(11)*c(57);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(11,58)*c(11)*c(58);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,59)*c(11)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(11,60)*c(11)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(11,61)*c(11)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(11,62)*c(11)*c(62);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,63)*c(11)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(11,64)*c(11)*c(64);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(11,69)*c(11)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(17,11) = coll_evap_2d(17,11)+E(6,11)*c(17);
	coll_evap_2d(23,11) = coll_evap_2d(23,11)+E(11,12)*c(23);
	coll_evap_2d(29,11) = coll_evap_2d(29,11)+E(11,18)*c(29);
	coll_evap_2d(31,11) = coll_evap_2d(31,11)+E(11,24)*c(31);
	% External losses
	coll_evap_2d(11,71) = coll_evap_2d(11,71)+CS(11)*c(11);

% Cluster 12: 2N
	% Collisions removing this cluster
	coll_evap_2d(12,13) = coll_evap_2d(12,13)+K(1,12)*c(12)*c(1);
	coll_evap_2d(12,14) = coll_evap_2d(12,14)+K(2,12)*c(12)*c(2);
	coll_evap_2d(12,15) = coll_evap_2d(12,15)+K(3,12)*c(12)*c(3);
	coll_evap_2d(12,16) = coll_evap_2d(12,16)+K(4,12)*c(12)*c(4);
	coll_evap_2d(12,17) = coll_evap_2d(12,17)+K(5,12)*c(12)*c(5);
	coll_evap_2d(12,18) = coll_evap_2d(12,18)+K(6,12)*c(12)*c(6);
	coll_evap_2d(12,19) = coll_evap_2d(12,19)+K(7,12)*c(12)*c(7);
	coll_evap_2d(12,20) = coll_evap_2d(12,20)+K(8,12)*c(12)*c(8);
	coll_evap_2d(12,21) = coll_evap_2d(12,21)+K(9,12)*c(12)*c(9);
	coll_evap_2d(12,22) = coll_evap_2d(12,22)+K(10,12)*c(12)*c(10);
	coll_evap_2d(12,23) = coll_evap_2d(12,23)+K(11,12)*c(12)*c(11);
	coll_evap_2d(12,24) = coll_evap_2d(12,24)+2*0.5*K(12,12)*c(12)*c(12);
	coll_evap_2d(12,25) = coll_evap_2d(12,25)+K(12,13)*c(12)*c(13);
	coll_evap_2d(12,26) = coll_evap_2d(12,26)+K(12,14)*c(12)*c(14);
	coll_evap_2d(12,27) = coll_evap_2d(12,27)+K(12,15)*c(12)*c(15);
	coll_evap_2d(12,28) = coll_evap_2d(12,28)+K(12,16)*c(12)*c(16);
	coll_evap_2d(12,29) = coll_evap_2d(12,29)+K(12,17)*c(12)*c(17);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,18)*c(12)*c(18);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,19)*c(12)*c(19);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,20)*c(12)*c(20);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,21)*c(12)*c(21);
	coll_evap_2d(12,30) = coll_evap_2d(12,30)+K(12,22)*c(12)*c(22);
	coll_evap_2d(12,31) = coll_evap_2d(12,31)+K(12,23)*c(12)*c(23);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,24)*c(12)*c(24);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,25)*c(12)*c(25);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,26)*c(12)*c(26);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,27)*c(12)*c(27);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,28)*c(12)*c(28);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,29)*c(12)*c(29);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,30)*c(12)*c(30);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,31)*c(12)*c(31);
	coll_evap_2d(12,42) = coll_evap_2d(12,42)+K(12,32)*c(12)*c(32);
	coll_evap_2d(12,43) = coll_evap_2d(12,43)+K(12,33)*c(12)*c(33);
	coll_evap_2d(12,44) = coll_evap_2d(12,44)+K(12,34)*c(12)*c(34);
	coll_evap_2d(12,45) = coll_evap_2d(12,45)+K(12,35)*c(12)*c(35);
	coll_evap_2d(12,46) = coll_evap_2d(12,46)+K(12,36)*c(12)*c(36);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,37)*c(12)*c(37);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,38)*c(12)*c(38);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,39)*c(12)*c(39);
	coll_evap_2d(12,47) = coll_evap_2d(12,47)+K(12,40)*c(12)*c(40);
	coll_evap_2d(12,48) = coll_evap_2d(12,48)+K(12,41)*c(12)*c(41);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,42)*c(12)*c(42);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,43)*c(12)*c(43);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,44)*c(12)*c(44);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,45)*c(12)*c(45);
	coll_evap_2d(12,49) = coll_evap_2d(12,49)+K(12,46)*c(12)*c(46);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,47)*c(12)*c(47);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,48)*c(12)*c(48);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,49)*c(12)*c(49);
	coll_evap_2d(12,57) = coll_evap_2d(12,57)+K(12,50)*c(12)*c(50);
	coll_evap_2d(12,58) = coll_evap_2d(12,58)+K(12,51)*c(12)*c(51);
	coll_evap_2d(12,59) = coll_evap_2d(12,59)+K(12,52)*c(12)*c(52);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,53)*c(12)*c(53);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,54)*c(12)*c(54);
	coll_evap_2d(12,62) = coll_evap_2d(12,62)+K(12,55)*c(12)*c(55);
	coll_evap_2d(12,63) = coll_evap_2d(12,63)+K(12,56)*c(12)*c(56);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,57)*c(12)*c(57);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,58)*c(12)*c(58);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,59)*c(12)*c(59);
	coll_evap_2d(12,65) = coll_evap_2d(12,65)+K(12,60)*c(12)*c(60);
	coll_evap_2d(12,66) = coll_evap_2d(12,66)+K(12,61)*c(12)*c(61);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,62)*c(12)*c(62);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,63)*c(12)*c(63);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,64)*c(12)*c(64);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,65)*c(12)*c(65);
	coll_evap_2d(12,78) = coll_evap_2d(12,78)+K(12,66)*c(12)*c(66);
	coll_evap_2d(12,77) = coll_evap_2d(12,77)+K(12,67)*c(12)*c(67);
	coll_evap_2d(12,53) = coll_evap_2d(12,53)+K(12,69)*c(12)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,18)*c(12)*c(18);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,19)*c(12)*c(19);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,20)*c(12)*c(20);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,21)*c(12)*c(21);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,24)*c(12)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,25)*c(12)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,26)*c(12)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,27)*c(12)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,28)*c(12)*c(28);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,29)*c(12)*c(29);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,30)*c(12)*c(30);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,31)*c(12)*c(31);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,37)*c(12)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,38)*c(12)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,39)*c(12)*c(39);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,42)*c(12)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,43)*c(12)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,44)*c(12)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,45)*c(12)*c(45);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,47)*c(12)*c(47);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,48)*c(12)*c(48);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,49)*c(12)*c(49);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,53)*c(12)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,54)*c(12)*c(54);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,57)*c(12)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,58)*c(12)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,59)*c(12)*c(59);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,62)*c(12)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,63)*c(12)*c(63);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(12,64)*c(12)*c(64);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,65)*c(12)*c(65);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(12,66)*c(12)*c(66);
	% Evaporations resulting in this cluster
	coll_evap_2d(13,12) = coll_evap_2d(13,12)+E(1,12)*c(13);
	coll_evap_2d(14,12) = coll_evap_2d(14,12)+E(2,12)*c(14);
	coll_evap_2d(15,12) = coll_evap_2d(15,12)+E(3,12)*c(15);
	coll_evap_2d(16,12) = coll_evap_2d(16,12)+E(4,12)*c(16);
	coll_evap_2d(17,12) = coll_evap_2d(17,12)+E(5,12)*c(17);
	coll_evap_2d(18,12) = coll_evap_2d(18,12)+E(6,12)*c(18);
	coll_evap_2d(19,12) = coll_evap_2d(19,12)+E(7,12)*c(19);
	coll_evap_2d(20,12) = coll_evap_2d(20,12)+E(8,12)*c(20);
	coll_evap_2d(21,12) = coll_evap_2d(21,12)+E(9,12)*c(21);
	coll_evap_2d(22,12) = coll_evap_2d(22,12)+E(10,12)*c(22);
	coll_evap_2d(23,12) = coll_evap_2d(23,12)+E(11,12)*c(23);
	coll_evap_2d(24,12) = coll_evap_2d(24,12)+2*E(12,12)*c(24);
	coll_evap_2d(25,12) = coll_evap_2d(25,12)+E(12,13)*c(25);
	coll_evap_2d(26,12) = coll_evap_2d(26,12)+E(12,14)*c(26);
	coll_evap_2d(27,12) = coll_evap_2d(27,12)+E(12,15)*c(27);
	coll_evap_2d(28,12) = coll_evap_2d(28,12)+E(12,16)*c(28);
	coll_evap_2d(29,12) = coll_evap_2d(29,12)+E(12,17)*c(29);
	coll_evap_2d(30,12) = coll_evap_2d(30,12)+E(12,22)*c(30);
	coll_evap_2d(31,12) = coll_evap_2d(31,12)+E(12,23)*c(31);
	coll_evap_2d(42,12) = coll_evap_2d(42,12)+E(12,32)*c(42);
	coll_evap_2d(43,12) = coll_evap_2d(43,12)+E(12,33)*c(43);
	coll_evap_2d(44,12) = coll_evap_2d(44,12)+E(12,34)*c(44);
	coll_evap_2d(45,12) = coll_evap_2d(45,12)+E(12,35)*c(45);
	coll_evap_2d(46,12) = coll_evap_2d(46,12)+E(12,36)*c(46);
	coll_evap_2d(47,12) = coll_evap_2d(47,12)+E(12,40)*c(47);
	coll_evap_2d(48,12) = coll_evap_2d(48,12)+E(12,41)*c(48);
	coll_evap_2d(49,12) = coll_evap_2d(49,12)+E(12,46)*c(49);
	coll_evap_2d(57,12) = coll_evap_2d(57,12)+E(12,50)*c(57);
	coll_evap_2d(58,12) = coll_evap_2d(58,12)+E(12,51)*c(58);
	coll_evap_2d(59,12) = coll_evap_2d(59,12)+E(12,52)*c(59);
	coll_evap_2d(62,12) = coll_evap_2d(62,12)+E(12,55)*c(62);
	coll_evap_2d(63,12) = coll_evap_2d(63,12)+E(12,56)*c(63);
	coll_evap_2d(65,12) = coll_evap_2d(65,12)+E(12,60)*c(65);
	coll_evap_2d(66,12) = coll_evap_2d(66,12)+E(12,61)*c(66);
	% External losses
	coll_evap_2d(12,71) = coll_evap_2d(12,71)+CS(12)*c(12);

% Cluster 13: 1A2N
	% Collisions removing this cluster
	coll_evap_2d(13,14) = coll_evap_2d(13,14)+K(1,13)*c(13)*c(1);
	coll_evap_2d(13,15) = coll_evap_2d(13,15)+K(2,13)*c(13)*c(2);
	coll_evap_2d(13,16) = coll_evap_2d(13,16)+K(3,13)*c(13)*c(3);
	coll_evap_2d(13,17) = coll_evap_2d(13,17)+K(4,13)*c(13)*c(4);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(5,13)*c(13)*c(5);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(5,13)*c(13)*c(5);
	coll_evap_2d(13,19) = coll_evap_2d(13,19)+K(6,13)*c(13)*c(6);
	coll_evap_2d(13,20) = coll_evap_2d(13,20)+K(7,13)*c(13)*c(7);
	coll_evap_2d(13,21) = coll_evap_2d(13,21)+K(8,13)*c(13)*c(8);
	coll_evap_2d(13,22) = coll_evap_2d(13,22)+K(9,13)*c(13)*c(9);
	coll_evap_2d(13,23) = coll_evap_2d(13,23)+K(10,13)*c(13)*c(10);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(11,13)*c(13)*c(11);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(11,13)*c(13)*c(11);
	coll_evap_2d(13,25) = coll_evap_2d(13,25)+K(12,13)*c(13)*c(12);
	coll_evap_2d(13,26) = coll_evap_2d(13,26)+2*0.5*K(13,13)*c(13)*c(13);
	coll_evap_2d(13,27) = coll_evap_2d(13,27)+K(13,14)*c(13)*c(14);
	coll_evap_2d(13,28) = coll_evap_2d(13,28)+K(13,15)*c(13)*c(15);
	coll_evap_2d(13,29) = coll_evap_2d(13,29)+K(13,16)*c(13)*c(16);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,17)*c(13)*c(17);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,18)*c(13)*c(18);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,19)*c(13)*c(19);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,20)*c(13)*c(20);
	coll_evap_2d(13,30) = coll_evap_2d(13,30)+K(13,21)*c(13)*c(21);
	coll_evap_2d(13,31) = coll_evap_2d(13,31)+K(13,22)*c(13)*c(22);
	coll_evap_2d(13,75) = coll_evap_2d(13,75)+K(13,23)*c(13)*c(23);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,24)*c(13)*c(24);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,25)*c(13)*c(25);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,26)*c(13)*c(26);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,27)*c(13)*c(27);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,28)*c(13)*c(28);
	coll_evap_2d(13,75) = coll_evap_2d(13,75)+K(13,29)*c(13)*c(29);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,30)*c(13)*c(30);
	coll_evap_2d(13,75) = coll_evap_2d(13,75)+K(13,31)*c(13)*c(31);
	coll_evap_2d(13,43) = coll_evap_2d(13,43)+K(13,32)*c(13)*c(32);
	coll_evap_2d(13,44) = coll_evap_2d(13,44)+K(13,33)*c(13)*c(33);
	coll_evap_2d(13,45) = coll_evap_2d(13,45)+K(13,34)*c(13)*c(34);
	coll_evap_2d(13,46) = coll_evap_2d(13,46)+K(13,35)*c(13)*c(35);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,36)*c(13)*c(36);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,37)*c(13)*c(37);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,38)*c(13)*c(38);
	coll_evap_2d(13,47) = coll_evap_2d(13,47)+K(13,39)*c(13)*c(39);
	coll_evap_2d(13,48) = coll_evap_2d(13,48)+K(13,40)*c(13)*c(40);
	coll_evap_2d(13,76) = coll_evap_2d(13,76)+K(13,41)*c(13)*c(41);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,42)*c(13)*c(42);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,43)*c(13)*c(43);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,44)*c(13)*c(44);
	coll_evap_2d(13,49) = coll_evap_2d(13,49)+K(13,45)*c(13)*c(45);
	coll_evap_2d(13,76) = coll_evap_2d(13,76)+K(13,46)*c(13)*c(46);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,47)*c(13)*c(47);
	coll_evap_2d(13,76) = coll_evap_2d(13,76)+K(13,48)*c(13)*c(48);
	coll_evap_2d(13,76) = coll_evap_2d(13,76)+K(13,49)*c(13)*c(49);
	coll_evap_2d(13,58) = coll_evap_2d(13,58)+K(13,50)*c(13)*c(50);
	coll_evap_2d(13,59) = coll_evap_2d(13,59)+K(13,51)*c(13)*c(51);
	coll_evap_2d(13,60) = coll_evap_2d(13,60)+K(13,52)*c(13)*c(52);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,53)*c(13)*c(53);
	coll_evap_2d(13,62) = coll_evap_2d(13,62)+K(13,54)*c(13)*c(54);
	coll_evap_2d(13,63) = coll_evap_2d(13,63)+K(13,55)*c(13)*c(55);
	coll_evap_2d(13,64) = coll_evap_2d(13,64)+K(13,56)*c(13)*c(56);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,57)*c(13)*c(57);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,58)*c(13)*c(58);
	coll_evap_2d(13,65) = coll_evap_2d(13,65)+K(13,59)*c(13)*c(59);
	coll_evap_2d(13,66) = coll_evap_2d(13,66)+K(13,60)*c(13)*c(60);
	coll_evap_2d(13,67) = coll_evap_2d(13,67)+K(13,61)*c(13)*c(61);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,62)*c(13)*c(62);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,63)*c(13)*c(63);
	coll_evap_2d(13,77) = coll_evap_2d(13,77)+K(13,64)*c(13)*c(64);
	coll_evap_2d(13,78) = coll_evap_2d(13,78)+K(13,65)*c(13)*c(65);
	coll_evap_2d(13,77) = coll_evap_2d(13,77)+K(13,66)*c(13)*c(66);
	coll_evap_2d(13,77) = coll_evap_2d(13,77)+K(13,67)*c(13)*c(67);
	coll_evap_2d(13,42) = coll_evap_2d(13,42)+K(13,68)*c(13)*c(68);
	coll_evap_2d(13,54) = coll_evap_2d(13,54)+K(13,69)*c(13)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(13,17)*c(13)*c(17);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,18)*c(13)*c(18);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,19)*c(13)*c(19);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,20)*c(13)*c(20);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(13,24)*c(13)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(13,25)*c(13)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(13,26)*c(13)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,27)*c(13)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,28)*c(13)*c(28);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(13,30)*c(13)*c(30);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(13,36)*c(13)*c(36);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,37)*c(13)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,38)*c(13)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(13,42)*c(13)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(13,43)*c(13)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,44)*c(13)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,47)*c(13)*c(47);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,53)*c(13)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(13,57)*c(13)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,58)*c(13)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,62)*c(13)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(13,63)*c(13)*c(63);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(13,65)*c(13)*c(65);
	% Evaporations resulting in this cluster
	coll_evap_2d(14,13) = coll_evap_2d(14,13)+E(1,13)*c(14);
	coll_evap_2d(15,13) = coll_evap_2d(15,13)+E(2,13)*c(15);
	coll_evap_2d(16,13) = coll_evap_2d(16,13)+E(3,13)*c(16);
	coll_evap_2d(17,13) = coll_evap_2d(17,13)+E(4,13)*c(17);
	coll_evap_2d(19,13) = coll_evap_2d(19,13)+E(6,13)*c(19);
	coll_evap_2d(20,13) = coll_evap_2d(20,13)+E(7,13)*c(20);
	coll_evap_2d(21,13) = coll_evap_2d(21,13)+E(8,13)*c(21);
	coll_evap_2d(22,13) = coll_evap_2d(22,13)+E(9,13)*c(22);
	coll_evap_2d(23,13) = coll_evap_2d(23,13)+E(10,13)*c(23);
	coll_evap_2d(25,13) = coll_evap_2d(25,13)+E(12,13)*c(25);
	coll_evap_2d(26,13) = coll_evap_2d(26,13)+2*E(13,13)*c(26);
	coll_evap_2d(27,13) = coll_evap_2d(27,13)+E(13,14)*c(27);
	coll_evap_2d(28,13) = coll_evap_2d(28,13)+E(13,15)*c(28);
	coll_evap_2d(29,13) = coll_evap_2d(29,13)+E(13,16)*c(29);
	coll_evap_2d(30,13) = coll_evap_2d(30,13)+E(13,21)*c(30);
	coll_evap_2d(31,13) = coll_evap_2d(31,13)+E(13,22)*c(31);
	coll_evap_2d(43,13) = coll_evap_2d(43,13)+E(13,32)*c(43);
	coll_evap_2d(44,13) = coll_evap_2d(44,13)+E(13,33)*c(44);
	coll_evap_2d(45,13) = coll_evap_2d(45,13)+E(13,34)*c(45);
	coll_evap_2d(46,13) = coll_evap_2d(46,13)+E(13,35)*c(46);
	coll_evap_2d(47,13) = coll_evap_2d(47,13)+E(13,39)*c(47);
	coll_evap_2d(48,13) = coll_evap_2d(48,13)+E(13,40)*c(48);
	coll_evap_2d(49,13) = coll_evap_2d(49,13)+E(13,45)*c(49);
	coll_evap_2d(58,13) = coll_evap_2d(58,13)+E(13,50)*c(58);
	coll_evap_2d(59,13) = coll_evap_2d(59,13)+E(13,51)*c(59);
	coll_evap_2d(60,13) = coll_evap_2d(60,13)+E(13,52)*c(60);
	coll_evap_2d(62,13) = coll_evap_2d(62,13)+E(13,54)*c(62);
	coll_evap_2d(63,13) = coll_evap_2d(63,13)+E(13,55)*c(63);
	coll_evap_2d(64,13) = coll_evap_2d(64,13)+E(13,56)*c(64);
	coll_evap_2d(65,13) = coll_evap_2d(65,13)+E(13,59)*c(65);
	coll_evap_2d(66,13) = coll_evap_2d(66,13)+E(13,60)*c(66);
	coll_evap_2d(67,13) = coll_evap_2d(67,13)+E(13,61)*c(67);
	% External losses
	coll_evap_2d(13,71) = coll_evap_2d(13,71)+CS(13)*c(13);

% Cluster 14: 2A2N
	% Collisions removing this cluster
	coll_evap_2d(14,15) = coll_evap_2d(14,15)+K(1,14)*c(14)*c(1);
	coll_evap_2d(14,16) = coll_evap_2d(14,16)+K(2,14)*c(14)*c(2);
	coll_evap_2d(14,17) = coll_evap_2d(14,17)+K(3,14)*c(14)*c(3);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(4,14)*c(14)*c(4);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(4,14)*c(14)*c(4);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(5,14)*c(14)*c(5);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(5,14)*c(14)*c(5);
	coll_evap_2d(14,20) = coll_evap_2d(14,20)+K(6,14)*c(14)*c(6);
	coll_evap_2d(14,21) = coll_evap_2d(14,21)+K(7,14)*c(14)*c(7);
	coll_evap_2d(14,22) = coll_evap_2d(14,22)+K(8,14)*c(14)*c(8);
	coll_evap_2d(14,23) = coll_evap_2d(14,23)+K(9,14)*c(14)*c(9);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(10,14)*c(14)*c(10);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(10,14)*c(14)*c(10);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(11,14)*c(14)*c(11);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(11,14)*c(14)*c(11);
	coll_evap_2d(14,26) = coll_evap_2d(14,26)+K(12,14)*c(14)*c(12);
	coll_evap_2d(14,27) = coll_evap_2d(14,27)+K(13,14)*c(14)*c(13);
	coll_evap_2d(14,28) = coll_evap_2d(14,28)+2*0.5*K(14,14)*c(14)*c(14);
	coll_evap_2d(14,29) = coll_evap_2d(14,29)+K(14,15)*c(14)*c(15);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,16)*c(14)*c(16);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,17)*c(14)*c(17);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,18)*c(14)*c(18);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,19)*c(14)*c(19);
	coll_evap_2d(14,30) = coll_evap_2d(14,30)+K(14,20)*c(14)*c(20);
	coll_evap_2d(14,31) = coll_evap_2d(14,31)+K(14,21)*c(14)*c(21);
	coll_evap_2d(14,75) = coll_evap_2d(14,75)+K(14,22)*c(14)*c(22);
	coll_evap_2d(14,75) = coll_evap_2d(14,75)+K(14,23)*c(14)*c(23);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,24)*c(14)*c(24);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,25)*c(14)*c(25);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,26)*c(14)*c(26);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,27)*c(14)*c(27);
	coll_evap_2d(14,75) = coll_evap_2d(14,75)+K(14,28)*c(14)*c(28);
	coll_evap_2d(14,75) = coll_evap_2d(14,75)+K(14,29)*c(14)*c(29);
	coll_evap_2d(14,75) = coll_evap_2d(14,75)+K(14,30)*c(14)*c(30);
	coll_evap_2d(14,75) = coll_evap_2d(14,75)+K(14,31)*c(14)*c(31);
	coll_evap_2d(14,44) = coll_evap_2d(14,44)+K(14,32)*c(14)*c(32);
	coll_evap_2d(14,45) = coll_evap_2d(14,45)+K(14,33)*c(14)*c(33);
	coll_evap_2d(14,46) = coll_evap_2d(14,46)+K(14,34)*c(14)*c(34);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,35)*c(14)*c(35);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,36)*c(14)*c(36);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,37)*c(14)*c(37);
	coll_evap_2d(14,47) = coll_evap_2d(14,47)+K(14,38)*c(14)*c(38);
	coll_evap_2d(14,48) = coll_evap_2d(14,48)+K(14,39)*c(14)*c(39);
	coll_evap_2d(14,76) = coll_evap_2d(14,76)+K(14,40)*c(14)*c(40);
	coll_evap_2d(14,76) = coll_evap_2d(14,76)+K(14,41)*c(14)*c(41);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,42)*c(14)*c(42);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,43)*c(14)*c(43);
	coll_evap_2d(14,49) = coll_evap_2d(14,49)+K(14,44)*c(14)*c(44);
	coll_evap_2d(14,76) = coll_evap_2d(14,76)+K(14,45)*c(14)*c(45);
	coll_evap_2d(14,76) = coll_evap_2d(14,76)+K(14,46)*c(14)*c(46);
	coll_evap_2d(14,76) = coll_evap_2d(14,76)+K(14,47)*c(14)*c(47);
	coll_evap_2d(14,76) = coll_evap_2d(14,76)+K(14,48)*c(14)*c(48);
	coll_evap_2d(14,76) = coll_evap_2d(14,76)+K(14,49)*c(14)*c(49);
	coll_evap_2d(14,59) = coll_evap_2d(14,59)+K(14,50)*c(14)*c(50);
	coll_evap_2d(14,60) = coll_evap_2d(14,60)+K(14,51)*c(14)*c(51);
	coll_evap_2d(14,61) = coll_evap_2d(14,61)+K(14,52)*c(14)*c(52);
	coll_evap_2d(14,62) = coll_evap_2d(14,62)+K(14,53)*c(14)*c(53);
	coll_evap_2d(14,63) = coll_evap_2d(14,63)+K(14,54)*c(14)*c(54);
	coll_evap_2d(14,64) = coll_evap_2d(14,64)+K(14,55)*c(14)*c(55);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,56)*c(14)*c(56);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,57)*c(14)*c(57);
	coll_evap_2d(14,65) = coll_evap_2d(14,65)+K(14,58)*c(14)*c(58);
	coll_evap_2d(14,66) = coll_evap_2d(14,66)+K(14,59)*c(14)*c(59);
	coll_evap_2d(14,67) = coll_evap_2d(14,67)+K(14,60)*c(14)*c(60);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,61)*c(14)*c(61);
	coll_evap_2d(14,78) = coll_evap_2d(14,78)+K(14,62)*c(14)*c(62);
	coll_evap_2d(14,77) = coll_evap_2d(14,77)+K(14,63)*c(14)*c(63);
	coll_evap_2d(14,77) = coll_evap_2d(14,77)+K(14,64)*c(14)*c(64);
	coll_evap_2d(14,77) = coll_evap_2d(14,77)+K(14,65)*c(14)*c(65);
	coll_evap_2d(14,77) = coll_evap_2d(14,77)+K(14,66)*c(14)*c(66);
	coll_evap_2d(14,77) = coll_evap_2d(14,77)+K(14,67)*c(14)*c(67);
	coll_evap_2d(14,43) = coll_evap_2d(14,43)+K(14,68)*c(14)*c(68);
	coll_evap_2d(14,55) = coll_evap_2d(14,55)+K(14,69)*c(14)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(14,16)*c(14)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(14,17)*c(14)*c(17);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(14,18)*c(14)*c(18);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(14,19)*c(14)*c(19);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(14,24)*c(14)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(14,25)*c(14)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(14,26)*c(14)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(14,27)*c(14)*c(27);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(14,35)*c(14)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(14,36)*c(14)*c(36);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(14,37)*c(14)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(14,42)*c(14)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(14,43)*c(14)*c(43);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(14,56)*c(14)*c(56);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(14,57)*c(14)*c(57);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(14,61)*c(14)*c(61);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(14,62)*c(14)*c(62);
	% Evaporations resulting in this cluster
	coll_evap_2d(15,14) = coll_evap_2d(15,14)+E(1,14)*c(15);
	coll_evap_2d(16,14) = coll_evap_2d(16,14)+E(2,14)*c(16);
	coll_evap_2d(17,14) = coll_evap_2d(17,14)+E(3,14)*c(17);
	coll_evap_2d(20,14) = coll_evap_2d(20,14)+E(6,14)*c(20);
	coll_evap_2d(21,14) = coll_evap_2d(21,14)+E(7,14)*c(21);
	coll_evap_2d(22,14) = coll_evap_2d(22,14)+E(8,14)*c(22);
	coll_evap_2d(23,14) = coll_evap_2d(23,14)+E(9,14)*c(23);
	coll_evap_2d(26,14) = coll_evap_2d(26,14)+E(12,14)*c(26);
	coll_evap_2d(27,14) = coll_evap_2d(27,14)+E(13,14)*c(27);
	coll_evap_2d(28,14) = coll_evap_2d(28,14)+2*E(14,14)*c(28);
	coll_evap_2d(29,14) = coll_evap_2d(29,14)+E(14,15)*c(29);
	coll_evap_2d(30,14) = coll_evap_2d(30,14)+E(14,20)*c(30);
	coll_evap_2d(31,14) = coll_evap_2d(31,14)+E(14,21)*c(31);
	coll_evap_2d(44,14) = coll_evap_2d(44,14)+E(14,32)*c(44);
	coll_evap_2d(45,14) = coll_evap_2d(45,14)+E(14,33)*c(45);
	coll_evap_2d(46,14) = coll_evap_2d(46,14)+E(14,34)*c(46);
	coll_evap_2d(47,14) = coll_evap_2d(47,14)+E(14,38)*c(47);
	coll_evap_2d(48,14) = coll_evap_2d(48,14)+E(14,39)*c(48);
	coll_evap_2d(49,14) = coll_evap_2d(49,14)+E(14,44)*c(49);
	coll_evap_2d(59,14) = coll_evap_2d(59,14)+E(14,50)*c(59);
	coll_evap_2d(60,14) = coll_evap_2d(60,14)+E(14,51)*c(60);
	coll_evap_2d(61,14) = coll_evap_2d(61,14)+E(14,52)*c(61);
	coll_evap_2d(62,14) = coll_evap_2d(62,14)+E(14,53)*c(62);
	coll_evap_2d(63,14) = coll_evap_2d(63,14)+E(14,54)*c(63);
	coll_evap_2d(64,14) = coll_evap_2d(64,14)+E(14,55)*c(64);
	coll_evap_2d(65,14) = coll_evap_2d(65,14)+E(14,58)*c(65);
	coll_evap_2d(66,14) = coll_evap_2d(66,14)+E(14,59)*c(66);
	coll_evap_2d(67,14) = coll_evap_2d(67,14)+E(14,60)*c(67);
	% External losses
	coll_evap_2d(14,71) = coll_evap_2d(14,71)+CS(14)*c(14);

% Cluster 15: 3A2N
	% Collisions removing this cluster
	coll_evap_2d(15,16) = coll_evap_2d(15,16)+K(1,15)*c(15)*c(1);
	coll_evap_2d(15,17) = coll_evap_2d(15,17)+K(2,15)*c(15)*c(2);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(3,15)*c(15)*c(3);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(3,15)*c(15)*c(3);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(4,15)*c(15)*c(4);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(4,15)*c(15)*c(4);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(5,15)*c(15)*c(5);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(5,15)*c(15)*c(5);
	coll_evap_2d(15,21) = coll_evap_2d(15,21)+K(6,15)*c(15)*c(6);
	coll_evap_2d(15,22) = coll_evap_2d(15,22)+K(7,15)*c(15)*c(7);
	coll_evap_2d(15,23) = coll_evap_2d(15,23)+K(8,15)*c(15)*c(8);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(9,15)*c(15)*c(9);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(9,15)*c(15)*c(9);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(10,15)*c(15)*c(10);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(10,15)*c(15)*c(10);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(11,15)*c(15)*c(11);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(11,15)*c(15)*c(11);
	coll_evap_2d(15,27) = coll_evap_2d(15,27)+K(12,15)*c(15)*c(12);
	coll_evap_2d(15,28) = coll_evap_2d(15,28)+K(13,15)*c(15)*c(13);
	coll_evap_2d(15,29) = coll_evap_2d(15,29)+K(14,15)*c(15)*c(14);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+2*0.5*K(15,15)*c(15)*c(15);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+0.5*K(15,15)*c(15)*c(15);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,16)*c(15)*c(16);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,17)*c(15)*c(17);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,18)*c(15)*c(18);
	coll_evap_2d(15,30) = coll_evap_2d(15,30)+K(15,19)*c(15)*c(19);
	coll_evap_2d(15,31) = coll_evap_2d(15,31)+K(15,20)*c(15)*c(20);
	coll_evap_2d(15,75) = coll_evap_2d(15,75)+K(15,21)*c(15)*c(21);
	coll_evap_2d(15,75) = coll_evap_2d(15,75)+K(15,22)*c(15)*c(22);
	coll_evap_2d(15,75) = coll_evap_2d(15,75)+K(15,23)*c(15)*c(23);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,24)*c(15)*c(24);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,25)*c(15)*c(25);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,26)*c(15)*c(26);
	coll_evap_2d(15,75) = coll_evap_2d(15,75)+K(15,27)*c(15)*c(27);
	coll_evap_2d(15,75) = coll_evap_2d(15,75)+K(15,28)*c(15)*c(28);
	coll_evap_2d(15,75) = coll_evap_2d(15,75)+K(15,29)*c(15)*c(29);
	coll_evap_2d(15,75) = coll_evap_2d(15,75)+K(15,30)*c(15)*c(30);
	coll_evap_2d(15,75) = coll_evap_2d(15,75)+K(15,31)*c(15)*c(31);
	coll_evap_2d(15,45) = coll_evap_2d(15,45)+K(15,32)*c(15)*c(32);
	coll_evap_2d(15,46) = coll_evap_2d(15,46)+K(15,33)*c(15)*c(33);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,34)*c(15)*c(34);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,35)*c(15)*c(35);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,36)*c(15)*c(36);
	coll_evap_2d(15,47) = coll_evap_2d(15,47)+K(15,37)*c(15)*c(37);
	coll_evap_2d(15,48) = coll_evap_2d(15,48)+K(15,38)*c(15)*c(38);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,39)*c(15)*c(39);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,40)*c(15)*c(40);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,41)*c(15)*c(41);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,42)*c(15)*c(42);
	coll_evap_2d(15,49) = coll_evap_2d(15,49)+K(15,43)*c(15)*c(43);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,44)*c(15)*c(44);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,45)*c(15)*c(45);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,46)*c(15)*c(46);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,47)*c(15)*c(47);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,48)*c(15)*c(48);
	coll_evap_2d(15,76) = coll_evap_2d(15,76)+K(15,49)*c(15)*c(49);
	coll_evap_2d(15,60) = coll_evap_2d(15,60)+K(15,50)*c(15)*c(50);
	coll_evap_2d(15,61) = coll_evap_2d(15,61)+K(15,51)*c(15)*c(51);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,52)*c(15)*c(52);
	coll_evap_2d(15,63) = coll_evap_2d(15,63)+K(15,53)*c(15)*c(53);
	coll_evap_2d(15,64) = coll_evap_2d(15,64)+K(15,54)*c(15)*c(54);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,55)*c(15)*c(55);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,56)*c(15)*c(56);
	coll_evap_2d(15,65) = coll_evap_2d(15,65)+K(15,57)*c(15)*c(57);
	coll_evap_2d(15,66) = coll_evap_2d(15,66)+K(15,58)*c(15)*c(58);
	coll_evap_2d(15,67) = coll_evap_2d(15,67)+K(15,59)*c(15)*c(59);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,60)*c(15)*c(60);
	coll_evap_2d(15,78) = coll_evap_2d(15,78)+K(15,61)*c(15)*c(61);
	coll_evap_2d(15,77) = coll_evap_2d(15,77)+K(15,62)*c(15)*c(62);
	coll_evap_2d(15,77) = coll_evap_2d(15,77)+K(15,63)*c(15)*c(63);
	coll_evap_2d(15,77) = coll_evap_2d(15,77)+K(15,64)*c(15)*c(64);
	coll_evap_2d(15,77) = coll_evap_2d(15,77)+K(15,65)*c(15)*c(65);
	coll_evap_2d(15,77) = coll_evap_2d(15,77)+K(15,66)*c(15)*c(66);
	coll_evap_2d(15,77) = coll_evap_2d(15,77)+K(15,67)*c(15)*c(67);
	coll_evap_2d(15,44) = coll_evap_2d(15,44)+K(15,68)*c(15)*c(68);
	coll_evap_2d(15,56) = coll_evap_2d(15,56)+K(15,69)*c(15)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+0.5*K(15,15)*c(15)*c(15);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(15,16)*c(15)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(15,17)*c(15)*c(17);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(15,18)*c(15)*c(18);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(15,24)*c(15)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(15,25)*c(15)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(15,26)*c(15)*c(26);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(15,34)*c(15)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(15,35)*c(15)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(15,36)*c(15)*c(36);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(15,42)*c(15)*c(42);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(15,52)*c(15)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(15,55)*c(15)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(15,56)*c(15)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(15,60)*c(15)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(15,61)*c(15)*c(61);
	% Evaporations resulting in this cluster
	coll_evap_2d(16,15) = coll_evap_2d(16,15)+E(1,15)*c(16);
	coll_evap_2d(17,15) = coll_evap_2d(17,15)+E(2,15)*c(17);
	coll_evap_2d(21,15) = coll_evap_2d(21,15)+E(6,15)*c(21);
	coll_evap_2d(22,15) = coll_evap_2d(22,15)+E(7,15)*c(22);
	coll_evap_2d(23,15) = coll_evap_2d(23,15)+E(8,15)*c(23);
	coll_evap_2d(27,15) = coll_evap_2d(27,15)+E(12,15)*c(27);
	coll_evap_2d(28,15) = coll_evap_2d(28,15)+E(13,15)*c(28);
	coll_evap_2d(29,15) = coll_evap_2d(29,15)+E(14,15)*c(29);
	coll_evap_2d(30,15) = coll_evap_2d(30,15)+E(15,19)*c(30);
	coll_evap_2d(31,15) = coll_evap_2d(31,15)+E(15,20)*c(31);
	coll_evap_2d(45,15) = coll_evap_2d(45,15)+E(15,32)*c(45);
	coll_evap_2d(46,15) = coll_evap_2d(46,15)+E(15,33)*c(46);
	coll_evap_2d(47,15) = coll_evap_2d(47,15)+E(15,37)*c(47);
	coll_evap_2d(48,15) = coll_evap_2d(48,15)+E(15,38)*c(48);
	coll_evap_2d(49,15) = coll_evap_2d(49,15)+E(15,43)*c(49);
	coll_evap_2d(60,15) = coll_evap_2d(60,15)+E(15,50)*c(60);
	coll_evap_2d(61,15) = coll_evap_2d(61,15)+E(15,51)*c(61);
	coll_evap_2d(63,15) = coll_evap_2d(63,15)+E(15,53)*c(63);
	coll_evap_2d(64,15) = coll_evap_2d(64,15)+E(15,54)*c(64);
	coll_evap_2d(65,15) = coll_evap_2d(65,15)+E(15,57)*c(65);
	coll_evap_2d(66,15) = coll_evap_2d(66,15)+E(15,58)*c(66);
	coll_evap_2d(67,15) = coll_evap_2d(67,15)+E(15,59)*c(67);
	% External losses
	coll_evap_2d(15,71) = coll_evap_2d(15,71)+CS(15)*c(15);

% Cluster 16: 4A2N
	% Collisions removing this cluster
	coll_evap_2d(16,17) = coll_evap_2d(16,17)+K(1,16)*c(16)*c(1);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(2,16)*c(16)*c(2);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(2,16)*c(16)*c(2);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(3,16)*c(16)*c(3);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(3,16)*c(16)*c(3);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(4,16)*c(16)*c(4);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(4,16)*c(16)*c(4);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(5,16)*c(16)*c(5);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(5,16)*c(16)*c(5);
	coll_evap_2d(16,22) = coll_evap_2d(16,22)+K(6,16)*c(16)*c(6);
	coll_evap_2d(16,23) = coll_evap_2d(16,23)+K(7,16)*c(16)*c(7);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(8,16)*c(16)*c(8);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(8,16)*c(16)*c(8);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(9,16)*c(16)*c(9);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(9,16)*c(16)*c(9);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(10,16)*c(16)*c(10);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(10,16)*c(16)*c(10);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(11,16)*c(16)*c(11);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(11,16)*c(16)*c(11);
	coll_evap_2d(16,28) = coll_evap_2d(16,28)+K(12,16)*c(16)*c(12);
	coll_evap_2d(16,29) = coll_evap_2d(16,29)+K(13,16)*c(16)*c(13);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(14,16)*c(16)*c(14);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(14,16)*c(16)*c(14);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(15,16)*c(16)*c(15);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(15,16)*c(16)*c(15);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+2*0.5*K(16,16)*c(16)*c(16);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+0.5*K(16,16)*c(16)*c(16);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,17)*c(16)*c(17);
	coll_evap_2d(16,30) = coll_evap_2d(16,30)+K(16,18)*c(16)*c(18);
	coll_evap_2d(16,31) = coll_evap_2d(16,31)+K(16,19)*c(16)*c(19);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,20)*c(16)*c(20);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,21)*c(16)*c(21);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,22)*c(16)*c(22);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,23)*c(16)*c(23);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,24)*c(16)*c(24);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,25)*c(16)*c(25);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,26)*c(16)*c(26);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,27)*c(16)*c(27);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,28)*c(16)*c(28);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,29)*c(16)*c(29);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,30)*c(16)*c(30);
	coll_evap_2d(16,75) = coll_evap_2d(16,75)+K(16,31)*c(16)*c(31);
	coll_evap_2d(16,46) = coll_evap_2d(16,46)+K(16,32)*c(16)*c(32);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,33)*c(16)*c(33);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,34)*c(16)*c(34);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,35)*c(16)*c(35);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,36)*c(16)*c(36);
	coll_evap_2d(16,48) = coll_evap_2d(16,48)+K(16,37)*c(16)*c(37);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,38)*c(16)*c(38);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,39)*c(16)*c(39);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,40)*c(16)*c(40);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,41)*c(16)*c(41);
	coll_evap_2d(16,49) = coll_evap_2d(16,49)+K(16,42)*c(16)*c(42);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,43)*c(16)*c(43);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,44)*c(16)*c(44);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,45)*c(16)*c(45);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,46)*c(16)*c(46);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,47)*c(16)*c(47);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,48)*c(16)*c(48);
	coll_evap_2d(16,76) = coll_evap_2d(16,76)+K(16,49)*c(16)*c(49);
	coll_evap_2d(16,61) = coll_evap_2d(16,61)+K(16,50)*c(16)*c(50);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,51)*c(16)*c(51);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,52)*c(16)*c(52);
	coll_evap_2d(16,64) = coll_evap_2d(16,64)+K(16,53)*c(16)*c(53);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,54)*c(16)*c(54);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,55)*c(16)*c(55);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,56)*c(16)*c(56);
	coll_evap_2d(16,66) = coll_evap_2d(16,66)+K(16,57)*c(16)*c(57);
	coll_evap_2d(16,67) = coll_evap_2d(16,67)+K(16,58)*c(16)*c(58);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,59)*c(16)*c(59);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,60)*c(16)*c(60);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,61)*c(16)*c(61);
	coll_evap_2d(16,77) = coll_evap_2d(16,77)+K(16,62)*c(16)*c(62);
	coll_evap_2d(16,77) = coll_evap_2d(16,77)+K(16,63)*c(16)*c(63);
	coll_evap_2d(16,77) = coll_evap_2d(16,77)+K(16,64)*c(16)*c(64);
	coll_evap_2d(16,77) = coll_evap_2d(16,77)+K(16,65)*c(16)*c(65);
	coll_evap_2d(16,77) = coll_evap_2d(16,77)+K(16,66)*c(16)*c(66);
	coll_evap_2d(16,77) = coll_evap_2d(16,77)+K(16,67)*c(16)*c(67);
	coll_evap_2d(16,45) = coll_evap_2d(16,45)+K(16,68)*c(16)*c(68);
	coll_evap_2d(16,78) = coll_evap_2d(16,78)+K(16,69)*c(16)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*0.5*K(16,16)*c(16)*c(16);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(16,17)*c(16)*c(17);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(16,24)*c(16)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(16,25)*c(16)*c(25);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(16,33)*c(16)*c(33);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(16,34)*c(16)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(16,35)*c(16)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(16,36)*c(16)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(16,51)*c(16)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(16,52)*c(16)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(16,54)*c(16)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(16,55)*c(16)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(16,56)*c(16)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(16,59)*c(16)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(16,60)*c(16)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(16,61)*c(16)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(16,69)*c(16)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(17,16) = coll_evap_2d(17,16)+E(1,16)*c(17);
	coll_evap_2d(22,16) = coll_evap_2d(22,16)+E(6,16)*c(22);
	coll_evap_2d(23,16) = coll_evap_2d(23,16)+E(7,16)*c(23);
	coll_evap_2d(28,16) = coll_evap_2d(28,16)+E(12,16)*c(28);
	coll_evap_2d(29,16) = coll_evap_2d(29,16)+E(13,16)*c(29);
	coll_evap_2d(30,16) = coll_evap_2d(30,16)+E(16,18)*c(30);
	coll_evap_2d(31,16) = coll_evap_2d(31,16)+E(16,19)*c(31);
	coll_evap_2d(46,16) = coll_evap_2d(46,16)+E(16,32)*c(46);
	coll_evap_2d(48,16) = coll_evap_2d(48,16)+E(16,37)*c(48);
	coll_evap_2d(49,16) = coll_evap_2d(49,16)+E(16,42)*c(49);
	coll_evap_2d(61,16) = coll_evap_2d(61,16)+E(16,50)*c(61);
	coll_evap_2d(64,16) = coll_evap_2d(64,16)+E(16,53)*c(64);
	coll_evap_2d(66,16) = coll_evap_2d(66,16)+E(16,57)*c(66);
	coll_evap_2d(67,16) = coll_evap_2d(67,16)+E(16,58)*c(67);
	% External losses
	coll_evap_2d(16,71) = coll_evap_2d(16,71)+CS(16)*c(16);

% Cluster 17: 5A2N
	% Collisions removing this cluster
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(1,17)*c(17)*c(1);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(1,17)*c(17)*c(1);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(2,17)*c(17)*c(2);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(2,17)*c(17)*c(2);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(3,17)*c(17)*c(3);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(3,17)*c(17)*c(3);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(4,17)*c(17)*c(4);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(4,17)*c(17)*c(4);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(5,17)*c(17)*c(5);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(5,17)*c(17)*c(5);
	coll_evap_2d(17,23) = coll_evap_2d(17,23)+K(6,17)*c(17)*c(6);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(7,17)*c(17)*c(7);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(7,17)*c(17)*c(7);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(8,17)*c(17)*c(8);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(8,17)*c(17)*c(8);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(9,17)*c(17)*c(9);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(9,17)*c(17)*c(9);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(10,17)*c(17)*c(10);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(10,17)*c(17)*c(10);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(11,17)*c(17)*c(11);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(11,17)*c(17)*c(11);
	coll_evap_2d(17,29) = coll_evap_2d(17,29)+K(12,17)*c(17)*c(12);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(13,17)*c(17)*c(13);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(13,17)*c(17)*c(13);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(14,17)*c(17)*c(14);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(14,17)*c(17)*c(14);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(15,17)*c(17)*c(15);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(15,17)*c(17)*c(15);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(16,17)*c(17)*c(16);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(16,17)*c(17)*c(16);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+2*0.5*K(17,17)*c(17)*c(17);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+0.5*K(17,17)*c(17)*c(17);
	coll_evap_2d(17,31) = coll_evap_2d(17,31)+K(17,18)*c(17)*c(18);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,19)*c(17)*c(19);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,20)*c(17)*c(20);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,21)*c(17)*c(21);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,22)*c(17)*c(22);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,23)*c(17)*c(23);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,24)*c(17)*c(24);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,25)*c(17)*c(25);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,26)*c(17)*c(26);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,27)*c(17)*c(27);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,28)*c(17)*c(28);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,29)*c(17)*c(29);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,30)*c(17)*c(30);
	coll_evap_2d(17,75) = coll_evap_2d(17,75)+K(17,31)*c(17)*c(31);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,32)*c(17)*c(32);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,33)*c(17)*c(33);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,34)*c(17)*c(34);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,35)*c(17)*c(35);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,36)*c(17)*c(36);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,37)*c(17)*c(37);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,38)*c(17)*c(38);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,39)*c(17)*c(39);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,40)*c(17)*c(40);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,41)*c(17)*c(41);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,42)*c(17)*c(42);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,43)*c(17)*c(43);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,44)*c(17)*c(44);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,45)*c(17)*c(45);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,46)*c(17)*c(46);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,47)*c(17)*c(47);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,48)*c(17)*c(48);
	coll_evap_2d(17,76) = coll_evap_2d(17,76)+K(17,49)*c(17)*c(49);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,50)*c(17)*c(50);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,51)*c(17)*c(51);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,52)*c(17)*c(52);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,53)*c(17)*c(53);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,54)*c(17)*c(54);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,55)*c(17)*c(55);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,56)*c(17)*c(56);
	coll_evap_2d(17,67) = coll_evap_2d(17,67)+K(17,57)*c(17)*c(57);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,58)*c(17)*c(58);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,59)*c(17)*c(59);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,60)*c(17)*c(60);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,61)*c(17)*c(61);
	coll_evap_2d(17,77) = coll_evap_2d(17,77)+K(17,62)*c(17)*c(62);
	coll_evap_2d(17,77) = coll_evap_2d(17,77)+K(17,63)*c(17)*c(63);
	coll_evap_2d(17,77) = coll_evap_2d(17,77)+K(17,64)*c(17)*c(64);
	coll_evap_2d(17,77) = coll_evap_2d(17,77)+K(17,65)*c(17)*c(65);
	coll_evap_2d(17,77) = coll_evap_2d(17,77)+K(17,66)*c(17)*c(66);
	coll_evap_2d(17,77) = coll_evap_2d(17,77)+K(17,67)*c(17)*c(67);
	coll_evap_2d(17,46) = coll_evap_2d(17,46)+K(17,68)*c(17)*c(68);
	coll_evap_2d(17,78) = coll_evap_2d(17,78)+K(17,69)*c(17)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*0.5*K(17,17)*c(17)*c(17);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(17,24)*c(17)*c(24);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(17,32)*c(17)*c(32);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(17,33)*c(17)*c(33);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(17,34)*c(17)*c(34);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(17,35)*c(17)*c(35);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+5*K(17,36)*c(17)*c(36);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(17,50)*c(17)*c(50);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(17,51)*c(17)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(17,52)*c(17)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(17,53)*c(17)*c(53);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(17,54)*c(17)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(17,55)*c(17)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(17,56)*c(17)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(17,58)*c(17)*c(58);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(17,59)*c(17)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(17,60)*c(17)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(17,61)*c(17)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(17,69)*c(17)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(23,17) = coll_evap_2d(23,17)+E(6,17)*c(23);
	coll_evap_2d(29,17) = coll_evap_2d(29,17)+E(12,17)*c(29);
	coll_evap_2d(31,17) = coll_evap_2d(31,17)+E(17,18)*c(31);
	coll_evap_2d(67,17) = coll_evap_2d(67,17)+E(17,57)*c(67);
	% External losses
	coll_evap_2d(17,71) = coll_evap_2d(17,71)+CS(17)*c(17);

% Cluster 18: 3N
	% Collisions removing this cluster
	coll_evap_2d(18,19) = coll_evap_2d(18,19)+K(1,18)*c(18)*c(1);
	coll_evap_2d(18,20) = coll_evap_2d(18,20)+K(2,18)*c(18)*c(2);
	coll_evap_2d(18,21) = coll_evap_2d(18,21)+K(3,18)*c(18)*c(3);
	coll_evap_2d(18,22) = coll_evap_2d(18,22)+K(4,18)*c(18)*c(4);
	coll_evap_2d(18,23) = coll_evap_2d(18,23)+K(5,18)*c(18)*c(5);
	coll_evap_2d(18,24) = coll_evap_2d(18,24)+K(6,18)*c(18)*c(6);
	coll_evap_2d(18,25) = coll_evap_2d(18,25)+K(7,18)*c(18)*c(7);
	coll_evap_2d(18,26) = coll_evap_2d(18,26)+K(8,18)*c(18)*c(8);
	coll_evap_2d(18,27) = coll_evap_2d(18,27)+K(9,18)*c(18)*c(9);
	coll_evap_2d(18,28) = coll_evap_2d(18,28)+K(10,18)*c(18)*c(10);
	coll_evap_2d(18,29) = coll_evap_2d(18,29)+K(11,18)*c(18)*c(11);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(12,18)*c(18)*c(12);
	coll_evap_2d(78,24) = coll_evap_2d(78,24)+K(12,18)*c(18)*c(12);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(13,18)*c(18)*c(13);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(13,18)*c(18)*c(13);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(14,18)*c(18)*c(14);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(14,18)*c(18)*c(14);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(15,18)*c(18)*c(15);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(15,18)*c(18)*c(15);
	coll_evap_2d(18,30) = coll_evap_2d(18,30)+K(16,18)*c(18)*c(16);
	coll_evap_2d(18,31) = coll_evap_2d(18,31)+K(17,18)*c(18)*c(17);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+2*0.5*K(18,18)*c(18)*c(18);
	coll_evap_2d(78,24) = coll_evap_2d(78,24)+0.5*K(18,18)*c(18)*c(18);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,19)*c(18)*c(19);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,20)*c(18)*c(20);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,21)*c(18)*c(21);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,22)*c(18)*c(22);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,23)*c(18)*c(23);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,24)*c(18)*c(24);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,25)*c(18)*c(25);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,26)*c(18)*c(26);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,27)*c(18)*c(27);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,28)*c(18)*c(28);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,29)*c(18)*c(29);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,30)*c(18)*c(30);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,31)*c(18)*c(31);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,32)*c(18)*c(32);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,33)*c(18)*c(33);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,34)*c(18)*c(34);
	coll_evap_2d(18,47) = coll_evap_2d(18,47)+K(18,35)*c(18)*c(35);
	coll_evap_2d(18,48) = coll_evap_2d(18,48)+K(18,36)*c(18)*c(36);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,37)*c(18)*c(37);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,38)*c(18)*c(38);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,39)*c(18)*c(39);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,40)*c(18)*c(40);
	coll_evap_2d(18,49) = coll_evap_2d(18,49)+K(18,41)*c(18)*c(41);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,42)*c(18)*c(42);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,43)*c(18)*c(43);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,44)*c(18)*c(44);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,45)*c(18)*c(45);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,46)*c(18)*c(46);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,47)*c(18)*c(47);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,48)*c(18)*c(48);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,49)*c(18)*c(49);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,50)*c(18)*c(50);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,51)*c(18)*c(51);
	coll_evap_2d(18,62) = coll_evap_2d(18,62)+K(18,52)*c(18)*c(52);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,53)*c(18)*c(53);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,54)*c(18)*c(54);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,55)*c(18)*c(55);
	coll_evap_2d(18,65) = coll_evap_2d(18,65)+K(18,56)*c(18)*c(56);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,57)*c(18)*c(57);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,58)*c(18)*c(58);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,59)*c(18)*c(59);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,60)*c(18)*c(60);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,61)*c(18)*c(61);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,62)*c(18)*c(62);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,63)*c(18)*c(63);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,64)*c(18)*c(64);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,65)*c(18)*c(65);
	coll_evap_2d(18,78) = coll_evap_2d(18,78)+K(18,66)*c(18)*c(66);
	coll_evap_2d(18,77) = coll_evap_2d(18,77)+K(18,67)*c(18)*c(67);
	coll_evap_2d(18,57) = coll_evap_2d(18,57)+K(18,69)*c(18)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*0.5*K(18,18)*c(18)*c(18);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,19)*c(18)*c(19);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,20)*c(18)*c(20);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,21)*c(18)*c(21);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,22)*c(18)*c(22);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,23)*c(18)*c(23);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,24)*c(18)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,25)*c(18)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,26)*c(18)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,27)*c(18)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,28)*c(18)*c(28);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,29)*c(18)*c(29);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,30)*c(18)*c(30);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,31)*c(18)*c(31);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,32)*c(18)*c(32);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,33)*c(18)*c(33);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,34)*c(18)*c(34);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,37)*c(18)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,38)*c(18)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,39)*c(18)*c(39);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,40)*c(18)*c(40);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,42)*c(18)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,43)*c(18)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,44)*c(18)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,45)*c(18)*c(45);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,46)*c(18)*c(46);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,47)*c(18)*c(47);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,48)*c(18)*c(48);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,49)*c(18)*c(49);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,50)*c(18)*c(50);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,51)*c(18)*c(51);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,53)*c(18)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,54)*c(18)*c(54);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,55)*c(18)*c(55);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,57)*c(18)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,58)*c(18)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,59)*c(18)*c(59);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,60)*c(18)*c(60);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(18,61)*c(18)*c(61);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,62)*c(18)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,63)*c(18)*c(63);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(18,64)*c(18)*c(64);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,65)*c(18)*c(65);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(18,66)*c(18)*c(66);
	% Evaporations resulting in this cluster
	coll_evap_2d(19,18) = coll_evap_2d(19,18)+E(1,18)*c(19);
	coll_evap_2d(20,18) = coll_evap_2d(20,18)+E(2,18)*c(20);
	coll_evap_2d(21,18) = coll_evap_2d(21,18)+E(3,18)*c(21);
	coll_evap_2d(22,18) = coll_evap_2d(22,18)+E(4,18)*c(22);
	coll_evap_2d(23,18) = coll_evap_2d(23,18)+E(5,18)*c(23);
	coll_evap_2d(24,18) = coll_evap_2d(24,18)+E(6,18)*c(24);
	coll_evap_2d(25,18) = coll_evap_2d(25,18)+E(7,18)*c(25);
	coll_evap_2d(26,18) = coll_evap_2d(26,18)+E(8,18)*c(26);
	coll_evap_2d(27,18) = coll_evap_2d(27,18)+E(9,18)*c(27);
	coll_evap_2d(28,18) = coll_evap_2d(28,18)+E(10,18)*c(28);
	coll_evap_2d(29,18) = coll_evap_2d(29,18)+E(11,18)*c(29);
	coll_evap_2d(30,18) = coll_evap_2d(30,18)+E(16,18)*c(30);
	coll_evap_2d(31,18) = coll_evap_2d(31,18)+E(17,18)*c(31);
	coll_evap_2d(47,18) = coll_evap_2d(47,18)+E(18,35)*c(47);
	coll_evap_2d(48,18) = coll_evap_2d(48,18)+E(18,36)*c(48);
	coll_evap_2d(49,18) = coll_evap_2d(49,18)+E(18,41)*c(49);
	coll_evap_2d(62,18) = coll_evap_2d(62,18)+E(18,52)*c(62);
	coll_evap_2d(65,18) = coll_evap_2d(65,18)+E(18,56)*c(65);
	% External losses
	coll_evap_2d(18,71) = coll_evap_2d(18,71)+CS(18)*c(18);

% Cluster 19: 1A3N
	% Collisions removing this cluster
	coll_evap_2d(19,20) = coll_evap_2d(19,20)+K(1,19)*c(19)*c(1);
	coll_evap_2d(19,21) = coll_evap_2d(19,21)+K(2,19)*c(19)*c(2);
	coll_evap_2d(19,22) = coll_evap_2d(19,22)+K(3,19)*c(19)*c(3);
	coll_evap_2d(19,23) = coll_evap_2d(19,23)+K(4,19)*c(19)*c(4);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(5,19)*c(19)*c(5);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(5,19)*c(19)*c(5);
	coll_evap_2d(19,25) = coll_evap_2d(19,25)+K(6,19)*c(19)*c(6);
	coll_evap_2d(19,26) = coll_evap_2d(19,26)+K(7,19)*c(19)*c(7);
	coll_evap_2d(19,27) = coll_evap_2d(19,27)+K(8,19)*c(19)*c(8);
	coll_evap_2d(19,28) = coll_evap_2d(19,28)+K(9,19)*c(19)*c(9);
	coll_evap_2d(19,29) = coll_evap_2d(19,29)+K(10,19)*c(19)*c(10);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(11,19)*c(19)*c(11);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(11,19)*c(19)*c(11);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(12,19)*c(19)*c(12);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(12,19)*c(19)*c(12);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(13,19)*c(19)*c(13);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(13,19)*c(19)*c(13);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(14,19)*c(19)*c(14);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(14,19)*c(19)*c(14);
	coll_evap_2d(19,30) = coll_evap_2d(19,30)+K(15,19)*c(19)*c(15);
	coll_evap_2d(19,31) = coll_evap_2d(19,31)+K(16,19)*c(19)*c(16);
	coll_evap_2d(19,75) = coll_evap_2d(19,75)+K(17,19)*c(19)*c(17);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(18,19)*c(19)*c(18);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(18,19)*c(19)*c(18);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+2*0.5*K(19,19)*c(19)*c(19);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+0.5*K(19,19)*c(19)*c(19);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,20)*c(19)*c(20);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,21)*c(19)*c(21);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,22)*c(19)*c(22);
	coll_evap_2d(19,75) = coll_evap_2d(19,75)+K(19,23)*c(19)*c(23);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,24)*c(19)*c(24);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,25)*c(19)*c(25);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,26)*c(19)*c(26);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,27)*c(19)*c(27);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,28)*c(19)*c(28);
	coll_evap_2d(19,75) = coll_evap_2d(19,75)+K(19,29)*c(19)*c(29);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,30)*c(19)*c(30);
	coll_evap_2d(19,75) = coll_evap_2d(19,75)+K(19,31)*c(19)*c(31);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,32)*c(19)*c(32);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,33)*c(19)*c(33);
	coll_evap_2d(19,47) = coll_evap_2d(19,47)+K(19,34)*c(19)*c(34);
	coll_evap_2d(19,48) = coll_evap_2d(19,48)+K(19,35)*c(19)*c(35);
	coll_evap_2d(19,76) = coll_evap_2d(19,76)+K(19,36)*c(19)*c(36);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,37)*c(19)*c(37);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,38)*c(19)*c(38);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,39)*c(19)*c(39);
	coll_evap_2d(19,49) = coll_evap_2d(19,49)+K(19,40)*c(19)*c(40);
	coll_evap_2d(19,76) = coll_evap_2d(19,76)+K(19,41)*c(19)*c(41);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,42)*c(19)*c(42);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,43)*c(19)*c(43);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,44)*c(19)*c(44);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,45)*c(19)*c(45);
	coll_evap_2d(19,76) = coll_evap_2d(19,76)+K(19,46)*c(19)*c(46);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,47)*c(19)*c(47);
	coll_evap_2d(19,76) = coll_evap_2d(19,76)+K(19,48)*c(19)*c(48);
	coll_evap_2d(19,76) = coll_evap_2d(19,76)+K(19,49)*c(19)*c(49);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,50)*c(19)*c(50);
	coll_evap_2d(19,62) = coll_evap_2d(19,62)+K(19,51)*c(19)*c(51);
	coll_evap_2d(19,63) = coll_evap_2d(19,63)+K(19,52)*c(19)*c(52);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,53)*c(19)*c(53);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,54)*c(19)*c(54);
	coll_evap_2d(19,65) = coll_evap_2d(19,65)+K(19,55)*c(19)*c(55);
	coll_evap_2d(19,66) = coll_evap_2d(19,66)+K(19,56)*c(19)*c(56);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,57)*c(19)*c(57);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,58)*c(19)*c(58);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,59)*c(19)*c(59);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,60)*c(19)*c(60);
	coll_evap_2d(19,77) = coll_evap_2d(19,77)+K(19,61)*c(19)*c(61);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,62)*c(19)*c(62);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,63)*c(19)*c(63);
	coll_evap_2d(19,77) = coll_evap_2d(19,77)+K(19,64)*c(19)*c(64);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,65)*c(19)*c(65);
	coll_evap_2d(19,77) = coll_evap_2d(19,77)+K(19,66)*c(19)*c(66);
	coll_evap_2d(19,77) = coll_evap_2d(19,77)+K(19,67)*c(19)*c(67);
	coll_evap_2d(19,78) = coll_evap_2d(19,78)+K(19,68)*c(19)*c(68);
	coll_evap_2d(19,58) = coll_evap_2d(19,58)+K(19,69)*c(19)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*0.5*K(19,19)*c(19)*c(19);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,20)*c(19)*c(20);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,21)*c(19)*c(21);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,22)*c(19)*c(22);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(19,24)*c(19)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(19,25)*c(19)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(19,26)*c(19)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,27)*c(19)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,28)*c(19)*c(28);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(19,30)*c(19)*c(30);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,32)*c(19)*c(32);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,33)*c(19)*c(33);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,37)*c(19)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,38)*c(19)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,39)*c(19)*c(39);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(19,42)*c(19)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(19,43)*c(19)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,44)*c(19)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,45)*c(19)*c(45);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,47)*c(19)*c(47);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,50)*c(19)*c(50);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,53)*c(19)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,54)*c(19)*c(54);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(19,57)*c(19)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,58)*c(19)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,59)*c(19)*c(59);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,60)*c(19)*c(60);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,62)*c(19)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(19,63)*c(19)*c(63);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(19,65)*c(19)*c(65);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(19,68)*c(19)*c(68);
	% Evaporations resulting in this cluster
	coll_evap_2d(20,19) = coll_evap_2d(20,19)+E(1,19)*c(20);
	coll_evap_2d(21,19) = coll_evap_2d(21,19)+E(2,19)*c(21);
	coll_evap_2d(22,19) = coll_evap_2d(22,19)+E(3,19)*c(22);
	coll_evap_2d(23,19) = coll_evap_2d(23,19)+E(4,19)*c(23);
	coll_evap_2d(25,19) = coll_evap_2d(25,19)+E(6,19)*c(25);
	coll_evap_2d(26,19) = coll_evap_2d(26,19)+E(7,19)*c(26);
	coll_evap_2d(27,19) = coll_evap_2d(27,19)+E(8,19)*c(27);
	coll_evap_2d(28,19) = coll_evap_2d(28,19)+E(9,19)*c(28);
	coll_evap_2d(29,19) = coll_evap_2d(29,19)+E(10,19)*c(29);
	coll_evap_2d(30,19) = coll_evap_2d(30,19)+E(15,19)*c(30);
	coll_evap_2d(31,19) = coll_evap_2d(31,19)+E(16,19)*c(31);
	coll_evap_2d(47,19) = coll_evap_2d(47,19)+E(19,34)*c(47);
	coll_evap_2d(48,19) = coll_evap_2d(48,19)+E(19,35)*c(48);
	coll_evap_2d(49,19) = coll_evap_2d(49,19)+E(19,40)*c(49);
	coll_evap_2d(62,19) = coll_evap_2d(62,19)+E(19,51)*c(62);
	coll_evap_2d(63,19) = coll_evap_2d(63,19)+E(19,52)*c(63);
	coll_evap_2d(65,19) = coll_evap_2d(65,19)+E(19,55)*c(65);
	coll_evap_2d(66,19) = coll_evap_2d(66,19)+E(19,56)*c(66);
	% External losses
	coll_evap_2d(19,71) = coll_evap_2d(19,71)+CS(19)*c(19);

% Cluster 20: 2A3N
	% Collisions removing this cluster
	coll_evap_2d(20,21) = coll_evap_2d(20,21)+K(1,20)*c(20)*c(1);
	coll_evap_2d(20,22) = coll_evap_2d(20,22)+K(2,20)*c(20)*c(2);
	coll_evap_2d(20,23) = coll_evap_2d(20,23)+K(3,20)*c(20)*c(3);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(4,20)*c(20)*c(4);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(4,20)*c(20)*c(4);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(5,20)*c(20)*c(5);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(5,20)*c(20)*c(5);
	coll_evap_2d(20,26) = coll_evap_2d(20,26)+K(6,20)*c(20)*c(6);
	coll_evap_2d(20,27) = coll_evap_2d(20,27)+K(7,20)*c(20)*c(7);
	coll_evap_2d(20,28) = coll_evap_2d(20,28)+K(8,20)*c(20)*c(8);
	coll_evap_2d(20,29) = coll_evap_2d(20,29)+K(9,20)*c(20)*c(9);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(10,20)*c(20)*c(10);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(10,20)*c(20)*c(10);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(11,20)*c(20)*c(11);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(11,20)*c(20)*c(11);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(12,20)*c(20)*c(12);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(12,20)*c(20)*c(12);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(13,20)*c(20)*c(13);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(13,20)*c(20)*c(13);
	coll_evap_2d(20,30) = coll_evap_2d(20,30)+K(14,20)*c(20)*c(14);
	coll_evap_2d(20,31) = coll_evap_2d(20,31)+K(15,20)*c(20)*c(15);
	coll_evap_2d(20,75) = coll_evap_2d(20,75)+K(16,20)*c(20)*c(16);
	coll_evap_2d(20,75) = coll_evap_2d(20,75)+K(17,20)*c(20)*c(17);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(18,20)*c(20)*c(18);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(18,20)*c(20)*c(18);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(19,20)*c(20)*c(19);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(19,20)*c(20)*c(19);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+2*0.5*K(20,20)*c(20)*c(20);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+0.5*K(20,20)*c(20)*c(20);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,21)*c(20)*c(21);
	coll_evap_2d(20,75) = coll_evap_2d(20,75)+K(20,22)*c(20)*c(22);
	coll_evap_2d(20,75) = coll_evap_2d(20,75)+K(20,23)*c(20)*c(23);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,24)*c(20)*c(24);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,25)*c(20)*c(25);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,26)*c(20)*c(26);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,27)*c(20)*c(27);
	coll_evap_2d(20,75) = coll_evap_2d(20,75)+K(20,28)*c(20)*c(28);
	coll_evap_2d(20,75) = coll_evap_2d(20,75)+K(20,29)*c(20)*c(29);
	coll_evap_2d(20,75) = coll_evap_2d(20,75)+K(20,30)*c(20)*c(30);
	coll_evap_2d(20,75) = coll_evap_2d(20,75)+K(20,31)*c(20)*c(31);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,32)*c(20)*c(32);
	coll_evap_2d(20,47) = coll_evap_2d(20,47)+K(20,33)*c(20)*c(33);
	coll_evap_2d(20,48) = coll_evap_2d(20,48)+K(20,34)*c(20)*c(34);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,35)*c(20)*c(35);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,36)*c(20)*c(36);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,37)*c(20)*c(37);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,38)*c(20)*c(38);
	coll_evap_2d(20,49) = coll_evap_2d(20,49)+K(20,39)*c(20)*c(39);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,40)*c(20)*c(40);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,41)*c(20)*c(41);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,42)*c(20)*c(42);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,43)*c(20)*c(43);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,44)*c(20)*c(44);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,45)*c(20)*c(45);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,46)*c(20)*c(46);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,47)*c(20)*c(47);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,48)*c(20)*c(48);
	coll_evap_2d(20,76) = coll_evap_2d(20,76)+K(20,49)*c(20)*c(49);
	coll_evap_2d(20,62) = coll_evap_2d(20,62)+K(20,50)*c(20)*c(50);
	coll_evap_2d(20,63) = coll_evap_2d(20,63)+K(20,51)*c(20)*c(51);
	coll_evap_2d(20,64) = coll_evap_2d(20,64)+K(20,52)*c(20)*c(52);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,53)*c(20)*c(53);
	coll_evap_2d(20,65) = coll_evap_2d(20,65)+K(20,54)*c(20)*c(54);
	coll_evap_2d(20,66) = coll_evap_2d(20,66)+K(20,55)*c(20)*c(55);
	coll_evap_2d(20,67) = coll_evap_2d(20,67)+K(20,56)*c(20)*c(56);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,57)*c(20)*c(57);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,58)*c(20)*c(58);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,59)*c(20)*c(59);
	coll_evap_2d(20,77) = coll_evap_2d(20,77)+K(20,60)*c(20)*c(60);
	coll_evap_2d(20,77) = coll_evap_2d(20,77)+K(20,61)*c(20)*c(61);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,62)*c(20)*c(62);
	coll_evap_2d(20,77) = coll_evap_2d(20,77)+K(20,63)*c(20)*c(63);
	coll_evap_2d(20,77) = coll_evap_2d(20,77)+K(20,64)*c(20)*c(64);
	coll_evap_2d(20,77) = coll_evap_2d(20,77)+K(20,65)*c(20)*c(65);
	coll_evap_2d(20,77) = coll_evap_2d(20,77)+K(20,66)*c(20)*c(66);
	coll_evap_2d(20,77) = coll_evap_2d(20,77)+K(20,67)*c(20)*c(67);
	coll_evap_2d(20,78) = coll_evap_2d(20,78)+K(20,68)*c(20)*c(68);
	coll_evap_2d(20,59) = coll_evap_2d(20,59)+K(20,69)*c(20)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+0.5*K(20,20)*c(20)*c(20);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(20,21)*c(20)*c(21);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(20,24)*c(20)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(20,25)*c(20)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(20,26)*c(20)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(20,27)*c(20)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(20,32)*c(20)*c(32);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(20,37)*c(20)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(20,38)*c(20)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(20,42)*c(20)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(20,43)*c(20)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(20,44)*c(20)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(20,53)*c(20)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(20,57)*c(20)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(20,58)*c(20)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(20,59)*c(20)*c(59);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(20,62)*c(20)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(20,68)*c(20)*c(68);
	% Evaporations resulting in this cluster
	coll_evap_2d(21,20) = coll_evap_2d(21,20)+E(1,20)*c(21);
	coll_evap_2d(22,20) = coll_evap_2d(22,20)+E(2,20)*c(22);
	coll_evap_2d(23,20) = coll_evap_2d(23,20)+E(3,20)*c(23);
	coll_evap_2d(26,20) = coll_evap_2d(26,20)+E(6,20)*c(26);
	coll_evap_2d(27,20) = coll_evap_2d(27,20)+E(7,20)*c(27);
	coll_evap_2d(28,20) = coll_evap_2d(28,20)+E(8,20)*c(28);
	coll_evap_2d(29,20) = coll_evap_2d(29,20)+E(9,20)*c(29);
	coll_evap_2d(30,20) = coll_evap_2d(30,20)+E(14,20)*c(30);
	coll_evap_2d(31,20) = coll_evap_2d(31,20)+E(15,20)*c(31);
	coll_evap_2d(47,20) = coll_evap_2d(47,20)+E(20,33)*c(47);
	coll_evap_2d(48,20) = coll_evap_2d(48,20)+E(20,34)*c(48);
	coll_evap_2d(49,20) = coll_evap_2d(49,20)+E(20,39)*c(49);
	coll_evap_2d(62,20) = coll_evap_2d(62,20)+E(20,50)*c(62);
	coll_evap_2d(63,20) = coll_evap_2d(63,20)+E(20,51)*c(63);
	coll_evap_2d(64,20) = coll_evap_2d(64,20)+E(20,52)*c(64);
	coll_evap_2d(65,20) = coll_evap_2d(65,20)+E(20,54)*c(65);
	coll_evap_2d(66,20) = coll_evap_2d(66,20)+E(20,55)*c(66);
	coll_evap_2d(67,20) = coll_evap_2d(67,20)+E(20,56)*c(67);
	% External losses
	coll_evap_2d(20,71) = coll_evap_2d(20,71)+CS(20)*c(20);

% Cluster 21: 3A3N
	% Collisions removing this cluster
	coll_evap_2d(21,22) = coll_evap_2d(21,22)+K(1,21)*c(21)*c(1);
	coll_evap_2d(21,23) = coll_evap_2d(21,23)+K(2,21)*c(21)*c(2);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(3,21)*c(21)*c(3);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(3,21)*c(21)*c(3);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(4,21)*c(21)*c(4);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(4,21)*c(21)*c(4);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(5,21)*c(21)*c(5);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(5,21)*c(21)*c(5);
	coll_evap_2d(21,27) = coll_evap_2d(21,27)+K(6,21)*c(21)*c(6);
	coll_evap_2d(21,28) = coll_evap_2d(21,28)+K(7,21)*c(21)*c(7);
	coll_evap_2d(21,29) = coll_evap_2d(21,29)+K(8,21)*c(21)*c(8);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(9,21)*c(21)*c(9);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(9,21)*c(21)*c(9);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(10,21)*c(21)*c(10);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(10,21)*c(21)*c(10);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(11,21)*c(21)*c(11);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(11,21)*c(21)*c(11);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(12,21)*c(21)*c(12);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(12,21)*c(21)*c(12);
	coll_evap_2d(21,30) = coll_evap_2d(21,30)+K(13,21)*c(21)*c(13);
	coll_evap_2d(21,31) = coll_evap_2d(21,31)+K(14,21)*c(21)*c(14);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(15,21)*c(21)*c(15);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(16,21)*c(21)*c(16);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(17,21)*c(21)*c(17);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(18,21)*c(21)*c(18);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(18,21)*c(21)*c(18);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(19,21)*c(21)*c(19);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(19,21)*c(21)*c(19);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(20,21)*c(21)*c(20);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(20,21)*c(21)*c(20);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+2*0.5*K(21,21)*c(21)*c(21);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(21,22)*c(21)*c(22);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(21,23)*c(21)*c(23);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,24)*c(21)*c(24);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,25)*c(21)*c(25);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,26)*c(21)*c(26);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(21,27)*c(21)*c(27);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(21,28)*c(21)*c(28);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(21,29)*c(21)*c(29);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(21,30)*c(21)*c(30);
	coll_evap_2d(21,75) = coll_evap_2d(21,75)+K(21,31)*c(21)*c(31);
	coll_evap_2d(21,47) = coll_evap_2d(21,47)+K(21,32)*c(21)*c(32);
	coll_evap_2d(21,48) = coll_evap_2d(21,48)+K(21,33)*c(21)*c(33);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,34)*c(21)*c(34);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,35)*c(21)*c(35);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,36)*c(21)*c(36);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,37)*c(21)*c(37);
	coll_evap_2d(21,49) = coll_evap_2d(21,49)+K(21,38)*c(21)*c(38);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,39)*c(21)*c(39);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,40)*c(21)*c(40);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,41)*c(21)*c(41);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,42)*c(21)*c(42);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,43)*c(21)*c(43);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,44)*c(21)*c(44);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,45)*c(21)*c(45);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,46)*c(21)*c(46);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,47)*c(21)*c(47);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,48)*c(21)*c(48);
	coll_evap_2d(21,76) = coll_evap_2d(21,76)+K(21,49)*c(21)*c(49);
	coll_evap_2d(21,63) = coll_evap_2d(21,63)+K(21,50)*c(21)*c(50);
	coll_evap_2d(21,64) = coll_evap_2d(21,64)+K(21,51)*c(21)*c(51);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,52)*c(21)*c(52);
	coll_evap_2d(21,65) = coll_evap_2d(21,65)+K(21,53)*c(21)*c(53);
	coll_evap_2d(21,66) = coll_evap_2d(21,66)+K(21,54)*c(21)*c(54);
	coll_evap_2d(21,67) = coll_evap_2d(21,67)+K(21,55)*c(21)*c(55);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,56)*c(21)*c(56);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,57)*c(21)*c(57);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,58)*c(21)*c(58);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,59)*c(21)*c(59);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,60)*c(21)*c(60);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,61)*c(21)*c(61);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,62)*c(21)*c(62);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,63)*c(21)*c(63);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,64)*c(21)*c(64);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,65)*c(21)*c(65);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,66)*c(21)*c(66);
	coll_evap_2d(21,77) = coll_evap_2d(21,77)+K(21,67)*c(21)*c(67);
	coll_evap_2d(21,78) = coll_evap_2d(21,78)+K(21,68)*c(21)*c(68);
	coll_evap_2d(21,60) = coll_evap_2d(21,60)+K(21,69)*c(21)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(21,24)*c(21)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(21,25)*c(21)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(21,26)*c(21)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(21,37)*c(21)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(21,42)*c(21)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(21,43)*c(21)*c(43);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(21,52)*c(21)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(21,56)*c(21)*c(56);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(21,57)*c(21)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(21,58)*c(21)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(21,68)*c(21)*c(68);
	% Evaporations resulting in this cluster
	coll_evap_2d(22,21) = coll_evap_2d(22,21)+E(1,21)*c(22);
	coll_evap_2d(23,21) = coll_evap_2d(23,21)+E(2,21)*c(23);
	coll_evap_2d(27,21) = coll_evap_2d(27,21)+E(6,21)*c(27);
	coll_evap_2d(28,21) = coll_evap_2d(28,21)+E(7,21)*c(28);
	coll_evap_2d(29,21) = coll_evap_2d(29,21)+E(8,21)*c(29);
	coll_evap_2d(30,21) = coll_evap_2d(30,21)+E(13,21)*c(30);
	coll_evap_2d(31,21) = coll_evap_2d(31,21)+E(14,21)*c(31);
	coll_evap_2d(47,21) = coll_evap_2d(47,21)+E(21,32)*c(47);
	coll_evap_2d(48,21) = coll_evap_2d(48,21)+E(21,33)*c(48);
	coll_evap_2d(49,21) = coll_evap_2d(49,21)+E(21,38)*c(49);
	coll_evap_2d(63,21) = coll_evap_2d(63,21)+E(21,50)*c(63);
	coll_evap_2d(64,21) = coll_evap_2d(64,21)+E(21,51)*c(64);
	coll_evap_2d(65,21) = coll_evap_2d(65,21)+E(21,53)*c(65);
	coll_evap_2d(66,21) = coll_evap_2d(66,21)+E(21,54)*c(66);
	coll_evap_2d(67,21) = coll_evap_2d(67,21)+E(21,55)*c(67);
	% External losses
	coll_evap_2d(21,71) = coll_evap_2d(21,71)+CS(21)*c(21);

% Cluster 22: 4A3N
	% Collisions removing this cluster
	coll_evap_2d(22,23) = coll_evap_2d(22,23)+K(1,22)*c(22)*c(1);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(2,22)*c(22)*c(2);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(2,22)*c(22)*c(2);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(3,22)*c(22)*c(3);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(3,22)*c(22)*c(3);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(4,22)*c(22)*c(4);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(4,22)*c(22)*c(4);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(5,22)*c(22)*c(5);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(5,22)*c(22)*c(5);
	coll_evap_2d(22,28) = coll_evap_2d(22,28)+K(6,22)*c(22)*c(6);
	coll_evap_2d(22,29) = coll_evap_2d(22,29)+K(7,22)*c(22)*c(7);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(8,22)*c(22)*c(8);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(8,22)*c(22)*c(8);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(9,22)*c(22)*c(9);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(9,22)*c(22)*c(9);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(10,22)*c(22)*c(10);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(10,22)*c(22)*c(10);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(11,22)*c(22)*c(11);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(11,22)*c(22)*c(11);
	coll_evap_2d(22,30) = coll_evap_2d(22,30)+K(12,22)*c(22)*c(12);
	coll_evap_2d(22,31) = coll_evap_2d(22,31)+K(13,22)*c(22)*c(13);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(14,22)*c(22)*c(14);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(15,22)*c(22)*c(15);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(16,22)*c(22)*c(16);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(17,22)*c(22)*c(17);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(18,22)*c(22)*c(18);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(18,22)*c(22)*c(18);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(19,22)*c(22)*c(19);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(19,22)*c(22)*c(19);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(20,22)*c(22)*c(20);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(21,22)*c(22)*c(21);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+2*0.5*K(22,22)*c(22)*c(22);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(22,23)*c(22)*c(23);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(22,24)*c(22)*c(24);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(22,25)*c(22)*c(25);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(22,26)*c(22)*c(26);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(22,27)*c(22)*c(27);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(22,28)*c(22)*c(28);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(22,29)*c(22)*c(29);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(22,30)*c(22)*c(30);
	coll_evap_2d(22,75) = coll_evap_2d(22,75)+K(22,31)*c(22)*c(31);
	coll_evap_2d(22,48) = coll_evap_2d(22,48)+K(22,32)*c(22)*c(32);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,33)*c(22)*c(33);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,34)*c(22)*c(34);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,35)*c(22)*c(35);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,36)*c(22)*c(36);
	coll_evap_2d(22,49) = coll_evap_2d(22,49)+K(22,37)*c(22)*c(37);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,38)*c(22)*c(38);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,39)*c(22)*c(39);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,40)*c(22)*c(40);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,41)*c(22)*c(41);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(22,42)*c(22)*c(42);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,43)*c(22)*c(43);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,44)*c(22)*c(44);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,45)*c(22)*c(45);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,46)*c(22)*c(46);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,47)*c(22)*c(47);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,48)*c(22)*c(48);
	coll_evap_2d(22,76) = coll_evap_2d(22,76)+K(22,49)*c(22)*c(49);
	coll_evap_2d(22,64) = coll_evap_2d(22,64)+K(22,50)*c(22)*c(50);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(22,51)*c(22)*c(51);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(22,52)*c(22)*c(52);
	coll_evap_2d(22,66) = coll_evap_2d(22,66)+K(22,53)*c(22)*c(53);
	coll_evap_2d(22,67) = coll_evap_2d(22,67)+K(22,54)*c(22)*c(54);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(22,55)*c(22)*c(55);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(22,56)*c(22)*c(56);
	coll_evap_2d(22,78) = coll_evap_2d(22,78)+K(22,57)*c(22)*c(57);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,58)*c(22)*c(58);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,59)*c(22)*c(59);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,60)*c(22)*c(60);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,61)*c(22)*c(61);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,62)*c(22)*c(62);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,63)*c(22)*c(63);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,64)*c(22)*c(64);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,65)*c(22)*c(65);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,66)*c(22)*c(66);
	coll_evap_2d(22,77) = coll_evap_2d(22,77)+K(22,67)*c(22)*c(67);
	coll_evap_2d(22,47) = coll_evap_2d(22,47)+K(22,68)*c(22)*c(68);
	coll_evap_2d(22,61) = coll_evap_2d(22,61)+K(22,69)*c(22)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(22,24)*c(22)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(22,25)*c(22)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(22,42)*c(22)*c(42);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(22,51)*c(22)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(22,52)*c(22)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(22,55)*c(22)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(22,56)*c(22)*c(56);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(22,57)*c(22)*c(57);
	% Evaporations resulting in this cluster
	coll_evap_2d(23,22) = coll_evap_2d(23,22)+E(1,22)*c(23);
	coll_evap_2d(28,22) = coll_evap_2d(28,22)+E(6,22)*c(28);
	coll_evap_2d(29,22) = coll_evap_2d(29,22)+E(7,22)*c(29);
	coll_evap_2d(30,22) = coll_evap_2d(30,22)+E(12,22)*c(30);
	coll_evap_2d(31,22) = coll_evap_2d(31,22)+E(13,22)*c(31);
	coll_evap_2d(48,22) = coll_evap_2d(48,22)+E(22,32)*c(48);
	coll_evap_2d(49,22) = coll_evap_2d(49,22)+E(22,37)*c(49);
	coll_evap_2d(64,22) = coll_evap_2d(64,22)+E(22,50)*c(64);
	coll_evap_2d(66,22) = coll_evap_2d(66,22)+E(22,53)*c(66);
	coll_evap_2d(67,22) = coll_evap_2d(67,22)+E(22,54)*c(67);
	% External losses
	coll_evap_2d(22,71) = coll_evap_2d(22,71)+CS(22)*c(22);

% Cluster 23: 5A3N
	% Collisions removing this cluster
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(1,23)*c(23)*c(1);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(1,23)*c(23)*c(1);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(2,23)*c(23)*c(2);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(2,23)*c(23)*c(2);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(3,23)*c(23)*c(3);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(3,23)*c(23)*c(3);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(4,23)*c(23)*c(4);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(4,23)*c(23)*c(4);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(5,23)*c(23)*c(5);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(5,23)*c(23)*c(5);
	coll_evap_2d(23,29) = coll_evap_2d(23,29)+K(6,23)*c(23)*c(6);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(7,23)*c(23)*c(7);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(7,23)*c(23)*c(7);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(8,23)*c(23)*c(8);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(8,23)*c(23)*c(8);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(9,23)*c(23)*c(9);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(9,23)*c(23)*c(9);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(10,23)*c(23)*c(10);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(10,23)*c(23)*c(10);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(11,23)*c(23)*c(11);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(11,23)*c(23)*c(11);
	coll_evap_2d(23,31) = coll_evap_2d(23,31)+K(12,23)*c(23)*c(12);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(13,23)*c(23)*c(13);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(14,23)*c(23)*c(14);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(15,23)*c(23)*c(15);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(16,23)*c(23)*c(16);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(17,23)*c(23)*c(17);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(18,23)*c(23)*c(18);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(18,23)*c(23)*c(18);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(19,23)*c(23)*c(19);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(20,23)*c(23)*c(20);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(21,23)*c(23)*c(21);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(22,23)*c(23)*c(22);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+2*0.5*K(23,23)*c(23)*c(23);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(23,24)*c(23)*c(24);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(23,25)*c(23)*c(25);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(23,26)*c(23)*c(26);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(23,27)*c(23)*c(27);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(23,28)*c(23)*c(28);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(23,29)*c(23)*c(29);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(23,30)*c(23)*c(30);
	coll_evap_2d(23,75) = coll_evap_2d(23,75)+K(23,31)*c(23)*c(31);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,32)*c(23)*c(32);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,33)*c(23)*c(33);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,34)*c(23)*c(34);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,35)*c(23)*c(35);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,36)*c(23)*c(36);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,37)*c(23)*c(37);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,38)*c(23)*c(38);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,39)*c(23)*c(39);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,40)*c(23)*c(40);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,41)*c(23)*c(41);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,42)*c(23)*c(42);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,43)*c(23)*c(43);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,44)*c(23)*c(44);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,45)*c(23)*c(45);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,46)*c(23)*c(46);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,47)*c(23)*c(47);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,48)*c(23)*c(48);
	coll_evap_2d(23,76) = coll_evap_2d(23,76)+K(23,49)*c(23)*c(49);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(23,50)*c(23)*c(50);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(23,51)*c(23)*c(51);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(23,52)*c(23)*c(52);
	coll_evap_2d(23,67) = coll_evap_2d(23,67)+K(23,53)*c(23)*c(53);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(23,54)*c(23)*c(54);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(23,55)*c(23)*c(55);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(23,56)*c(23)*c(56);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,57)*c(23)*c(57);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,58)*c(23)*c(58);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,59)*c(23)*c(59);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,60)*c(23)*c(60);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,61)*c(23)*c(61);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,62)*c(23)*c(62);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,63)*c(23)*c(63);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,64)*c(23)*c(64);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,65)*c(23)*c(65);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,66)*c(23)*c(66);
	coll_evap_2d(23,77) = coll_evap_2d(23,77)+K(23,67)*c(23)*c(67);
	coll_evap_2d(23,48) = coll_evap_2d(23,48)+K(23,68)*c(23)*c(68);
	coll_evap_2d(23,78) = coll_evap_2d(23,78)+K(23,69)*c(23)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(23,24)*c(23)*c(24);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(23,50)*c(23)*c(50);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(23,51)*c(23)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(23,52)*c(23)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(23,54)*c(23)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(23,55)*c(23)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(23,56)*c(23)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(23,69)*c(23)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(29,23) = coll_evap_2d(29,23)+E(6,23)*c(29);
	coll_evap_2d(31,23) = coll_evap_2d(31,23)+E(12,23)*c(31);
	coll_evap_2d(67,23) = coll_evap_2d(67,23)+E(23,53)*c(67);
	% External losses
	coll_evap_2d(23,71) = coll_evap_2d(23,71)+CS(23)*c(23);

% Cluster 24: 4N
	% Collisions removing this cluster
	coll_evap_2d(24,25) = coll_evap_2d(24,25)+K(1,24)*c(24)*c(1);
	coll_evap_2d(24,26) = coll_evap_2d(24,26)+K(2,24)*c(24)*c(2);
	coll_evap_2d(24,27) = coll_evap_2d(24,27)+K(3,24)*c(24)*c(3);
	coll_evap_2d(24,28) = coll_evap_2d(24,28)+K(4,24)*c(24)*c(4);
	coll_evap_2d(24,29) = coll_evap_2d(24,29)+K(5,24)*c(24)*c(5);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(6,24)*c(24)*c(6);
	coll_evap_2d(78,24) = coll_evap_2d(78,24)+K(6,24)*c(24)*c(6);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(7,24)*c(24)*c(7);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(7,24)*c(24)*c(7);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(8,24)*c(24)*c(8);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(8,24)*c(24)*c(8);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(9,24)*c(24)*c(9);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(9,24)*c(24)*c(9);
	coll_evap_2d(24,30) = coll_evap_2d(24,30)+K(10,24)*c(24)*c(10);
	coll_evap_2d(24,31) = coll_evap_2d(24,31)+K(11,24)*c(24)*c(11);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(12,24)*c(24)*c(12);
	coll_evap_2d(78,24) = coll_evap_2d(78,24)+K(12,24)*c(24)*c(12);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(13,24)*c(24)*c(13);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(13,24)*c(24)*c(13);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(14,24)*c(24)*c(14);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(14,24)*c(24)*c(14);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(15,24)*c(24)*c(15);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(15,24)*c(24)*c(15);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(16,24)*c(24)*c(16);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(16,24)*c(24)*c(16);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(17,24)*c(24)*c(17);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(17,24)*c(24)*c(17);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(18,24)*c(24)*c(18);
	coll_evap_2d(78,24) = coll_evap_2d(78,24)+K(18,24)*c(24)*c(18);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(19,24)*c(24)*c(19);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(19,24)*c(24)*c(19);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(20,24)*c(24)*c(20);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(20,24)*c(24)*c(20);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(21,24)*c(24)*c(21);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(21,24)*c(24)*c(21);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(22,24)*c(24)*c(22);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(22,24)*c(24)*c(22);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(23,24)*c(24)*c(23);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(23,24)*c(24)*c(23);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+2*0.5*K(24,24)*c(24)*c(24);
	coll_evap_2d(78,24) = coll_evap_2d(78,24)+0.5*K(24,24)*c(24)*c(24);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,25)*c(24)*c(25);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,26)*c(24)*c(26);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,27)*c(24)*c(27);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,28)*c(24)*c(28);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,29)*c(24)*c(29);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,30)*c(24)*c(30);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,31)*c(24)*c(31);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,32)*c(24)*c(32);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,33)*c(24)*c(33);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,34)*c(24)*c(34);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,35)*c(24)*c(35);
	coll_evap_2d(24,49) = coll_evap_2d(24,49)+K(24,36)*c(24)*c(36);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,37)*c(24)*c(37);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,38)*c(24)*c(38);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,39)*c(24)*c(39);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,40)*c(24)*c(40);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,41)*c(24)*c(41);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,42)*c(24)*c(42);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,43)*c(24)*c(43);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,44)*c(24)*c(44);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,45)*c(24)*c(45);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,46)*c(24)*c(46);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,47)*c(24)*c(47);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,48)*c(24)*c(48);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,49)*c(24)*c(49);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,50)*c(24)*c(50);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,51)*c(24)*c(51);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,52)*c(24)*c(52);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,53)*c(24)*c(53);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,54)*c(24)*c(54);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,55)*c(24)*c(55);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,56)*c(24)*c(56);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,57)*c(24)*c(57);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,58)*c(24)*c(58);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,59)*c(24)*c(59);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,60)*c(24)*c(60);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,61)*c(24)*c(61);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,62)*c(24)*c(62);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,63)*c(24)*c(63);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,64)*c(24)*c(64);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,65)*c(24)*c(65);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,66)*c(24)*c(66);
	coll_evap_2d(24,77) = coll_evap_2d(24,77)+K(24,67)*c(24)*c(67);
	coll_evap_2d(24,78) = coll_evap_2d(24,78)+K(24,69)*c(24)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*0.5*K(24,24)*c(24)*c(24);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,25)*c(24)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,26)*c(24)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,27)*c(24)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,28)*c(24)*c(28);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,29)*c(24)*c(29);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,30)*c(24)*c(30);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,31)*c(24)*c(31);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,32)*c(24)*c(32);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,33)*c(24)*c(33);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,34)*c(24)*c(34);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(24,35)*c(24)*c(35);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,37)*c(24)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,38)*c(24)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,39)*c(24)*c(39);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,40)*c(24)*c(40);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(24,41)*c(24)*c(41);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,42)*c(24)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,43)*c(24)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,44)*c(24)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,45)*c(24)*c(45);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,46)*c(24)*c(46);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,47)*c(24)*c(47);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,48)*c(24)*c(48);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,49)*c(24)*c(49);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,50)*c(24)*c(50);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,51)*c(24)*c(51);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(24,52)*c(24)*c(52);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,53)*c(24)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,54)*c(24)*c(54);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,55)*c(24)*c(55);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(24,56)*c(24)*c(56);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,57)*c(24)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,58)*c(24)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,59)*c(24)*c(59);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,60)*c(24)*c(60);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(24,61)*c(24)*c(61);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,62)*c(24)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,63)*c(24)*c(63);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(24,64)*c(24)*c(64);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,65)*c(24)*c(65);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(24,66)*c(24)*c(66);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(24,69)*c(24)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(25,24) = coll_evap_2d(25,24)+E(1,24)*c(25);
	coll_evap_2d(26,24) = coll_evap_2d(26,24)+E(2,24)*c(26);
	coll_evap_2d(27,24) = coll_evap_2d(27,24)+E(3,24)*c(27);
	coll_evap_2d(28,24) = coll_evap_2d(28,24)+E(4,24)*c(28);
	coll_evap_2d(29,24) = coll_evap_2d(29,24)+E(5,24)*c(29);
	coll_evap_2d(30,24) = coll_evap_2d(30,24)+E(10,24)*c(30);
	coll_evap_2d(31,24) = coll_evap_2d(31,24)+E(11,24)*c(31);
	coll_evap_2d(49,24) = coll_evap_2d(49,24)+E(24,36)*c(49);
	% External losses
	coll_evap_2d(24,71) = coll_evap_2d(24,71)+CS(24)*c(24);

% Cluster 25: 1A4N
	% Collisions removing this cluster
	coll_evap_2d(25,26) = coll_evap_2d(25,26)+K(1,25)*c(25)*c(1);
	coll_evap_2d(25,27) = coll_evap_2d(25,27)+K(2,25)*c(25)*c(2);
	coll_evap_2d(25,28) = coll_evap_2d(25,28)+K(3,25)*c(25)*c(3);
	coll_evap_2d(25,29) = coll_evap_2d(25,29)+K(4,25)*c(25)*c(4);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(5,25)*c(25)*c(5);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(5,25)*c(25)*c(5);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(6,25)*c(25)*c(6);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(6,25)*c(25)*c(6);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(7,25)*c(25)*c(7);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(7,25)*c(25)*c(7);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(8,25)*c(25)*c(8);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(8,25)*c(25)*c(8);
	coll_evap_2d(25,30) = coll_evap_2d(25,30)+K(9,25)*c(25)*c(9);
	coll_evap_2d(25,31) = coll_evap_2d(25,31)+K(10,25)*c(25)*c(10);
	coll_evap_2d(25,75) = coll_evap_2d(25,75)+K(11,25)*c(25)*c(11);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(12,25)*c(25)*c(12);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(12,25)*c(25)*c(12);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(13,25)*c(25)*c(13);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(13,25)*c(25)*c(13);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(14,25)*c(25)*c(14);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(14,25)*c(25)*c(14);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(15,25)*c(25)*c(15);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(15,25)*c(25)*c(15);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(16,25)*c(25)*c(16);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(16,25)*c(25)*c(16);
	coll_evap_2d(25,75) = coll_evap_2d(25,75)+K(17,25)*c(25)*c(17);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(18,25)*c(25)*c(18);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(18,25)*c(25)*c(18);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(19,25)*c(25)*c(19);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(19,25)*c(25)*c(19);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(20,25)*c(25)*c(20);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(20,25)*c(25)*c(20);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(21,25)*c(25)*c(21);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(21,25)*c(25)*c(21);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(22,25)*c(25)*c(22);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(22,25)*c(25)*c(22);
	coll_evap_2d(25,75) = coll_evap_2d(25,75)+K(23,25)*c(25)*c(23);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(24,25)*c(25)*c(24);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(24,25)*c(25)*c(24);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+2*0.5*K(25,25)*c(25)*c(25);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+0.5*K(25,25)*c(25)*c(25);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,26)*c(25)*c(26);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,27)*c(25)*c(27);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,28)*c(25)*c(28);
	coll_evap_2d(25,75) = coll_evap_2d(25,75)+K(25,29)*c(25)*c(29);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,30)*c(25)*c(30);
	coll_evap_2d(25,75) = coll_evap_2d(25,75)+K(25,31)*c(25)*c(31);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,32)*c(25)*c(32);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,33)*c(25)*c(33);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,34)*c(25)*c(34);
	coll_evap_2d(25,49) = coll_evap_2d(25,49)+K(25,35)*c(25)*c(35);
	coll_evap_2d(25,76) = coll_evap_2d(25,76)+K(25,36)*c(25)*c(36);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,37)*c(25)*c(37);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,38)*c(25)*c(38);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,39)*c(25)*c(39);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,40)*c(25)*c(40);
	coll_evap_2d(25,76) = coll_evap_2d(25,76)+K(25,41)*c(25)*c(41);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,42)*c(25)*c(42);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,43)*c(25)*c(43);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,44)*c(25)*c(44);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,45)*c(25)*c(45);
	coll_evap_2d(25,76) = coll_evap_2d(25,76)+K(25,46)*c(25)*c(46);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,47)*c(25)*c(47);
	coll_evap_2d(25,76) = coll_evap_2d(25,76)+K(25,48)*c(25)*c(48);
	coll_evap_2d(25,76) = coll_evap_2d(25,76)+K(25,49)*c(25)*c(49);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,50)*c(25)*c(50);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,51)*c(25)*c(51);
	coll_evap_2d(25,65) = coll_evap_2d(25,65)+K(25,52)*c(25)*c(52);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,53)*c(25)*c(53);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,54)*c(25)*c(54);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,55)*c(25)*c(55);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,56)*c(25)*c(56);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,57)*c(25)*c(57);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,58)*c(25)*c(58);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,59)*c(25)*c(59);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,60)*c(25)*c(60);
	coll_evap_2d(25,77) = coll_evap_2d(25,77)+K(25,61)*c(25)*c(61);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,62)*c(25)*c(62);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,63)*c(25)*c(63);
	coll_evap_2d(25,77) = coll_evap_2d(25,77)+K(25,64)*c(25)*c(64);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,65)*c(25)*c(65);
	coll_evap_2d(25,77) = coll_evap_2d(25,77)+K(25,66)*c(25)*c(66);
	coll_evap_2d(25,77) = coll_evap_2d(25,77)+K(25,67)*c(25)*c(67);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,68)*c(25)*c(68);
	coll_evap_2d(25,78) = coll_evap_2d(25,78)+K(25,69)*c(25)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*0.5*K(25,25)*c(25)*c(25);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(25,26)*c(25)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,27)*c(25)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,28)*c(25)*c(28);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(25,30)*c(25)*c(30);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,32)*c(25)*c(32);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,33)*c(25)*c(33);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(25,34)*c(25)*c(34);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,37)*c(25)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,38)*c(25)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,39)*c(25)*c(39);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(25,40)*c(25)*c(40);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(25,42)*c(25)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(25,43)*c(25)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,44)*c(25)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,45)*c(25)*c(45);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,47)*c(25)*c(47);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,50)*c(25)*c(50);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(25,51)*c(25)*c(51);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,53)*c(25)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,54)*c(25)*c(54);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(25,55)*c(25)*c(55);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(25,56)*c(25)*c(56);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(25,57)*c(25)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,58)*c(25)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,59)*c(25)*c(59);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,60)*c(25)*c(60);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,62)*c(25)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(25,63)*c(25)*c(63);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(25,65)*c(25)*c(65);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(25,68)*c(25)*c(68);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(25,69)*c(25)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(26,25) = coll_evap_2d(26,25)+E(1,25)*c(26);
	coll_evap_2d(27,25) = coll_evap_2d(27,25)+E(2,25)*c(27);
	coll_evap_2d(28,25) = coll_evap_2d(28,25)+E(3,25)*c(28);
	coll_evap_2d(29,25) = coll_evap_2d(29,25)+E(4,25)*c(29);
	coll_evap_2d(30,25) = coll_evap_2d(30,25)+E(9,25)*c(30);
	coll_evap_2d(31,25) = coll_evap_2d(31,25)+E(10,25)*c(31);
	coll_evap_2d(49,25) = coll_evap_2d(49,25)+E(25,35)*c(49);
	coll_evap_2d(65,25) = coll_evap_2d(65,25)+E(25,52)*c(65);
	% External losses
	coll_evap_2d(25,71) = coll_evap_2d(25,71)+CS(25)*c(25);

% Cluster 26: 2A4N
	% Collisions removing this cluster
	coll_evap_2d(26,27) = coll_evap_2d(26,27)+K(1,26)*c(26)*c(1);
	coll_evap_2d(26,28) = coll_evap_2d(26,28)+K(2,26)*c(26)*c(2);
	coll_evap_2d(26,29) = coll_evap_2d(26,29)+K(3,26)*c(26)*c(3);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(4,26)*c(26)*c(4);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(4,26)*c(26)*c(4);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(5,26)*c(26)*c(5);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(5,26)*c(26)*c(5);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(6,26)*c(26)*c(6);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(6,26)*c(26)*c(6);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(7,26)*c(26)*c(7);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(7,26)*c(26)*c(7);
	coll_evap_2d(26,30) = coll_evap_2d(26,30)+K(8,26)*c(26)*c(8);
	coll_evap_2d(26,31) = coll_evap_2d(26,31)+K(9,26)*c(26)*c(9);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(10,26)*c(26)*c(10);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(11,26)*c(26)*c(11);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(12,26)*c(26)*c(12);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(12,26)*c(26)*c(12);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(13,26)*c(26)*c(13);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(13,26)*c(26)*c(13);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(14,26)*c(26)*c(14);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(14,26)*c(26)*c(14);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(15,26)*c(26)*c(15);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(15,26)*c(26)*c(15);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(16,26)*c(26)*c(16);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(17,26)*c(26)*c(17);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(18,26)*c(26)*c(18);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(18,26)*c(26)*c(18);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(19,26)*c(26)*c(19);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(19,26)*c(26)*c(19);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(20,26)*c(26)*c(20);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(20,26)*c(26)*c(20);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(21,26)*c(26)*c(21);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(21,26)*c(26)*c(21);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(22,26)*c(26)*c(22);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(23,26)*c(26)*c(23);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(24,26)*c(26)*c(24);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(24,26)*c(26)*c(24);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(25,26)*c(26)*c(25);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(25,26)*c(26)*c(25);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+2*0.5*K(26,26)*c(26)*c(26);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+0.5*K(26,26)*c(26)*c(26);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,27)*c(26)*c(27);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(26,28)*c(26)*c(28);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(26,29)*c(26)*c(29);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(26,30)*c(26)*c(30);
	coll_evap_2d(26,75) = coll_evap_2d(26,75)+K(26,31)*c(26)*c(31);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,32)*c(26)*c(32);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,33)*c(26)*c(33);
	coll_evap_2d(26,49) = coll_evap_2d(26,49)+K(26,34)*c(26)*c(34);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,35)*c(26)*c(35);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,36)*c(26)*c(36);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,37)*c(26)*c(37);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,38)*c(26)*c(38);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,39)*c(26)*c(39);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,40)*c(26)*c(40);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,41)*c(26)*c(41);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,42)*c(26)*c(42);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,43)*c(26)*c(43);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,44)*c(26)*c(44);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,45)*c(26)*c(45);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,46)*c(26)*c(46);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,47)*c(26)*c(47);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,48)*c(26)*c(48);
	coll_evap_2d(26,76) = coll_evap_2d(26,76)+K(26,49)*c(26)*c(49);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,50)*c(26)*c(50);
	coll_evap_2d(26,65) = coll_evap_2d(26,65)+K(26,51)*c(26)*c(51);
	coll_evap_2d(26,66) = coll_evap_2d(26,66)+K(26,52)*c(26)*c(52);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,53)*c(26)*c(53);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,54)*c(26)*c(54);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,55)*c(26)*c(55);
	coll_evap_2d(26,77) = coll_evap_2d(26,77)+K(26,56)*c(26)*c(56);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,57)*c(26)*c(57);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,58)*c(26)*c(58);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,59)*c(26)*c(59);
	coll_evap_2d(26,77) = coll_evap_2d(26,77)+K(26,60)*c(26)*c(60);
	coll_evap_2d(26,77) = coll_evap_2d(26,77)+K(26,61)*c(26)*c(61);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,62)*c(26)*c(62);
	coll_evap_2d(26,77) = coll_evap_2d(26,77)+K(26,63)*c(26)*c(63);
	coll_evap_2d(26,77) = coll_evap_2d(26,77)+K(26,64)*c(26)*c(64);
	coll_evap_2d(26,77) = coll_evap_2d(26,77)+K(26,65)*c(26)*c(65);
	coll_evap_2d(26,77) = coll_evap_2d(26,77)+K(26,66)*c(26)*c(66);
	coll_evap_2d(26,77) = coll_evap_2d(26,77)+K(26,67)*c(26)*c(67);
	coll_evap_2d(26,78) = coll_evap_2d(26,78)+K(26,68)*c(26)*c(68);
	coll_evap_2d(26,62) = coll_evap_2d(26,62)+K(26,69)*c(26)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*0.5*K(26,26)*c(26)*c(26);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(26,27)*c(26)*c(27);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(26,32)*c(26)*c(32);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(26,33)*c(26)*c(33);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(26,37)*c(26)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(26,38)*c(26)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(26,39)*c(26)*c(39);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+4*K(26,42)*c(26)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(26,43)*c(26)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(26,44)*c(26)*c(44);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(26,50)*c(26)*c(50);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(26,53)*c(26)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(26,54)*c(26)*c(54);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(26,55)*c(26)*c(55);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(26,57)*c(26)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(26,58)*c(26)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(26,59)*c(26)*c(59);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(26,62)*c(26)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(26,68)*c(26)*c(68);
	% Evaporations resulting in this cluster
	coll_evap_2d(27,26) = coll_evap_2d(27,26)+E(1,26)*c(27);
	coll_evap_2d(28,26) = coll_evap_2d(28,26)+E(2,26)*c(28);
	coll_evap_2d(29,26) = coll_evap_2d(29,26)+E(3,26)*c(29);
	coll_evap_2d(30,26) = coll_evap_2d(30,26)+E(8,26)*c(30);
	coll_evap_2d(31,26) = coll_evap_2d(31,26)+E(9,26)*c(31);
	coll_evap_2d(49,26) = coll_evap_2d(49,26)+E(26,34)*c(49);
	coll_evap_2d(65,26) = coll_evap_2d(65,26)+E(26,51)*c(65);
	coll_evap_2d(66,26) = coll_evap_2d(66,26)+E(26,52)*c(66);
	% External losses
	coll_evap_2d(26,71) = coll_evap_2d(26,71)+CS(26)*c(26);

% Cluster 27: 3A4N
	% Collisions removing this cluster
	coll_evap_2d(27,28) = coll_evap_2d(27,28)+K(1,27)*c(27)*c(1);
	coll_evap_2d(27,29) = coll_evap_2d(27,29)+K(2,27)*c(27)*c(2);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(3,27)*c(27)*c(3);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(3,27)*c(27)*c(3);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(4,27)*c(27)*c(4);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(4,27)*c(27)*c(4);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(5,27)*c(27)*c(5);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(5,27)*c(27)*c(5);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(6,27)*c(27)*c(6);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(6,27)*c(27)*c(6);
	coll_evap_2d(27,30) = coll_evap_2d(27,30)+K(7,27)*c(27)*c(7);
	coll_evap_2d(27,31) = coll_evap_2d(27,31)+K(8,27)*c(27)*c(8);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(9,27)*c(27)*c(9);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(10,27)*c(27)*c(10);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(11,27)*c(27)*c(11);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(12,27)*c(27)*c(12);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(12,27)*c(27)*c(12);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(13,27)*c(27)*c(13);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(13,27)*c(27)*c(13);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(14,27)*c(27)*c(14);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(14,27)*c(27)*c(14);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(15,27)*c(27)*c(15);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(16,27)*c(27)*c(16);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(17,27)*c(27)*c(17);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(18,27)*c(27)*c(18);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(18,27)*c(27)*c(18);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(19,27)*c(27)*c(19);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(19,27)*c(27)*c(19);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(20,27)*c(27)*c(20);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(20,27)*c(27)*c(20);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(21,27)*c(27)*c(21);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(22,27)*c(27)*c(22);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(23,27)*c(27)*c(23);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(24,27)*c(27)*c(24);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(24,27)*c(27)*c(24);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(25,27)*c(27)*c(25);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(25,27)*c(27)*c(25);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(26,27)*c(27)*c(26);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(26,27)*c(27)*c(26);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+2*0.5*K(27,27)*c(27)*c(27);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(27,28)*c(27)*c(28);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(27,29)*c(27)*c(29);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(27,30)*c(27)*c(30);
	coll_evap_2d(27,75) = coll_evap_2d(27,75)+K(27,31)*c(27)*c(31);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,32)*c(27)*c(32);
	coll_evap_2d(27,49) = coll_evap_2d(27,49)+K(27,33)*c(27)*c(33);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,34)*c(27)*c(34);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,35)*c(27)*c(35);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,36)*c(27)*c(36);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,37)*c(27)*c(37);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,38)*c(27)*c(38);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,39)*c(27)*c(39);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,40)*c(27)*c(40);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,41)*c(27)*c(41);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,42)*c(27)*c(42);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,43)*c(27)*c(43);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,44)*c(27)*c(44);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,45)*c(27)*c(45);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,46)*c(27)*c(46);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,47)*c(27)*c(47);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,48)*c(27)*c(48);
	coll_evap_2d(27,76) = coll_evap_2d(27,76)+K(27,49)*c(27)*c(49);
	coll_evap_2d(27,65) = coll_evap_2d(27,65)+K(27,50)*c(27)*c(50);
	coll_evap_2d(27,66) = coll_evap_2d(27,66)+K(27,51)*c(27)*c(51);
	coll_evap_2d(27,67) = coll_evap_2d(27,67)+K(27,52)*c(27)*c(52);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,53)*c(27)*c(53);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,54)*c(27)*c(54);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,55)*c(27)*c(55);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,56)*c(27)*c(56);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,57)*c(27)*c(57);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,58)*c(27)*c(58);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,59)*c(27)*c(59);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,60)*c(27)*c(60);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,61)*c(27)*c(61);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,62)*c(27)*c(62);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,63)*c(27)*c(63);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,64)*c(27)*c(64);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,65)*c(27)*c(65);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,66)*c(27)*c(66);
	coll_evap_2d(27,77) = coll_evap_2d(27,77)+K(27,67)*c(27)*c(67);
	coll_evap_2d(27,78) = coll_evap_2d(27,78)+K(27,68)*c(27)*c(68);
	coll_evap_2d(27,63) = coll_evap_2d(27,63)+K(27,69)*c(27)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(27,32)*c(27)*c(32);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(27,37)*c(27)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(27,38)*c(27)*c(38);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(27,42)*c(27)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(27,43)*c(27)*c(43);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(27,53)*c(27)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(27,54)*c(27)*c(54);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(27,57)*c(27)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(27,58)*c(27)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(27,68)*c(27)*c(68);
	% Evaporations resulting in this cluster
	coll_evap_2d(28,27) = coll_evap_2d(28,27)+E(1,27)*c(28);
	coll_evap_2d(29,27) = coll_evap_2d(29,27)+E(2,27)*c(29);
	coll_evap_2d(30,27) = coll_evap_2d(30,27)+E(7,27)*c(30);
	coll_evap_2d(31,27) = coll_evap_2d(31,27)+E(8,27)*c(31);
	coll_evap_2d(49,27) = coll_evap_2d(49,27)+E(27,33)*c(49);
	coll_evap_2d(65,27) = coll_evap_2d(65,27)+E(27,50)*c(65);
	coll_evap_2d(66,27) = coll_evap_2d(66,27)+E(27,51)*c(66);
	coll_evap_2d(67,27) = coll_evap_2d(67,27)+E(27,52)*c(67);
	% External losses
	coll_evap_2d(27,71) = coll_evap_2d(27,71)+CS(27)*c(27);

% Cluster 28: 4A4N
	% Collisions removing this cluster
	coll_evap_2d(28,29) = coll_evap_2d(28,29)+K(1,28)*c(28)*c(1);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(2,28)*c(28)*c(2);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(2,28)*c(28)*c(2);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(3,28)*c(28)*c(3);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(3,28)*c(28)*c(3);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(4,28)*c(28)*c(4);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(4,28)*c(28)*c(4);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(5,28)*c(28)*c(5);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(5,28)*c(28)*c(5);
	coll_evap_2d(28,30) = coll_evap_2d(28,30)+K(6,28)*c(28)*c(6);
	coll_evap_2d(28,31) = coll_evap_2d(28,31)+K(7,28)*c(28)*c(7);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(8,28)*c(28)*c(8);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(9,28)*c(28)*c(9);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(10,28)*c(28)*c(10);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(11,28)*c(28)*c(11);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(12,28)*c(28)*c(12);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(12,28)*c(28)*c(12);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(13,28)*c(28)*c(13);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(13,28)*c(28)*c(13);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(14,28)*c(28)*c(14);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(15,28)*c(28)*c(15);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(16,28)*c(28)*c(16);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(17,28)*c(28)*c(17);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(18,28)*c(28)*c(18);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(18,28)*c(28)*c(18);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(19,28)*c(28)*c(19);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(19,28)*c(28)*c(19);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(20,28)*c(28)*c(20);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(21,28)*c(28)*c(21);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(22,28)*c(28)*c(22);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(23,28)*c(28)*c(23);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(24,28)*c(28)*c(24);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(24,28)*c(28)*c(24);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(25,28)*c(28)*c(25);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(25,28)*c(28)*c(25);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(26,28)*c(28)*c(26);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(27,28)*c(28)*c(27);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+2*0.5*K(28,28)*c(28)*c(28);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(28,29)*c(28)*c(29);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(28,30)*c(28)*c(30);
	coll_evap_2d(28,75) = coll_evap_2d(28,75)+K(28,31)*c(28)*c(31);
	coll_evap_2d(28,49) = coll_evap_2d(28,49)+K(28,32)*c(28)*c(32);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,33)*c(28)*c(33);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,34)*c(28)*c(34);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,35)*c(28)*c(35);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,36)*c(28)*c(36);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(28,37)*c(28)*c(37);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,38)*c(28)*c(38);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,39)*c(28)*c(39);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,40)*c(28)*c(40);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,41)*c(28)*c(41);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(28,42)*c(28)*c(42);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,43)*c(28)*c(43);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,44)*c(28)*c(44);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,45)*c(28)*c(45);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,46)*c(28)*c(46);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,47)*c(28)*c(47);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,48)*c(28)*c(48);
	coll_evap_2d(28,76) = coll_evap_2d(28,76)+K(28,49)*c(28)*c(49);
	coll_evap_2d(28,66) = coll_evap_2d(28,66)+K(28,50)*c(28)*c(50);
	coll_evap_2d(28,67) = coll_evap_2d(28,67)+K(28,51)*c(28)*c(51);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(28,52)*c(28)*c(52);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(28,53)*c(28)*c(53);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,54)*c(28)*c(54);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,55)*c(28)*c(55);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,56)*c(28)*c(56);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(28,57)*c(28)*c(57);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,58)*c(28)*c(58);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,59)*c(28)*c(59);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,60)*c(28)*c(60);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,61)*c(28)*c(61);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,62)*c(28)*c(62);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,63)*c(28)*c(63);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,64)*c(28)*c(64);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,65)*c(28)*c(65);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,66)*c(28)*c(66);
	coll_evap_2d(28,77) = coll_evap_2d(28,77)+K(28,67)*c(28)*c(67);
	coll_evap_2d(28,78) = coll_evap_2d(28,78)+K(28,68)*c(28)*c(68);
	coll_evap_2d(28,64) = coll_evap_2d(28,64)+K(28,69)*c(28)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(28,37)*c(28)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(28,42)*c(28)*c(42);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(28,52)*c(28)*c(52);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(28,53)*c(28)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(28,57)*c(28)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(28,68)*c(28)*c(68);
	% Evaporations resulting in this cluster
	coll_evap_2d(29,28) = coll_evap_2d(29,28)+E(1,28)*c(29);
	coll_evap_2d(30,28) = coll_evap_2d(30,28)+E(6,28)*c(30);
	coll_evap_2d(31,28) = coll_evap_2d(31,28)+E(7,28)*c(31);
	coll_evap_2d(49,28) = coll_evap_2d(49,28)+E(28,32)*c(49);
	coll_evap_2d(66,28) = coll_evap_2d(66,28)+E(28,50)*c(66);
	coll_evap_2d(67,28) = coll_evap_2d(67,28)+E(28,51)*c(67);
	% External losses
	coll_evap_2d(28,71) = coll_evap_2d(28,71)+CS(28)*c(28);

% Cluster 29: 5A4N
	% Collisions removing this cluster
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(1,29)*c(29)*c(1);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(1,29)*c(29)*c(1);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(2,29)*c(29)*c(2);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(2,29)*c(29)*c(2);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(3,29)*c(29)*c(3);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(3,29)*c(29)*c(3);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(4,29)*c(29)*c(4);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(4,29)*c(29)*c(4);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(5,29)*c(29)*c(5);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(5,29)*c(29)*c(5);
	coll_evap_2d(29,31) = coll_evap_2d(29,31)+K(6,29)*c(29)*c(6);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(7,29)*c(29)*c(7);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(8,29)*c(29)*c(8);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(9,29)*c(29)*c(9);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(10,29)*c(29)*c(10);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(11,29)*c(29)*c(11);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(12,29)*c(29)*c(12);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(12,29)*c(29)*c(12);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(13,29)*c(29)*c(13);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(14,29)*c(29)*c(14);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(15,29)*c(29)*c(15);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(16,29)*c(29)*c(16);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(17,29)*c(29)*c(17);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(18,29)*c(29)*c(18);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(18,29)*c(29)*c(18);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(19,29)*c(29)*c(19);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(20,29)*c(29)*c(20);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(21,29)*c(29)*c(21);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(22,29)*c(29)*c(22);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(23,29)*c(29)*c(23);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(24,29)*c(29)*c(24);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(24,29)*c(29)*c(24);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(25,29)*c(29)*c(25);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(26,29)*c(29)*c(26);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(27,29)*c(29)*c(27);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(28,29)*c(29)*c(28);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+2*0.5*K(29,29)*c(29)*c(29);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(29,30)*c(29)*c(30);
	coll_evap_2d(29,75) = coll_evap_2d(29,75)+K(29,31)*c(29)*c(31);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,32)*c(29)*c(32);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,33)*c(29)*c(33);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,34)*c(29)*c(34);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,35)*c(29)*c(35);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,36)*c(29)*c(36);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,37)*c(29)*c(37);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,38)*c(29)*c(38);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,39)*c(29)*c(39);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,40)*c(29)*c(40);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,41)*c(29)*c(41);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,42)*c(29)*c(42);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,43)*c(29)*c(43);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,44)*c(29)*c(44);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,45)*c(29)*c(45);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,46)*c(29)*c(46);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,47)*c(29)*c(47);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,48)*c(29)*c(48);
	coll_evap_2d(29,76) = coll_evap_2d(29,76)+K(29,49)*c(29)*c(49);
	coll_evap_2d(29,67) = coll_evap_2d(29,67)+K(29,50)*c(29)*c(50);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(29,51)*c(29)*c(51);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(29,52)*c(29)*c(52);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,53)*c(29)*c(53);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,54)*c(29)*c(54);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,55)*c(29)*c(55);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,56)*c(29)*c(56);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,57)*c(29)*c(57);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,58)*c(29)*c(58);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,59)*c(29)*c(59);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,60)*c(29)*c(60);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,61)*c(29)*c(61);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,62)*c(29)*c(62);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,63)*c(29)*c(63);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,64)*c(29)*c(64);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,65)*c(29)*c(65);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,66)*c(29)*c(66);
	coll_evap_2d(29,77) = coll_evap_2d(29,77)+K(29,67)*c(29)*c(67);
	coll_evap_2d(29,49) = coll_evap_2d(29,49)+K(29,68)*c(29)*c(68);
	coll_evap_2d(29,78) = coll_evap_2d(29,78)+K(29,69)*c(29)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(29,51)*c(29)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(29,52)*c(29)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(29,69)*c(29)*c(69);
	% Evaporations resulting in this cluster
	coll_evap_2d(31,29) = coll_evap_2d(31,29)+E(6,29)*c(31);
	coll_evap_2d(67,29) = coll_evap_2d(67,29)+E(29,50)*c(67);
	% External losses
	coll_evap_2d(29,71) = coll_evap_2d(29,71)+CS(29)*c(29);

% Cluster 30: 4A5N
	% Collisions removing this cluster
	coll_evap_2d(30,31) = coll_evap_2d(30,31)+K(1,30)*c(30)*c(1);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(2,30)*c(30)*c(2);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(3,30)*c(30)*c(3);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(4,30)*c(30)*c(4);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(5,30)*c(30)*c(5);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(6,30)*c(30)*c(6);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(6,30)*c(30)*c(6);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(7,30)*c(30)*c(7);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(7,30)*c(30)*c(7);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(8,30)*c(30)*c(8);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(9,30)*c(30)*c(9);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(10,30)*c(30)*c(10);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(11,30)*c(30)*c(11);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(12,30)*c(30)*c(12);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(12,30)*c(30)*c(12);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(13,30)*c(30)*c(13);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(13,30)*c(30)*c(13);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(14,30)*c(30)*c(14);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(15,30)*c(30)*c(15);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(16,30)*c(30)*c(16);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(17,30)*c(30)*c(17);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(18,30)*c(30)*c(18);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(18,30)*c(30)*c(18);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(19,30)*c(30)*c(19);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(19,30)*c(30)*c(19);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(20,30)*c(30)*c(20);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(21,30)*c(30)*c(21);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(22,30)*c(30)*c(22);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(23,30)*c(30)*c(23);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(24,30)*c(30)*c(24);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(24,30)*c(30)*c(24);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(25,30)*c(30)*c(25);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(25,30)*c(30)*c(25);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(26,30)*c(30)*c(26);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(27,30)*c(30)*c(27);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(28,30)*c(30)*c(28);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(29,30)*c(30)*c(29);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+2*0.5*K(30,30)*c(30)*c(30);
	coll_evap_2d(30,75) = coll_evap_2d(30,75)+K(30,31)*c(30)*c(31);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(30,32)*c(30)*c(32);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,33)*c(30)*c(33);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,34)*c(30)*c(34);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,35)*c(30)*c(35);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,36)*c(30)*c(36);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(30,37)*c(30)*c(37);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,38)*c(30)*c(38);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,39)*c(30)*c(39);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,40)*c(30)*c(40);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,41)*c(30)*c(41);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(30,42)*c(30)*c(42);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,43)*c(30)*c(43);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,44)*c(30)*c(44);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,45)*c(30)*c(45);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,46)*c(30)*c(46);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,47)*c(30)*c(47);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,48)*c(30)*c(48);
	coll_evap_2d(30,76) = coll_evap_2d(30,76)+K(30,49)*c(30)*c(49);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(30,50)*c(30)*c(50);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,51)*c(30)*c(51);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,52)*c(30)*c(52);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(30,53)*c(30)*c(53);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,54)*c(30)*c(54);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,55)*c(30)*c(55);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,56)*c(30)*c(56);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(30,57)*c(30)*c(57);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,58)*c(30)*c(58);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,59)*c(30)*c(59);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,60)*c(30)*c(60);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,61)*c(30)*c(61);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,62)*c(30)*c(62);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,63)*c(30)*c(63);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,64)*c(30)*c(64);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,65)*c(30)*c(65);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,66)*c(30)*c(66);
	coll_evap_2d(30,77) = coll_evap_2d(30,77)+K(30,67)*c(30)*c(67);
	coll_evap_2d(30,78) = coll_evap_2d(30,78)+K(30,68)*c(30)*c(68);
	coll_evap_2d(30,66) = coll_evap_2d(30,66)+K(30,69)*c(30)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(30,32)*c(30)*c(32);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(30,37)*c(30)*c(37);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(30,42)*c(30)*c(42);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(30,50)*c(30)*c(50);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(30,53)*c(30)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+3*K(30,57)*c(30)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(30,68)*c(30)*c(68);
	% Evaporations resulting in this cluster
	coll_evap_2d(31,30) = coll_evap_2d(31,30)+E(1,30)*c(31);
	% External losses
	coll_evap_2d(30,71) = coll_evap_2d(30,71)+CS(30)*c(30);

% Cluster 31: 5A5N
	% Collisions removing this cluster
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(1,31)*c(31)*c(1);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(2,31)*c(31)*c(2);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(3,31)*c(31)*c(3);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(4,31)*c(31)*c(4);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(5,31)*c(31)*c(5);
	coll_evap_2d(31,78) = coll_evap_2d(31,78)+K(6,31)*c(31)*c(6);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(6,31)*c(31)*c(6);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(7,31)*c(31)*c(7);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(8,31)*c(31)*c(8);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(9,31)*c(31)*c(9);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(10,31)*c(31)*c(10);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(11,31)*c(31)*c(11);
	coll_evap_2d(31,78) = coll_evap_2d(31,78)+K(12,31)*c(31)*c(12);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(12,31)*c(31)*c(12);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(13,31)*c(31)*c(13);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(14,31)*c(31)*c(14);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(15,31)*c(31)*c(15);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(16,31)*c(31)*c(16);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(17,31)*c(31)*c(17);
	coll_evap_2d(31,78) = coll_evap_2d(31,78)+K(18,31)*c(31)*c(18);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(18,31)*c(31)*c(18);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(19,31)*c(31)*c(19);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(20,31)*c(31)*c(20);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(21,31)*c(31)*c(21);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(22,31)*c(31)*c(22);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(23,31)*c(31)*c(23);
	coll_evap_2d(31,78) = coll_evap_2d(31,78)+K(24,31)*c(31)*c(24);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(24,31)*c(31)*c(24);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(25,31)*c(31)*c(25);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(26,31)*c(31)*c(26);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(27,31)*c(31)*c(27);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(28,31)*c(31)*c(28);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(29,31)*c(31)*c(29);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+K(30,31)*c(31)*c(30);
	coll_evap_2d(31,75) = coll_evap_2d(31,75)+2*0.5*K(31,31)*c(31)*c(31);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,32)*c(31)*c(32);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,33)*c(31)*c(33);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,34)*c(31)*c(34);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,35)*c(31)*c(35);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,36)*c(31)*c(36);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,37)*c(31)*c(37);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,38)*c(31)*c(38);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,39)*c(31)*c(39);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,40)*c(31)*c(40);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,41)*c(31)*c(41);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,42)*c(31)*c(42);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,43)*c(31)*c(43);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,44)*c(31)*c(44);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,45)*c(31)*c(45);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,46)*c(31)*c(46);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,47)*c(31)*c(47);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,48)*c(31)*c(48);
	coll_evap_2d(31,76) = coll_evap_2d(31,76)+K(31,49)*c(31)*c(49);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,50)*c(31)*c(50);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,51)*c(31)*c(51);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,52)*c(31)*c(52);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,53)*c(31)*c(53);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,54)*c(31)*c(54);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,55)*c(31)*c(55);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,56)*c(31)*c(56);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,57)*c(31)*c(57);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,58)*c(31)*c(58);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,59)*c(31)*c(59);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,60)*c(31)*c(60);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,61)*c(31)*c(61);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,62)*c(31)*c(62);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,63)*c(31)*c(63);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,64)*c(31)*c(64);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,65)*c(31)*c(65);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,66)*c(31)*c(66);
	coll_evap_2d(31,77) = coll_evap_2d(31,77)+K(31,67)*c(31)*c(67);
	coll_evap_2d(31,78) = coll_evap_2d(31,78)+K(31,68)*c(31)*c(68);
	coll_evap_2d(31,67) = coll_evap_2d(31,67)+K(31,69)*c(31)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(31,68)*c(31)*c(68);
	% External losses
	coll_evap_2d(31,71) = coll_evap_2d(31,71)+CS(31)*c(31);

% Cluster 32: 1B
	% Collisions removing this cluster
	coll_evap_2d(32,33) = coll_evap_2d(32,33)+K(1,32)*c(32)*c(1);
	coll_evap_2d(32,34) = coll_evap_2d(32,34)+K(2,32)*c(32)*c(2);
	coll_evap_2d(32,35) = coll_evap_2d(32,35)+K(3,32)*c(32)*c(3);
	coll_evap_2d(32,36) = coll_evap_2d(32,36)+K(4,32)*c(32)*c(4);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(5,32)*c(32)*c(5);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(5,32)*c(32)*c(5);
	coll_evap_2d(32,37) = coll_evap_2d(32,37)+K(6,32)*c(32)*c(6);
	coll_evap_2d(32,38) = coll_evap_2d(32,38)+K(7,32)*c(32)*c(7);
	coll_evap_2d(32,39) = coll_evap_2d(32,39)+K(8,32)*c(32)*c(8);
	coll_evap_2d(32,40) = coll_evap_2d(32,40)+K(9,32)*c(32)*c(9);
	coll_evap_2d(32,41) = coll_evap_2d(32,41)+K(10,32)*c(32)*c(10);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(11,32)*c(32)*c(11);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(11,32)*c(32)*c(11);
	coll_evap_2d(32,42) = coll_evap_2d(32,42)+K(12,32)*c(32)*c(12);
	coll_evap_2d(32,43) = coll_evap_2d(32,43)+K(13,32)*c(32)*c(13);
	coll_evap_2d(32,44) = coll_evap_2d(32,44)+K(14,32)*c(32)*c(14);
	coll_evap_2d(32,45) = coll_evap_2d(32,45)+K(15,32)*c(32)*c(15);
	coll_evap_2d(32,46) = coll_evap_2d(32,46)+K(16,32)*c(32)*c(16);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(17,32)*c(32)*c(17);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(17,32)*c(32)*c(17);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(18,32)*c(32)*c(18);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(18,32)*c(32)*c(18);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(19,32)*c(32)*c(19);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(19,32)*c(32)*c(19);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(20,32)*c(32)*c(20);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(20,32)*c(32)*c(20);
	coll_evap_2d(32,47) = coll_evap_2d(32,47)+K(21,32)*c(32)*c(21);
	coll_evap_2d(32,48) = coll_evap_2d(32,48)+K(22,32)*c(32)*c(22);
	coll_evap_2d(32,76) = coll_evap_2d(32,76)+K(23,32)*c(32)*c(23);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(24,32)*c(32)*c(24);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(24,32)*c(32)*c(24);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(25,32)*c(32)*c(25);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(25,32)*c(32)*c(25);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(26,32)*c(32)*c(26);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(26,32)*c(32)*c(26);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(27,32)*c(32)*c(27);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(27,32)*c(32)*c(27);
	coll_evap_2d(32,49) = coll_evap_2d(32,49)+K(28,32)*c(32)*c(28);
	coll_evap_2d(32,76) = coll_evap_2d(32,76)+K(29,32)*c(32)*c(29);
	coll_evap_2d(32,78) = coll_evap_2d(32,78)+K(30,32)*c(32)*c(30);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(30,32)*c(32)*c(30);
	coll_evap_2d(32,76) = coll_evap_2d(32,76)+K(31,32)*c(32)*c(31);
	coll_evap_2d(32,7) = coll_evap_2d(32,7)+K(32,50)*c(32)*c(50);
	coll_evap_2d(32,8) = coll_evap_2d(32,8)+K(32,51)*c(32)*c(51);
	coll_evap_2d(32,9) = coll_evap_2d(32,9)+K(32,52)*c(32)*c(52);
	coll_evap_2d(32,13) = coll_evap_2d(32,13)+K(32,53)*c(32)*c(53);
	coll_evap_2d(32,14) = coll_evap_2d(32,14)+K(32,54)*c(32)*c(54);
	coll_evap_2d(32,15) = coll_evap_2d(32,15)+K(32,55)*c(32)*c(55);
	coll_evap_2d(32,16) = coll_evap_2d(32,16)+K(32,56)*c(32)*c(56);
	coll_evap_2d(32,19) = coll_evap_2d(32,19)+K(32,57)*c(32)*c(57);
	coll_evap_2d(32,20) = coll_evap_2d(32,20)+K(32,58)*c(32)*c(58);
	coll_evap_2d(32,21) = coll_evap_2d(32,21)+K(32,59)*c(32)*c(59);
	coll_evap_2d(32,22) = coll_evap_2d(32,22)+K(32,60)*c(32)*c(60);
	coll_evap_2d(32,23) = coll_evap_2d(32,23)+K(32,61)*c(32)*c(61);
	coll_evap_2d(32,27) = coll_evap_2d(32,27)+K(32,62)*c(32)*c(62);
	coll_evap_2d(32,28) = coll_evap_2d(32,28)+K(32,63)*c(32)*c(63);
	coll_evap_2d(32,29) = coll_evap_2d(32,29)+K(32,64)*c(32)*c(64);
	coll_evap_2d(32,30) = coll_evap_2d(32,30)+K(32,65)*c(32)*c(65);
	coll_evap_2d(32,31) = coll_evap_2d(32,31)+K(32,66)*c(32)*c(66);
	coll_evap_2d(32,75) = coll_evap_2d(32,75)+K(32,67)*c(32)*c(67);
	coll_evap_2d(32,1) = coll_evap_2d(32,1)+K(32,69)*c(32)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(33,32) = coll_evap_2d(33,32)+E(1,32)*c(33);
	coll_evap_2d(34,32) = coll_evap_2d(34,32)+E(2,32)*c(34);
	coll_evap_2d(35,32) = coll_evap_2d(35,32)+E(3,32)*c(35);
	coll_evap_2d(36,32) = coll_evap_2d(36,32)+E(4,32)*c(36);
	coll_evap_2d(37,32) = coll_evap_2d(37,32)+E(6,32)*c(37);
	coll_evap_2d(38,32) = coll_evap_2d(38,32)+E(7,32)*c(38);
	coll_evap_2d(39,32) = coll_evap_2d(39,32)+E(8,32)*c(39);
	coll_evap_2d(40,32) = coll_evap_2d(40,32)+E(9,32)*c(40);
	coll_evap_2d(41,32) = coll_evap_2d(41,32)+E(10,32)*c(41);
	coll_evap_2d(42,32) = coll_evap_2d(42,32)+E(12,32)*c(42);
	coll_evap_2d(43,32) = coll_evap_2d(43,32)+E(13,32)*c(43);
	coll_evap_2d(44,32) = coll_evap_2d(44,32)+E(14,32)*c(44);
	coll_evap_2d(45,32) = coll_evap_2d(45,32)+E(15,32)*c(45);
	coll_evap_2d(46,32) = coll_evap_2d(46,32)+E(16,32)*c(46);
	coll_evap_2d(47,32) = coll_evap_2d(47,32)+E(21,32)*c(47);
	coll_evap_2d(48,32) = coll_evap_2d(48,32)+E(22,32)*c(48);
	coll_evap_2d(49,32) = coll_evap_2d(49,32)+E(28,32)*c(49);
	% External losses
	coll_evap_2d(32,71) = coll_evap_2d(32,71)+fcs*CS(32)*c(32);

% Cluster 33: 1A1B
	% Collisions removing this cluster
	coll_evap_2d(33,34) = coll_evap_2d(33,34)+K(1,33)*c(33)*c(1);
	coll_evap_2d(33,35) = coll_evap_2d(33,35)+K(2,33)*c(33)*c(2);
	coll_evap_2d(33,36) = coll_evap_2d(33,36)+K(3,33)*c(33)*c(3);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(4,33)*c(33)*c(4);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(4,33)*c(33)*c(4);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(5,33)*c(33)*c(5);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(5,33)*c(33)*c(5);
	coll_evap_2d(33,38) = coll_evap_2d(33,38)+K(6,33)*c(33)*c(6);
	coll_evap_2d(33,39) = coll_evap_2d(33,39)+K(7,33)*c(33)*c(7);
	coll_evap_2d(33,40) = coll_evap_2d(33,40)+K(8,33)*c(33)*c(8);
	coll_evap_2d(33,41) = coll_evap_2d(33,41)+K(9,33)*c(33)*c(9);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(10,33)*c(33)*c(10);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(10,33)*c(33)*c(10);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(11,33)*c(33)*c(11);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(11,33)*c(33)*c(11);
	coll_evap_2d(33,43) = coll_evap_2d(33,43)+K(12,33)*c(33)*c(12);
	coll_evap_2d(33,44) = coll_evap_2d(33,44)+K(13,33)*c(33)*c(13);
	coll_evap_2d(33,45) = coll_evap_2d(33,45)+K(14,33)*c(33)*c(14);
	coll_evap_2d(33,46) = coll_evap_2d(33,46)+K(15,33)*c(33)*c(15);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(16,33)*c(33)*c(16);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(16,33)*c(33)*c(16);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(17,33)*c(33)*c(17);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(17,33)*c(33)*c(17);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(18,33)*c(33)*c(18);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(18,33)*c(33)*c(18);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(19,33)*c(33)*c(19);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(19,33)*c(33)*c(19);
	coll_evap_2d(33,47) = coll_evap_2d(33,47)+K(20,33)*c(33)*c(20);
	coll_evap_2d(33,48) = coll_evap_2d(33,48)+K(21,33)*c(33)*c(21);
	coll_evap_2d(33,76) = coll_evap_2d(33,76)+K(22,33)*c(33)*c(22);
	coll_evap_2d(33,76) = coll_evap_2d(33,76)+K(23,33)*c(33)*c(23);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(24,33)*c(33)*c(24);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(24,33)*c(33)*c(24);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(25,33)*c(33)*c(25);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(25,33)*c(33)*c(25);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(26,33)*c(33)*c(26);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(26,33)*c(33)*c(26);
	coll_evap_2d(33,49) = coll_evap_2d(33,49)+K(27,33)*c(33)*c(27);
	coll_evap_2d(33,76) = coll_evap_2d(33,76)+K(28,33)*c(33)*c(28);
	coll_evap_2d(33,76) = coll_evap_2d(33,76)+K(29,33)*c(33)*c(29);
	coll_evap_2d(33,76) = coll_evap_2d(33,76)+K(30,33)*c(33)*c(30);
	coll_evap_2d(33,76) = coll_evap_2d(33,76)+K(31,33)*c(33)*c(31);
	coll_evap_2d(33,8) = coll_evap_2d(33,8)+K(33,50)*c(33)*c(50);
	coll_evap_2d(33,9) = coll_evap_2d(33,9)+K(33,51)*c(33)*c(51);
	coll_evap_2d(33,10) = coll_evap_2d(33,10)+K(33,52)*c(33)*c(52);
	coll_evap_2d(33,14) = coll_evap_2d(33,14)+K(33,53)*c(33)*c(53);
	coll_evap_2d(33,15) = coll_evap_2d(33,15)+K(33,54)*c(33)*c(54);
	coll_evap_2d(33,16) = coll_evap_2d(33,16)+K(33,55)*c(33)*c(55);
	coll_evap_2d(33,17) = coll_evap_2d(33,17)+K(33,56)*c(33)*c(56);
	coll_evap_2d(33,20) = coll_evap_2d(33,20)+K(33,57)*c(33)*c(57);
	coll_evap_2d(33,21) = coll_evap_2d(33,21)+K(33,58)*c(33)*c(58);
	coll_evap_2d(33,22) = coll_evap_2d(33,22)+K(33,59)*c(33)*c(59);
	coll_evap_2d(33,23) = coll_evap_2d(33,23)+K(33,60)*c(33)*c(60);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(33,61)*c(33)*c(61);
	coll_evap_2d(33,28) = coll_evap_2d(33,28)+K(33,62)*c(33)*c(62);
	coll_evap_2d(33,29) = coll_evap_2d(33,29)+K(33,63)*c(33)*c(63);
	coll_evap_2d(33,78) = coll_evap_2d(33,78)+K(33,64)*c(33)*c(64);
	coll_evap_2d(33,31) = coll_evap_2d(33,31)+K(33,65)*c(33)*c(65);
	coll_evap_2d(33,75) = coll_evap_2d(33,75)+K(33,66)*c(33)*c(66);
	coll_evap_2d(33,75) = coll_evap_2d(33,75)+K(33,67)*c(33)*c(67);
	coll_evap_2d(33,2) = coll_evap_2d(33,2)+K(33,69)*c(33)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(33,61)*c(33)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(33,64)*c(33)*c(64);
	% Evaporations resulting in this cluster
	coll_evap_2d(34,33) = coll_evap_2d(34,33)+E(1,33)*c(34);
	coll_evap_2d(35,33) = coll_evap_2d(35,33)+E(2,33)*c(35);
	coll_evap_2d(36,33) = coll_evap_2d(36,33)+E(3,33)*c(36);
	coll_evap_2d(38,33) = coll_evap_2d(38,33)+E(6,33)*c(38);
	coll_evap_2d(39,33) = coll_evap_2d(39,33)+E(7,33)*c(39);
	coll_evap_2d(40,33) = coll_evap_2d(40,33)+E(8,33)*c(40);
	coll_evap_2d(41,33) = coll_evap_2d(41,33)+E(9,33)*c(41);
	coll_evap_2d(43,33) = coll_evap_2d(43,33)+E(12,33)*c(43);
	coll_evap_2d(44,33) = coll_evap_2d(44,33)+E(13,33)*c(44);
	coll_evap_2d(45,33) = coll_evap_2d(45,33)+E(14,33)*c(45);
	coll_evap_2d(46,33) = coll_evap_2d(46,33)+E(15,33)*c(46);
	coll_evap_2d(47,33) = coll_evap_2d(47,33)+E(20,33)*c(47);
	coll_evap_2d(48,33) = coll_evap_2d(48,33)+E(21,33)*c(48);
	coll_evap_2d(49,33) = coll_evap_2d(49,33)+E(27,33)*c(49);
	% External losses
	coll_evap_2d(33,71) = coll_evap_2d(33,71)+fcs*CS(33)*c(33);

% Cluster 34: 2A1B
	% Collisions removing this cluster
	coll_evap_2d(34,35) = coll_evap_2d(34,35)+K(1,34)*c(34)*c(1);
	coll_evap_2d(34,36) = coll_evap_2d(34,36)+K(2,34)*c(34)*c(2);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(3,34)*c(34)*c(3);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(3,34)*c(34)*c(3);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(4,34)*c(34)*c(4);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(4,34)*c(34)*c(4);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(5,34)*c(34)*c(5);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(5,34)*c(34)*c(5);
	coll_evap_2d(34,39) = coll_evap_2d(34,39)+K(6,34)*c(34)*c(6);
	coll_evap_2d(34,40) = coll_evap_2d(34,40)+K(7,34)*c(34)*c(7);
	coll_evap_2d(34,41) = coll_evap_2d(34,41)+K(8,34)*c(34)*c(8);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(9,34)*c(34)*c(9);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(9,34)*c(34)*c(9);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(10,34)*c(34)*c(10);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(10,34)*c(34)*c(10);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(11,34)*c(34)*c(11);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(11,34)*c(34)*c(11);
	coll_evap_2d(34,44) = coll_evap_2d(34,44)+K(12,34)*c(34)*c(12);
	coll_evap_2d(34,45) = coll_evap_2d(34,45)+K(13,34)*c(34)*c(13);
	coll_evap_2d(34,46) = coll_evap_2d(34,46)+K(14,34)*c(34)*c(14);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(15,34)*c(34)*c(15);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(15,34)*c(34)*c(15);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(16,34)*c(34)*c(16);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(16,34)*c(34)*c(16);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(17,34)*c(34)*c(17);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(17,34)*c(34)*c(17);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(18,34)*c(34)*c(18);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(18,34)*c(34)*c(18);
	coll_evap_2d(34,47) = coll_evap_2d(34,47)+K(19,34)*c(34)*c(19);
	coll_evap_2d(34,48) = coll_evap_2d(34,48)+K(20,34)*c(34)*c(20);
	coll_evap_2d(34,76) = coll_evap_2d(34,76)+K(21,34)*c(34)*c(21);
	coll_evap_2d(34,76) = coll_evap_2d(34,76)+K(22,34)*c(34)*c(22);
	coll_evap_2d(34,76) = coll_evap_2d(34,76)+K(23,34)*c(34)*c(23);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(24,34)*c(34)*c(24);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(24,34)*c(34)*c(24);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(25,34)*c(34)*c(25);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(25,34)*c(34)*c(25);
	coll_evap_2d(34,49) = coll_evap_2d(34,49)+K(26,34)*c(34)*c(26);
	coll_evap_2d(34,76) = coll_evap_2d(34,76)+K(27,34)*c(34)*c(27);
	coll_evap_2d(34,76) = coll_evap_2d(34,76)+K(28,34)*c(34)*c(28);
	coll_evap_2d(34,76) = coll_evap_2d(34,76)+K(29,34)*c(34)*c(29);
	coll_evap_2d(34,76) = coll_evap_2d(34,76)+K(30,34)*c(34)*c(30);
	coll_evap_2d(34,76) = coll_evap_2d(34,76)+K(31,34)*c(34)*c(31);
	coll_evap_2d(34,9) = coll_evap_2d(34,9)+K(34,50)*c(34)*c(50);
	coll_evap_2d(34,10) = coll_evap_2d(34,10)+K(34,51)*c(34)*c(51);
	coll_evap_2d(34,11) = coll_evap_2d(34,11)+K(34,52)*c(34)*c(52);
	coll_evap_2d(34,15) = coll_evap_2d(34,15)+K(34,53)*c(34)*c(53);
	coll_evap_2d(34,16) = coll_evap_2d(34,16)+K(34,54)*c(34)*c(54);
	coll_evap_2d(34,17) = coll_evap_2d(34,17)+K(34,55)*c(34)*c(55);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(34,56)*c(34)*c(56);
	coll_evap_2d(34,21) = coll_evap_2d(34,21)+K(34,57)*c(34)*c(57);
	coll_evap_2d(34,22) = coll_evap_2d(34,22)+K(34,58)*c(34)*c(58);
	coll_evap_2d(34,23) = coll_evap_2d(34,23)+K(34,59)*c(34)*c(59);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(34,60)*c(34)*c(60);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(34,61)*c(34)*c(61);
	coll_evap_2d(34,29) = coll_evap_2d(34,29)+K(34,62)*c(34)*c(62);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(34,63)*c(34)*c(63);
	coll_evap_2d(34,78) = coll_evap_2d(34,78)+K(34,64)*c(34)*c(64);
	coll_evap_2d(34,75) = coll_evap_2d(34,75)+K(34,65)*c(34)*c(65);
	coll_evap_2d(34,75) = coll_evap_2d(34,75)+K(34,66)*c(34)*c(66);
	coll_evap_2d(34,75) = coll_evap_2d(34,75)+K(34,67)*c(34)*c(67);
	coll_evap_2d(34,3) = coll_evap_2d(34,3)+K(34,69)*c(34)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(34,56)*c(34)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(34,60)*c(34)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(34,61)*c(34)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(34,63)*c(34)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(34,64)*c(34)*c(64);
	% Evaporations resulting in this cluster
	coll_evap_2d(35,34) = coll_evap_2d(35,34)+E(1,34)*c(35);
	coll_evap_2d(36,34) = coll_evap_2d(36,34)+E(2,34)*c(36);
	coll_evap_2d(39,34) = coll_evap_2d(39,34)+E(6,34)*c(39);
	coll_evap_2d(40,34) = coll_evap_2d(40,34)+E(7,34)*c(40);
	coll_evap_2d(41,34) = coll_evap_2d(41,34)+E(8,34)*c(41);
	coll_evap_2d(44,34) = coll_evap_2d(44,34)+E(12,34)*c(44);
	coll_evap_2d(45,34) = coll_evap_2d(45,34)+E(13,34)*c(45);
	coll_evap_2d(46,34) = coll_evap_2d(46,34)+E(14,34)*c(46);
	coll_evap_2d(47,34) = coll_evap_2d(47,34)+E(19,34)*c(47);
	coll_evap_2d(48,34) = coll_evap_2d(48,34)+E(20,34)*c(48);
	coll_evap_2d(49,34) = coll_evap_2d(49,34)+E(26,34)*c(49);
	% External losses
	coll_evap_2d(34,71) = coll_evap_2d(34,71)+fcs*CS(34)*c(34);

% Cluster 35: 3A1B
	% Collisions removing this cluster
	coll_evap_2d(35,36) = coll_evap_2d(35,36)+K(1,35)*c(35)*c(1);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(2,35)*c(35)*c(2);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(2,35)*c(35)*c(2);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(3,35)*c(35)*c(3);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(3,35)*c(35)*c(3);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(4,35)*c(35)*c(4);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(4,35)*c(35)*c(4);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(5,35)*c(35)*c(5);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(5,35)*c(35)*c(5);
	coll_evap_2d(35,40) = coll_evap_2d(35,40)+K(6,35)*c(35)*c(6);
	coll_evap_2d(35,41) = coll_evap_2d(35,41)+K(7,35)*c(35)*c(7);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(8,35)*c(35)*c(8);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(8,35)*c(35)*c(8);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(9,35)*c(35)*c(9);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(9,35)*c(35)*c(9);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(10,35)*c(35)*c(10);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(10,35)*c(35)*c(10);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(11,35)*c(35)*c(11);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(11,35)*c(35)*c(11);
	coll_evap_2d(35,45) = coll_evap_2d(35,45)+K(12,35)*c(35)*c(12);
	coll_evap_2d(35,46) = coll_evap_2d(35,46)+K(13,35)*c(35)*c(13);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(14,35)*c(35)*c(14);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(14,35)*c(35)*c(14);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(15,35)*c(35)*c(15);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(15,35)*c(35)*c(15);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(16,35)*c(35)*c(16);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(16,35)*c(35)*c(16);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(17,35)*c(35)*c(17);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(17,35)*c(35)*c(17);
	coll_evap_2d(35,47) = coll_evap_2d(35,47)+K(18,35)*c(35)*c(18);
	coll_evap_2d(35,48) = coll_evap_2d(35,48)+K(19,35)*c(35)*c(19);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(20,35)*c(35)*c(20);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(21,35)*c(35)*c(21);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(22,35)*c(35)*c(22);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(23,35)*c(35)*c(23);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(24,35)*c(35)*c(24);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(24,35)*c(35)*c(24);
	coll_evap_2d(35,49) = coll_evap_2d(35,49)+K(25,35)*c(35)*c(25);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(26,35)*c(35)*c(26);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(27,35)*c(35)*c(27);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(28,35)*c(35)*c(28);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(29,35)*c(35)*c(29);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(30,35)*c(35)*c(30);
	coll_evap_2d(35,76) = coll_evap_2d(35,76)+K(31,35)*c(35)*c(31);
	coll_evap_2d(35,10) = coll_evap_2d(35,10)+K(35,50)*c(35)*c(50);
	coll_evap_2d(35,11) = coll_evap_2d(35,11)+K(35,51)*c(35)*c(51);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,52)*c(35)*c(52);
	coll_evap_2d(35,16) = coll_evap_2d(35,16)+K(35,53)*c(35)*c(53);
	coll_evap_2d(35,17) = coll_evap_2d(35,17)+K(35,54)*c(35)*c(54);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,55)*c(35)*c(55);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,56)*c(35)*c(56);
	coll_evap_2d(35,22) = coll_evap_2d(35,22)+K(35,57)*c(35)*c(57);
	coll_evap_2d(35,23) = coll_evap_2d(35,23)+K(35,58)*c(35)*c(58);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,59)*c(35)*c(59);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,60)*c(35)*c(60);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,61)*c(35)*c(61);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,62)*c(35)*c(62);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,63)*c(35)*c(63);
	coll_evap_2d(35,78) = coll_evap_2d(35,78)+K(35,64)*c(35)*c(64);
	coll_evap_2d(35,75) = coll_evap_2d(35,75)+K(35,65)*c(35)*c(65);
	coll_evap_2d(35,75) = coll_evap_2d(35,75)+K(35,66)*c(35)*c(66);
	coll_evap_2d(35,75) = coll_evap_2d(35,75)+K(35,67)*c(35)*c(67);
	coll_evap_2d(35,4) = coll_evap_2d(35,4)+K(35,69)*c(35)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(35,52)*c(35)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(35,55)*c(35)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(35,56)*c(35)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(35,59)*c(35)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(35,60)*c(35)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(35,61)*c(35)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(35,62)*c(35)*c(62);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(35,63)*c(35)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(35,64)*c(35)*c(64);
	% Evaporations resulting in this cluster
	coll_evap_2d(36,35) = coll_evap_2d(36,35)+E(1,35)*c(36);
	coll_evap_2d(40,35) = coll_evap_2d(40,35)+E(6,35)*c(40);
	coll_evap_2d(41,35) = coll_evap_2d(41,35)+E(7,35)*c(41);
	coll_evap_2d(45,35) = coll_evap_2d(45,35)+E(12,35)*c(45);
	coll_evap_2d(46,35) = coll_evap_2d(46,35)+E(13,35)*c(46);
	coll_evap_2d(47,35) = coll_evap_2d(47,35)+E(18,35)*c(47);
	coll_evap_2d(48,35) = coll_evap_2d(48,35)+E(19,35)*c(48);
	coll_evap_2d(49,35) = coll_evap_2d(49,35)+E(25,35)*c(49);
	% External losses
	coll_evap_2d(35,71) = coll_evap_2d(35,71)+fcs*CS(35)*c(35);

% Cluster 36: 4A1B
	% Collisions removing this cluster
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(1,36)*c(36)*c(1);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(1,36)*c(36)*c(1);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(2,36)*c(36)*c(2);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(2,36)*c(36)*c(2);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(3,36)*c(36)*c(3);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(3,36)*c(36)*c(3);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(4,36)*c(36)*c(4);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(4,36)*c(36)*c(4);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(5,36)*c(36)*c(5);
	coll_evap_2d(78,36) = coll_evap_2d(78,36)+K(5,36)*c(36)*c(5);
	coll_evap_2d(36,41) = coll_evap_2d(36,41)+K(6,36)*c(36)*c(6);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(7,36)*c(36)*c(7);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(7,36)*c(36)*c(7);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(8,36)*c(36)*c(8);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(8,36)*c(36)*c(8);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(9,36)*c(36)*c(9);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(9,36)*c(36)*c(9);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(10,36)*c(36)*c(10);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(10,36)*c(36)*c(10);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(11,36)*c(36)*c(11);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(11,36)*c(36)*c(11);
	coll_evap_2d(36,46) = coll_evap_2d(36,46)+K(12,36)*c(36)*c(12);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(13,36)*c(36)*c(13);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(13,36)*c(36)*c(13);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(14,36)*c(36)*c(14);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(14,36)*c(36)*c(14);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(15,36)*c(36)*c(15);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(15,36)*c(36)*c(15);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(16,36)*c(36)*c(16);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(16,36)*c(36)*c(16);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(17,36)*c(36)*c(17);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(17,36)*c(36)*c(17);
	coll_evap_2d(36,48) = coll_evap_2d(36,48)+K(18,36)*c(36)*c(18);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(19,36)*c(36)*c(19);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(20,36)*c(36)*c(20);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(21,36)*c(36)*c(21);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(22,36)*c(36)*c(22);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(23,36)*c(36)*c(23);
	coll_evap_2d(36,49) = coll_evap_2d(36,49)+K(24,36)*c(36)*c(24);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(25,36)*c(36)*c(25);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(26,36)*c(36)*c(26);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(27,36)*c(36)*c(27);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(28,36)*c(36)*c(28);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(29,36)*c(36)*c(29);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(30,36)*c(36)*c(30);
	coll_evap_2d(36,76) = coll_evap_2d(36,76)+K(31,36)*c(36)*c(31);
	coll_evap_2d(36,11) = coll_evap_2d(36,11)+K(36,50)*c(36)*c(50);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,51)*c(36)*c(51);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,52)*c(36)*c(52);
	coll_evap_2d(36,17) = coll_evap_2d(36,17)+K(36,53)*c(36)*c(53);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,54)*c(36)*c(54);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,55)*c(36)*c(55);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,56)*c(36)*c(56);
	coll_evap_2d(36,23) = coll_evap_2d(36,23)+K(36,57)*c(36)*c(57);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,58)*c(36)*c(58);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,59)*c(36)*c(59);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,60)*c(36)*c(60);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,61)*c(36)*c(61);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,62)*c(36)*c(62);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,63)*c(36)*c(63);
	coll_evap_2d(36,78) = coll_evap_2d(36,78)+K(36,64)*c(36)*c(64);
	coll_evap_2d(36,75) = coll_evap_2d(36,75)+K(36,65)*c(36)*c(65);
	coll_evap_2d(36,75) = coll_evap_2d(36,75)+K(36,66)*c(36)*c(66);
	coll_evap_2d(36,75) = coll_evap_2d(36,75)+K(36,67)*c(36)*c(67);
	coll_evap_2d(36,5) = coll_evap_2d(36,5)+K(36,69)*c(36)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(36,51)*c(36)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(36,52)*c(36)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(36,54)*c(36)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(36,55)*c(36)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(36,56)*c(36)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(36,58)*c(36)*c(58);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(36,59)*c(36)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(36,60)*c(36)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(36,61)*c(36)*c(61);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(36,62)*c(36)*c(62);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(36,63)*c(36)*c(63);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(36,64)*c(36)*c(64);
	% Evaporations resulting in this cluster
	coll_evap_2d(41,36) = coll_evap_2d(41,36)+E(6,36)*c(41);
	coll_evap_2d(46,36) = coll_evap_2d(46,36)+E(12,36)*c(46);
	coll_evap_2d(48,36) = coll_evap_2d(48,36)+E(18,36)*c(48);
	coll_evap_2d(49,36) = coll_evap_2d(49,36)+E(24,36)*c(49);
	% External losses
	coll_evap_2d(36,71) = coll_evap_2d(36,71)+fcs*CS(36)*c(36);

% Cluster 37: 1B1N
	% Collisions removing this cluster
	coll_evap_2d(37,38) = coll_evap_2d(37,38)+K(1,37)*c(37)*c(1);
	coll_evap_2d(37,39) = coll_evap_2d(37,39)+K(2,37)*c(37)*c(2);
	coll_evap_2d(37,40) = coll_evap_2d(37,40)+K(3,37)*c(37)*c(3);
	coll_evap_2d(37,41) = coll_evap_2d(37,41)+K(4,37)*c(37)*c(4);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(5,37)*c(37)*c(5);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(5,37)*c(37)*c(5);
	coll_evap_2d(37,42) = coll_evap_2d(37,42)+K(6,37)*c(37)*c(6);
	coll_evap_2d(37,43) = coll_evap_2d(37,43)+K(7,37)*c(37)*c(7);
	coll_evap_2d(37,44) = coll_evap_2d(37,44)+K(8,37)*c(37)*c(8);
	coll_evap_2d(37,45) = coll_evap_2d(37,45)+K(9,37)*c(37)*c(9);
	coll_evap_2d(37,46) = coll_evap_2d(37,46)+K(10,37)*c(37)*c(10);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(11,37)*c(37)*c(11);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(11,37)*c(37)*c(11);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(12,37)*c(37)*c(12);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(12,37)*c(37)*c(12);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(13,37)*c(37)*c(13);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(13,37)*c(37)*c(13);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(14,37)*c(37)*c(14);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(14,37)*c(37)*c(14);
	coll_evap_2d(37,47) = coll_evap_2d(37,47)+K(15,37)*c(37)*c(15);
	coll_evap_2d(37,48) = coll_evap_2d(37,48)+K(16,37)*c(37)*c(16);
	coll_evap_2d(37,76) = coll_evap_2d(37,76)+K(17,37)*c(37)*c(17);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(18,37)*c(37)*c(18);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(18,37)*c(37)*c(18);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(19,37)*c(37)*c(19);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(19,37)*c(37)*c(19);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(20,37)*c(37)*c(20);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(20,37)*c(37)*c(20);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(21,37)*c(37)*c(21);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(21,37)*c(37)*c(21);
	coll_evap_2d(37,49) = coll_evap_2d(37,49)+K(22,37)*c(37)*c(22);
	coll_evap_2d(37,76) = coll_evap_2d(37,76)+K(23,37)*c(37)*c(23);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(24,37)*c(37)*c(24);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(24,37)*c(37)*c(24);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(25,37)*c(37)*c(25);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(25,37)*c(37)*c(25);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(26,37)*c(37)*c(26);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(26,37)*c(37)*c(26);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(27,37)*c(37)*c(27);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(27,37)*c(37)*c(27);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(28,37)*c(37)*c(28);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(28,37)*c(37)*c(28);
	coll_evap_2d(37,76) = coll_evap_2d(37,76)+K(29,37)*c(37)*c(29);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(30,37)*c(37)*c(30);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(30,37)*c(37)*c(30);
	coll_evap_2d(37,76) = coll_evap_2d(37,76)+K(31,37)*c(37)*c(31);
	coll_evap_2d(37,13) = coll_evap_2d(37,13)+K(37,50)*c(37)*c(50);
	coll_evap_2d(37,14) = coll_evap_2d(37,14)+K(37,51)*c(37)*c(51);
	coll_evap_2d(37,15) = coll_evap_2d(37,15)+K(37,52)*c(37)*c(52);
	coll_evap_2d(37,19) = coll_evap_2d(37,19)+K(37,53)*c(37)*c(53);
	coll_evap_2d(37,20) = coll_evap_2d(37,20)+K(37,54)*c(37)*c(54);
	coll_evap_2d(37,21) = coll_evap_2d(37,21)+K(37,55)*c(37)*c(55);
	coll_evap_2d(37,22) = coll_evap_2d(37,22)+K(37,56)*c(37)*c(56);
	coll_evap_2d(37,25) = coll_evap_2d(37,25)+K(37,57)*c(37)*c(57);
	coll_evap_2d(37,26) = coll_evap_2d(37,26)+K(37,58)*c(37)*c(58);
	coll_evap_2d(37,27) = coll_evap_2d(37,27)+K(37,59)*c(37)*c(59);
	coll_evap_2d(37,28) = coll_evap_2d(37,28)+K(37,60)*c(37)*c(60);
	coll_evap_2d(37,29) = coll_evap_2d(37,29)+K(37,61)*c(37)*c(61);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(37,62)*c(37)*c(62);
	coll_evap_2d(37,30) = coll_evap_2d(37,30)+K(37,63)*c(37)*c(63);
	coll_evap_2d(37,31) = coll_evap_2d(37,31)+K(37,64)*c(37)*c(64);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(37,65)*c(37)*c(65);
	coll_evap_2d(37,78) = coll_evap_2d(37,78)+K(37,66)*c(37)*c(66);
	coll_evap_2d(37,75) = coll_evap_2d(37,75)+K(37,67)*c(37)*c(67);
	coll_evap_2d(37,7) = coll_evap_2d(37,7)+K(37,69)*c(37)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(37,62)*c(37)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(37,65)*c(37)*c(65);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(37,66)*c(37)*c(66);
	% Evaporations resulting in this cluster
	coll_evap_2d(38,37) = coll_evap_2d(38,37)+E(1,37)*c(38);
	coll_evap_2d(39,37) = coll_evap_2d(39,37)+E(2,37)*c(39);
	coll_evap_2d(40,37) = coll_evap_2d(40,37)+E(3,37)*c(40);
	coll_evap_2d(41,37) = coll_evap_2d(41,37)+E(4,37)*c(41);
	coll_evap_2d(42,37) = coll_evap_2d(42,37)+E(6,37)*c(42);
	coll_evap_2d(43,37) = coll_evap_2d(43,37)+E(7,37)*c(43);
	coll_evap_2d(44,37) = coll_evap_2d(44,37)+E(8,37)*c(44);
	coll_evap_2d(45,37) = coll_evap_2d(45,37)+E(9,37)*c(45);
	coll_evap_2d(46,37) = coll_evap_2d(46,37)+E(10,37)*c(46);
	coll_evap_2d(47,37) = coll_evap_2d(47,37)+E(15,37)*c(47);
	coll_evap_2d(48,37) = coll_evap_2d(48,37)+E(16,37)*c(48);
	coll_evap_2d(49,37) = coll_evap_2d(49,37)+E(22,37)*c(49);
	% External losses
	coll_evap_2d(37,71) = coll_evap_2d(37,71)+fcs*CS(37)*c(37);

% Cluster 38: 1A1B1N
	% Collisions removing this cluster
	coll_evap_2d(38,39) = coll_evap_2d(38,39)+K(1,38)*c(38)*c(1);
	coll_evap_2d(38,40) = coll_evap_2d(38,40)+K(2,38)*c(38)*c(2);
	coll_evap_2d(38,41) = coll_evap_2d(38,41)+K(3,38)*c(38)*c(3);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(4,38)*c(38)*c(4);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(4,38)*c(38)*c(4);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(5,38)*c(38)*c(5);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(5,38)*c(38)*c(5);
	coll_evap_2d(38,43) = coll_evap_2d(38,43)+K(6,38)*c(38)*c(6);
	coll_evap_2d(38,44) = coll_evap_2d(38,44)+K(7,38)*c(38)*c(7);
	coll_evap_2d(38,45) = coll_evap_2d(38,45)+K(8,38)*c(38)*c(8);
	coll_evap_2d(38,46) = coll_evap_2d(38,46)+K(9,38)*c(38)*c(9);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(10,38)*c(38)*c(10);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(10,38)*c(38)*c(10);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(11,38)*c(38)*c(11);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(11,38)*c(38)*c(11);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(12,38)*c(38)*c(12);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(12,38)*c(38)*c(12);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(13,38)*c(38)*c(13);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(13,38)*c(38)*c(13);
	coll_evap_2d(38,47) = coll_evap_2d(38,47)+K(14,38)*c(38)*c(14);
	coll_evap_2d(38,48) = coll_evap_2d(38,48)+K(15,38)*c(38)*c(15);
	coll_evap_2d(38,76) = coll_evap_2d(38,76)+K(16,38)*c(38)*c(16);
	coll_evap_2d(38,76) = coll_evap_2d(38,76)+K(17,38)*c(38)*c(17);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(18,38)*c(38)*c(18);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(18,38)*c(38)*c(18);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(19,38)*c(38)*c(19);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(19,38)*c(38)*c(19);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(20,38)*c(38)*c(20);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(20,38)*c(38)*c(20);
	coll_evap_2d(38,49) = coll_evap_2d(38,49)+K(21,38)*c(38)*c(21);
	coll_evap_2d(38,76) = coll_evap_2d(38,76)+K(22,38)*c(38)*c(22);
	coll_evap_2d(38,76) = coll_evap_2d(38,76)+K(23,38)*c(38)*c(23);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(24,38)*c(38)*c(24);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(24,38)*c(38)*c(24);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(25,38)*c(38)*c(25);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(25,38)*c(38)*c(25);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(26,38)*c(38)*c(26);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(26,38)*c(38)*c(26);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(27,38)*c(38)*c(27);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(27,38)*c(38)*c(27);
	coll_evap_2d(38,76) = coll_evap_2d(38,76)+K(28,38)*c(38)*c(28);
	coll_evap_2d(38,76) = coll_evap_2d(38,76)+K(29,38)*c(38)*c(29);
	coll_evap_2d(38,76) = coll_evap_2d(38,76)+K(30,38)*c(38)*c(30);
	coll_evap_2d(38,76) = coll_evap_2d(38,76)+K(31,38)*c(38)*c(31);
	coll_evap_2d(38,14) = coll_evap_2d(38,14)+K(38,50)*c(38)*c(50);
	coll_evap_2d(38,15) = coll_evap_2d(38,15)+K(38,51)*c(38)*c(51);
	coll_evap_2d(38,16) = coll_evap_2d(38,16)+K(38,52)*c(38)*c(52);
	coll_evap_2d(38,20) = coll_evap_2d(38,20)+K(38,53)*c(38)*c(53);
	coll_evap_2d(38,21) = coll_evap_2d(38,21)+K(38,54)*c(38)*c(54);
	coll_evap_2d(38,22) = coll_evap_2d(38,22)+K(38,55)*c(38)*c(55);
	coll_evap_2d(38,23) = coll_evap_2d(38,23)+K(38,56)*c(38)*c(56);
	coll_evap_2d(38,26) = coll_evap_2d(38,26)+K(38,57)*c(38)*c(57);
	coll_evap_2d(38,27) = coll_evap_2d(38,27)+K(38,58)*c(38)*c(58);
	coll_evap_2d(38,28) = coll_evap_2d(38,28)+K(38,59)*c(38)*c(59);
	coll_evap_2d(38,29) = coll_evap_2d(38,29)+K(38,60)*c(38)*c(60);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(38,61)*c(38)*c(61);
	coll_evap_2d(38,30) = coll_evap_2d(38,30)+K(38,62)*c(38)*c(62);
	coll_evap_2d(38,31) = coll_evap_2d(38,31)+K(38,63)*c(38)*c(63);
	coll_evap_2d(38,75) = coll_evap_2d(38,75)+K(38,64)*c(38)*c(64);
	coll_evap_2d(38,78) = coll_evap_2d(38,78)+K(38,65)*c(38)*c(65);
	coll_evap_2d(38,75) = coll_evap_2d(38,75)+K(38,66)*c(38)*c(66);
	coll_evap_2d(38,75) = coll_evap_2d(38,75)+K(38,67)*c(38)*c(67);
	coll_evap_2d(38,8) = coll_evap_2d(38,8)+K(38,69)*c(38)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(38,61)*c(38)*c(61);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(38,65)*c(38)*c(65);
	% Evaporations resulting in this cluster
	coll_evap_2d(39,38) = coll_evap_2d(39,38)+E(1,38)*c(39);
	coll_evap_2d(40,38) = coll_evap_2d(40,38)+E(2,38)*c(40);
	coll_evap_2d(41,38) = coll_evap_2d(41,38)+E(3,38)*c(41);
	coll_evap_2d(43,38) = coll_evap_2d(43,38)+E(6,38)*c(43);
	coll_evap_2d(44,38) = coll_evap_2d(44,38)+E(7,38)*c(44);
	coll_evap_2d(45,38) = coll_evap_2d(45,38)+E(8,38)*c(45);
	coll_evap_2d(46,38) = coll_evap_2d(46,38)+E(9,38)*c(46);
	coll_evap_2d(47,38) = coll_evap_2d(47,38)+E(14,38)*c(47);
	coll_evap_2d(48,38) = coll_evap_2d(48,38)+E(15,38)*c(48);
	coll_evap_2d(49,38) = coll_evap_2d(49,38)+E(21,38)*c(49);
	% External losses
	coll_evap_2d(38,71) = coll_evap_2d(38,71)+fcs*CS(38)*c(38);

% Cluster 39: 2A1B1N
	% Collisions removing this cluster
	coll_evap_2d(39,40) = coll_evap_2d(39,40)+K(1,39)*c(39)*c(1);
	coll_evap_2d(39,41) = coll_evap_2d(39,41)+K(2,39)*c(39)*c(2);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(3,39)*c(39)*c(3);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(3,39)*c(39)*c(3);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(4,39)*c(39)*c(4);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(4,39)*c(39)*c(4);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(5,39)*c(39)*c(5);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(5,39)*c(39)*c(5);
	coll_evap_2d(39,44) = coll_evap_2d(39,44)+K(6,39)*c(39)*c(6);
	coll_evap_2d(39,45) = coll_evap_2d(39,45)+K(7,39)*c(39)*c(7);
	coll_evap_2d(39,46) = coll_evap_2d(39,46)+K(8,39)*c(39)*c(8);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(9,39)*c(39)*c(9);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(9,39)*c(39)*c(9);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(10,39)*c(39)*c(10);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(10,39)*c(39)*c(10);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(11,39)*c(39)*c(11);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(11,39)*c(39)*c(11);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(12,39)*c(39)*c(12);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(12,39)*c(39)*c(12);
	coll_evap_2d(39,47) = coll_evap_2d(39,47)+K(13,39)*c(39)*c(13);
	coll_evap_2d(39,48) = coll_evap_2d(39,48)+K(14,39)*c(39)*c(14);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(15,39)*c(39)*c(15);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(16,39)*c(39)*c(16);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(17,39)*c(39)*c(17);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(18,39)*c(39)*c(18);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(18,39)*c(39)*c(18);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(19,39)*c(39)*c(19);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(19,39)*c(39)*c(19);
	coll_evap_2d(39,49) = coll_evap_2d(39,49)+K(20,39)*c(39)*c(20);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(21,39)*c(39)*c(21);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(22,39)*c(39)*c(22);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(23,39)*c(39)*c(23);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(24,39)*c(39)*c(24);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(24,39)*c(39)*c(24);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(25,39)*c(39)*c(25);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(25,39)*c(39)*c(25);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(26,39)*c(39)*c(26);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(26,39)*c(39)*c(26);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(27,39)*c(39)*c(27);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(28,39)*c(39)*c(28);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(29,39)*c(39)*c(29);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(30,39)*c(39)*c(30);
	coll_evap_2d(39,76) = coll_evap_2d(39,76)+K(31,39)*c(39)*c(31);
	coll_evap_2d(39,15) = coll_evap_2d(39,15)+K(39,50)*c(39)*c(50);
	coll_evap_2d(39,16) = coll_evap_2d(39,16)+K(39,51)*c(39)*c(51);
	coll_evap_2d(39,17) = coll_evap_2d(39,17)+K(39,52)*c(39)*c(52);
	coll_evap_2d(39,21) = coll_evap_2d(39,21)+K(39,53)*c(39)*c(53);
	coll_evap_2d(39,22) = coll_evap_2d(39,22)+K(39,54)*c(39)*c(54);
	coll_evap_2d(39,23) = coll_evap_2d(39,23)+K(39,55)*c(39)*c(55);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(39,56)*c(39)*c(56);
	coll_evap_2d(39,27) = coll_evap_2d(39,27)+K(39,57)*c(39)*c(57);
	coll_evap_2d(39,28) = coll_evap_2d(39,28)+K(39,58)*c(39)*c(58);
	coll_evap_2d(39,29) = coll_evap_2d(39,29)+K(39,59)*c(39)*c(59);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(39,60)*c(39)*c(60);
	coll_evap_2d(39,78) = coll_evap_2d(39,78)+K(39,61)*c(39)*c(61);
	coll_evap_2d(39,31) = coll_evap_2d(39,31)+K(39,62)*c(39)*c(62);
	coll_evap_2d(39,75) = coll_evap_2d(39,75)+K(39,63)*c(39)*c(63);
	coll_evap_2d(39,75) = coll_evap_2d(39,75)+K(39,64)*c(39)*c(64);
	coll_evap_2d(39,75) = coll_evap_2d(39,75)+K(39,65)*c(39)*c(65);
	coll_evap_2d(39,75) = coll_evap_2d(39,75)+K(39,66)*c(39)*c(66);
	coll_evap_2d(39,75) = coll_evap_2d(39,75)+K(39,67)*c(39)*c(67);
	coll_evap_2d(39,9) = coll_evap_2d(39,9)+K(39,69)*c(39)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(39,56)*c(39)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(39,60)*c(39)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(39,61)*c(39)*c(61);
	% Evaporations resulting in this cluster
	coll_evap_2d(40,39) = coll_evap_2d(40,39)+E(1,39)*c(40);
	coll_evap_2d(41,39) = coll_evap_2d(41,39)+E(2,39)*c(41);
	coll_evap_2d(44,39) = coll_evap_2d(44,39)+E(6,39)*c(44);
	coll_evap_2d(45,39) = coll_evap_2d(45,39)+E(7,39)*c(45);
	coll_evap_2d(46,39) = coll_evap_2d(46,39)+E(8,39)*c(46);
	coll_evap_2d(47,39) = coll_evap_2d(47,39)+E(13,39)*c(47);
	coll_evap_2d(48,39) = coll_evap_2d(48,39)+E(14,39)*c(48);
	coll_evap_2d(49,39) = coll_evap_2d(49,39)+E(20,39)*c(49);
	% External losses
	coll_evap_2d(39,71) = coll_evap_2d(39,71)+fcs*CS(39)*c(39);

% Cluster 40: 3A1B1N
	% Collisions removing this cluster
	coll_evap_2d(40,41) = coll_evap_2d(40,41)+K(1,40)*c(40)*c(1);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(2,40)*c(40)*c(2);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(2,40)*c(40)*c(2);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(3,40)*c(40)*c(3);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(3,40)*c(40)*c(3);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(4,40)*c(40)*c(4);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(4,40)*c(40)*c(4);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(5,40)*c(40)*c(5);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(5,40)*c(40)*c(5);
	coll_evap_2d(40,45) = coll_evap_2d(40,45)+K(6,40)*c(40)*c(6);
	coll_evap_2d(40,46) = coll_evap_2d(40,46)+K(7,40)*c(40)*c(7);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(8,40)*c(40)*c(8);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(8,40)*c(40)*c(8);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(9,40)*c(40)*c(9);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(9,40)*c(40)*c(9);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(10,40)*c(40)*c(10);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(10,40)*c(40)*c(10);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(11,40)*c(40)*c(11);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(11,40)*c(40)*c(11);
	coll_evap_2d(40,47) = coll_evap_2d(40,47)+K(12,40)*c(40)*c(12);
	coll_evap_2d(40,48) = coll_evap_2d(40,48)+K(13,40)*c(40)*c(13);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(14,40)*c(40)*c(14);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(15,40)*c(40)*c(15);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(16,40)*c(40)*c(16);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(17,40)*c(40)*c(17);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(18,40)*c(40)*c(18);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(18,40)*c(40)*c(18);
	coll_evap_2d(40,49) = coll_evap_2d(40,49)+K(19,40)*c(40)*c(19);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(20,40)*c(40)*c(20);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(21,40)*c(40)*c(21);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(22,40)*c(40)*c(22);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(23,40)*c(40)*c(23);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(24,40)*c(40)*c(24);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(24,40)*c(40)*c(24);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(25,40)*c(40)*c(25);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(25,40)*c(40)*c(25);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(26,40)*c(40)*c(26);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(27,40)*c(40)*c(27);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(28,40)*c(40)*c(28);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(29,40)*c(40)*c(29);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(30,40)*c(40)*c(30);
	coll_evap_2d(40,76) = coll_evap_2d(40,76)+K(31,40)*c(40)*c(31);
	coll_evap_2d(40,16) = coll_evap_2d(40,16)+K(40,50)*c(40)*c(50);
	coll_evap_2d(40,17) = coll_evap_2d(40,17)+K(40,51)*c(40)*c(51);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(40,52)*c(40)*c(52);
	coll_evap_2d(40,22) = coll_evap_2d(40,22)+K(40,53)*c(40)*c(53);
	coll_evap_2d(40,23) = coll_evap_2d(40,23)+K(40,54)*c(40)*c(54);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(40,55)*c(40)*c(55);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(40,56)*c(40)*c(56);
	coll_evap_2d(40,28) = coll_evap_2d(40,28)+K(40,57)*c(40)*c(57);
	coll_evap_2d(40,29) = coll_evap_2d(40,29)+K(40,58)*c(40)*c(58);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(40,59)*c(40)*c(59);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(40,60)*c(40)*c(60);
	coll_evap_2d(40,78) = coll_evap_2d(40,78)+K(40,61)*c(40)*c(61);
	coll_evap_2d(40,75) = coll_evap_2d(40,75)+K(40,62)*c(40)*c(62);
	coll_evap_2d(40,75) = coll_evap_2d(40,75)+K(40,63)*c(40)*c(63);
	coll_evap_2d(40,75) = coll_evap_2d(40,75)+K(40,64)*c(40)*c(64);
	coll_evap_2d(40,75) = coll_evap_2d(40,75)+K(40,65)*c(40)*c(65);
	coll_evap_2d(40,75) = coll_evap_2d(40,75)+K(40,66)*c(40)*c(66);
	coll_evap_2d(40,75) = coll_evap_2d(40,75)+K(40,67)*c(40)*c(67);
	coll_evap_2d(40,10) = coll_evap_2d(40,10)+K(40,69)*c(40)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(40,52)*c(40)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(40,55)*c(40)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(40,56)*c(40)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(40,59)*c(40)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(40,60)*c(40)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(40,61)*c(40)*c(61);
	% Evaporations resulting in this cluster
	coll_evap_2d(41,40) = coll_evap_2d(41,40)+E(1,40)*c(41);
	coll_evap_2d(45,40) = coll_evap_2d(45,40)+E(6,40)*c(45);
	coll_evap_2d(46,40) = coll_evap_2d(46,40)+E(7,40)*c(46);
	coll_evap_2d(47,40) = coll_evap_2d(47,40)+E(12,40)*c(47);
	coll_evap_2d(48,40) = coll_evap_2d(48,40)+E(13,40)*c(48);
	coll_evap_2d(49,40) = coll_evap_2d(49,40)+E(19,40)*c(49);
	% External losses
	coll_evap_2d(40,71) = coll_evap_2d(40,71)+fcs*CS(40)*c(40);

% Cluster 41: 4A1B1N
	% Collisions removing this cluster
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(1,41)*c(41)*c(1);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(1,41)*c(41)*c(1);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(2,41)*c(41)*c(2);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(2,41)*c(41)*c(2);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(3,41)*c(41)*c(3);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(3,41)*c(41)*c(3);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(4,41)*c(41)*c(4);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(4,41)*c(41)*c(4);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(5,41)*c(41)*c(5);
	coll_evap_2d(78,41) = coll_evap_2d(78,41)+K(5,41)*c(41)*c(5);
	coll_evap_2d(41,46) = coll_evap_2d(41,46)+K(6,41)*c(41)*c(6);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(7,41)*c(41)*c(7);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(7,41)*c(41)*c(7);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(8,41)*c(41)*c(8);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(8,41)*c(41)*c(8);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(9,41)*c(41)*c(9);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(9,41)*c(41)*c(9);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(10,41)*c(41)*c(10);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(10,41)*c(41)*c(10);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(11,41)*c(41)*c(11);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(11,41)*c(41)*c(11);
	coll_evap_2d(41,48) = coll_evap_2d(41,48)+K(12,41)*c(41)*c(12);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(13,41)*c(41)*c(13);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(14,41)*c(41)*c(14);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(15,41)*c(41)*c(15);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(16,41)*c(41)*c(16);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(17,41)*c(41)*c(17);
	coll_evap_2d(41,49) = coll_evap_2d(41,49)+K(18,41)*c(41)*c(18);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(19,41)*c(41)*c(19);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(20,41)*c(41)*c(20);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(21,41)*c(41)*c(21);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(22,41)*c(41)*c(22);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(23,41)*c(41)*c(23);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(24,41)*c(41)*c(24);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(24,41)*c(41)*c(24);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(25,41)*c(41)*c(25);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(26,41)*c(41)*c(26);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(27,41)*c(41)*c(27);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(28,41)*c(41)*c(28);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(29,41)*c(41)*c(29);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(30,41)*c(41)*c(30);
	coll_evap_2d(41,76) = coll_evap_2d(41,76)+K(31,41)*c(41)*c(31);
	coll_evap_2d(41,17) = coll_evap_2d(41,17)+K(41,50)*c(41)*c(50);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,51)*c(41)*c(51);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,52)*c(41)*c(52);
	coll_evap_2d(41,23) = coll_evap_2d(41,23)+K(41,53)*c(41)*c(53);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,54)*c(41)*c(54);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,55)*c(41)*c(55);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,56)*c(41)*c(56);
	coll_evap_2d(41,29) = coll_evap_2d(41,29)+K(41,57)*c(41)*c(57);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,58)*c(41)*c(58);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,59)*c(41)*c(59);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,60)*c(41)*c(60);
	coll_evap_2d(41,78) = coll_evap_2d(41,78)+K(41,61)*c(41)*c(61);
	coll_evap_2d(41,75) = coll_evap_2d(41,75)+K(41,62)*c(41)*c(62);
	coll_evap_2d(41,75) = coll_evap_2d(41,75)+K(41,63)*c(41)*c(63);
	coll_evap_2d(41,75) = coll_evap_2d(41,75)+K(41,64)*c(41)*c(64);
	coll_evap_2d(41,75) = coll_evap_2d(41,75)+K(41,65)*c(41)*c(65);
	coll_evap_2d(41,75) = coll_evap_2d(41,75)+K(41,66)*c(41)*c(66);
	coll_evap_2d(41,75) = coll_evap_2d(41,75)+K(41,67)*c(41)*c(67);
	coll_evap_2d(41,11) = coll_evap_2d(41,11)+K(41,69)*c(41)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(41,51)*c(41)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(41,52)*c(41)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(41,54)*c(41)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(41,55)*c(41)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(41,56)*c(41)*c(56);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(41,58)*c(41)*c(58);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(41,59)*c(41)*c(59);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(41,60)*c(41)*c(60);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+4*K(41,61)*c(41)*c(61);
	% Evaporations resulting in this cluster
	coll_evap_2d(46,41) = coll_evap_2d(46,41)+E(6,41)*c(46);
	coll_evap_2d(48,41) = coll_evap_2d(48,41)+E(12,41)*c(48);
	coll_evap_2d(49,41) = coll_evap_2d(49,41)+E(18,41)*c(49);
	% External losses
	coll_evap_2d(41,71) = coll_evap_2d(41,71)+fcs*CS(41)*c(41);

% Cluster 42: 1B2N
	% Collisions removing this cluster
	coll_evap_2d(42,43) = coll_evap_2d(42,43)+K(1,42)*c(42)*c(1);
	coll_evap_2d(42,44) = coll_evap_2d(42,44)+K(2,42)*c(42)*c(2);
	coll_evap_2d(42,45) = coll_evap_2d(42,45)+K(3,42)*c(42)*c(3);
	coll_evap_2d(42,46) = coll_evap_2d(42,46)+K(4,42)*c(42)*c(4);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(5,42)*c(42)*c(5);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(5,42)*c(42)*c(5);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(6,42)*c(42)*c(6);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(6,42)*c(42)*c(6);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(7,42)*c(42)*c(7);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(7,42)*c(42)*c(7);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(8,42)*c(42)*c(8);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(8,42)*c(42)*c(8);
	coll_evap_2d(42,47) = coll_evap_2d(42,47)+K(9,42)*c(42)*c(9);
	coll_evap_2d(42,48) = coll_evap_2d(42,48)+K(10,42)*c(42)*c(10);
	coll_evap_2d(42,76) = coll_evap_2d(42,76)+K(11,42)*c(42)*c(11);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(12,42)*c(42)*c(12);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(12,42)*c(42)*c(12);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(13,42)*c(42)*c(13);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(13,42)*c(42)*c(13);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(14,42)*c(42)*c(14);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(14,42)*c(42)*c(14);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(15,42)*c(42)*c(15);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(15,42)*c(42)*c(15);
	coll_evap_2d(42,49) = coll_evap_2d(42,49)+K(16,42)*c(42)*c(16);
	coll_evap_2d(42,76) = coll_evap_2d(42,76)+K(17,42)*c(42)*c(17);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(18,42)*c(42)*c(18);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(18,42)*c(42)*c(18);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(19,42)*c(42)*c(19);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(19,42)*c(42)*c(19);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(20,42)*c(42)*c(20);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(20,42)*c(42)*c(20);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(21,42)*c(42)*c(21);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(21,42)*c(42)*c(21);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(22,42)*c(42)*c(22);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(22,42)*c(42)*c(22);
	coll_evap_2d(42,76) = coll_evap_2d(42,76)+K(23,42)*c(42)*c(23);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(24,42)*c(42)*c(24);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(24,42)*c(42)*c(24);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(25,42)*c(42)*c(25);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(25,42)*c(42)*c(25);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(26,42)*c(42)*c(26);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(26,42)*c(42)*c(26);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(27,42)*c(42)*c(27);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(27,42)*c(42)*c(27);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(28,42)*c(42)*c(28);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(28,42)*c(42)*c(28);
	coll_evap_2d(42,76) = coll_evap_2d(42,76)+K(29,42)*c(42)*c(29);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(30,42)*c(42)*c(30);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(30,42)*c(42)*c(30);
	coll_evap_2d(42,76) = coll_evap_2d(42,76)+K(31,42)*c(42)*c(31);
	coll_evap_2d(42,19) = coll_evap_2d(42,19)+K(42,50)*c(42)*c(50);
	coll_evap_2d(42,20) = coll_evap_2d(42,20)+K(42,51)*c(42)*c(51);
	coll_evap_2d(42,21) = coll_evap_2d(42,21)+K(42,52)*c(42)*c(52);
	coll_evap_2d(42,25) = coll_evap_2d(42,25)+K(42,53)*c(42)*c(53);
	coll_evap_2d(42,26) = coll_evap_2d(42,26)+K(42,54)*c(42)*c(54);
	coll_evap_2d(42,27) = coll_evap_2d(42,27)+K(42,55)*c(42)*c(55);
	coll_evap_2d(42,28) = coll_evap_2d(42,28)+K(42,56)*c(42)*c(56);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(42,57)*c(42)*c(57);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(42,58)*c(42)*c(58);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(42,59)*c(42)*c(59);
	coll_evap_2d(42,30) = coll_evap_2d(42,30)+K(42,60)*c(42)*c(60);
	coll_evap_2d(42,31) = coll_evap_2d(42,31)+K(42,61)*c(42)*c(61);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(42,62)*c(42)*c(62);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(42,63)*c(42)*c(63);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(42,64)*c(42)*c(64);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(42,65)*c(42)*c(65);
	coll_evap_2d(42,78) = coll_evap_2d(42,78)+K(42,66)*c(42)*c(66);
	coll_evap_2d(42,75) = coll_evap_2d(42,75)+K(42,67)*c(42)*c(67);
	coll_evap_2d(42,13) = coll_evap_2d(42,13)+K(42,69)*c(42)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(42,57)*c(42)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(42,58)*c(42)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(42,59)*c(42)*c(59);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(42,62)*c(42)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(42,63)*c(42)*c(63);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(42,64)*c(42)*c(64);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(42,65)*c(42)*c(65);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(42,66)*c(42)*c(66);
	% Evaporations resulting in this cluster
	coll_evap_2d(43,42) = coll_evap_2d(43,42)+E(1,42)*c(43);
	coll_evap_2d(44,42) = coll_evap_2d(44,42)+E(2,42)*c(44);
	coll_evap_2d(45,42) = coll_evap_2d(45,42)+E(3,42)*c(45);
	coll_evap_2d(46,42) = coll_evap_2d(46,42)+E(4,42)*c(46);
	coll_evap_2d(47,42) = coll_evap_2d(47,42)+E(9,42)*c(47);
	coll_evap_2d(48,42) = coll_evap_2d(48,42)+E(10,42)*c(48);
	coll_evap_2d(49,42) = coll_evap_2d(49,42)+E(16,42)*c(49);
	% External losses
	coll_evap_2d(42,71) = coll_evap_2d(42,71)+fcs*CS(42)*c(42);

% Cluster 43: 1A1B2N
	% Collisions removing this cluster
	coll_evap_2d(43,44) = coll_evap_2d(43,44)+K(1,43)*c(43)*c(1);
	coll_evap_2d(43,45) = coll_evap_2d(43,45)+K(2,43)*c(43)*c(2);
	coll_evap_2d(43,46) = coll_evap_2d(43,46)+K(3,43)*c(43)*c(3);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(4,43)*c(43)*c(4);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(4,43)*c(43)*c(4);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(5,43)*c(43)*c(5);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(5,43)*c(43)*c(5);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(6,43)*c(43)*c(6);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(6,43)*c(43)*c(6);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(7,43)*c(43)*c(7);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(7,43)*c(43)*c(7);
	coll_evap_2d(43,47) = coll_evap_2d(43,47)+K(8,43)*c(43)*c(8);
	coll_evap_2d(43,48) = coll_evap_2d(43,48)+K(9,43)*c(43)*c(9);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(10,43)*c(43)*c(10);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(11,43)*c(43)*c(11);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(12,43)*c(43)*c(12);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(12,43)*c(43)*c(12);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(13,43)*c(43)*c(13);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(13,43)*c(43)*c(13);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(14,43)*c(43)*c(14);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(14,43)*c(43)*c(14);
	coll_evap_2d(43,49) = coll_evap_2d(43,49)+K(15,43)*c(43)*c(15);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(16,43)*c(43)*c(16);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(17,43)*c(43)*c(17);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(18,43)*c(43)*c(18);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(18,43)*c(43)*c(18);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(19,43)*c(43)*c(19);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(19,43)*c(43)*c(19);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(20,43)*c(43)*c(20);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(20,43)*c(43)*c(20);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(21,43)*c(43)*c(21);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(21,43)*c(43)*c(21);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(22,43)*c(43)*c(22);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(23,43)*c(43)*c(23);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(24,43)*c(43)*c(24);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(24,43)*c(43)*c(24);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(25,43)*c(43)*c(25);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(25,43)*c(43)*c(25);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(26,43)*c(43)*c(26);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(26,43)*c(43)*c(26);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(27,43)*c(43)*c(27);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(27,43)*c(43)*c(27);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(28,43)*c(43)*c(28);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(29,43)*c(43)*c(29);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(30,43)*c(43)*c(30);
	coll_evap_2d(43,76) = coll_evap_2d(43,76)+K(31,43)*c(43)*c(31);
	coll_evap_2d(43,20) = coll_evap_2d(43,20)+K(43,50)*c(43)*c(50);
	coll_evap_2d(43,21) = coll_evap_2d(43,21)+K(43,51)*c(43)*c(51);
	coll_evap_2d(43,22) = coll_evap_2d(43,22)+K(43,52)*c(43)*c(52);
	coll_evap_2d(43,26) = coll_evap_2d(43,26)+K(43,53)*c(43)*c(53);
	coll_evap_2d(43,27) = coll_evap_2d(43,27)+K(43,54)*c(43)*c(54);
	coll_evap_2d(43,28) = coll_evap_2d(43,28)+K(43,55)*c(43)*c(55);
	coll_evap_2d(43,29) = coll_evap_2d(43,29)+K(43,56)*c(43)*c(56);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(43,57)*c(43)*c(57);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(43,58)*c(43)*c(58);
	coll_evap_2d(43,30) = coll_evap_2d(43,30)+K(43,59)*c(43)*c(59);
	coll_evap_2d(43,31) = coll_evap_2d(43,31)+K(43,60)*c(43)*c(60);
	coll_evap_2d(43,75) = coll_evap_2d(43,75)+K(43,61)*c(43)*c(61);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(43,62)*c(43)*c(62);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(43,63)*c(43)*c(63);
	coll_evap_2d(43,75) = coll_evap_2d(43,75)+K(43,64)*c(43)*c(64);
	coll_evap_2d(43,78) = coll_evap_2d(43,78)+K(43,65)*c(43)*c(65);
	coll_evap_2d(43,75) = coll_evap_2d(43,75)+K(43,66)*c(43)*c(66);
	coll_evap_2d(43,75) = coll_evap_2d(43,75)+K(43,67)*c(43)*c(67);
	coll_evap_2d(43,14) = coll_evap_2d(43,14)+K(43,69)*c(43)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(43,57)*c(43)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(43,58)*c(43)*c(58);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(43,62)*c(43)*c(62);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(43,63)*c(43)*c(63);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(43,65)*c(43)*c(65);
	% Evaporations resulting in this cluster
	coll_evap_2d(44,43) = coll_evap_2d(44,43)+E(1,43)*c(44);
	coll_evap_2d(45,43) = coll_evap_2d(45,43)+E(2,43)*c(45);
	coll_evap_2d(46,43) = coll_evap_2d(46,43)+E(3,43)*c(46);
	coll_evap_2d(47,43) = coll_evap_2d(47,43)+E(8,43)*c(47);
	coll_evap_2d(48,43) = coll_evap_2d(48,43)+E(9,43)*c(48);
	coll_evap_2d(49,43) = coll_evap_2d(49,43)+E(15,43)*c(49);
	% External losses
	coll_evap_2d(43,71) = coll_evap_2d(43,71)+fcs*CS(43)*c(43);

% Cluster 44: 2A1B2N
	% Collisions removing this cluster
	coll_evap_2d(44,45) = coll_evap_2d(44,45)+K(1,44)*c(44)*c(1);
	coll_evap_2d(44,46) = coll_evap_2d(44,46)+K(2,44)*c(44)*c(2);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(3,44)*c(44)*c(3);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(3,44)*c(44)*c(3);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(4,44)*c(44)*c(4);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(4,44)*c(44)*c(4);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(5,44)*c(44)*c(5);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(5,44)*c(44)*c(5);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(6,44)*c(44)*c(6);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(6,44)*c(44)*c(6);
	coll_evap_2d(44,47) = coll_evap_2d(44,47)+K(7,44)*c(44)*c(7);
	coll_evap_2d(44,48) = coll_evap_2d(44,48)+K(8,44)*c(44)*c(8);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(9,44)*c(44)*c(9);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(10,44)*c(44)*c(10);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(11,44)*c(44)*c(11);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(12,44)*c(44)*c(12);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(12,44)*c(44)*c(12);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(13,44)*c(44)*c(13);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(13,44)*c(44)*c(13);
	coll_evap_2d(44,49) = coll_evap_2d(44,49)+K(14,44)*c(44)*c(14);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(15,44)*c(44)*c(15);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(16,44)*c(44)*c(16);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(17,44)*c(44)*c(17);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(18,44)*c(44)*c(18);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(18,44)*c(44)*c(18);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(19,44)*c(44)*c(19);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(19,44)*c(44)*c(19);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(20,44)*c(44)*c(20);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(20,44)*c(44)*c(20);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(21,44)*c(44)*c(21);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(22,44)*c(44)*c(22);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(23,44)*c(44)*c(23);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(24,44)*c(44)*c(24);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(24,44)*c(44)*c(24);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(25,44)*c(44)*c(25);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(25,44)*c(44)*c(25);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(26,44)*c(44)*c(26);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(26,44)*c(44)*c(26);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(27,44)*c(44)*c(27);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(28,44)*c(44)*c(28);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(29,44)*c(44)*c(29);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(30,44)*c(44)*c(30);
	coll_evap_2d(44,76) = coll_evap_2d(44,76)+K(31,44)*c(44)*c(31);
	coll_evap_2d(44,21) = coll_evap_2d(44,21)+K(44,50)*c(44)*c(50);
	coll_evap_2d(44,22) = coll_evap_2d(44,22)+K(44,51)*c(44)*c(51);
	coll_evap_2d(44,23) = coll_evap_2d(44,23)+K(44,52)*c(44)*c(52);
	coll_evap_2d(44,27) = coll_evap_2d(44,27)+K(44,53)*c(44)*c(53);
	coll_evap_2d(44,28) = coll_evap_2d(44,28)+K(44,54)*c(44)*c(54);
	coll_evap_2d(44,29) = coll_evap_2d(44,29)+K(44,55)*c(44)*c(55);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(44,56)*c(44)*c(56);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(44,57)*c(44)*c(57);
	coll_evap_2d(44,30) = coll_evap_2d(44,30)+K(44,58)*c(44)*c(58);
	coll_evap_2d(44,31) = coll_evap_2d(44,31)+K(44,59)*c(44)*c(59);
	coll_evap_2d(44,75) = coll_evap_2d(44,75)+K(44,60)*c(44)*c(60);
	coll_evap_2d(44,75) = coll_evap_2d(44,75)+K(44,61)*c(44)*c(61);
	coll_evap_2d(44,78) = coll_evap_2d(44,78)+K(44,62)*c(44)*c(62);
	coll_evap_2d(44,75) = coll_evap_2d(44,75)+K(44,63)*c(44)*c(63);
	coll_evap_2d(44,75) = coll_evap_2d(44,75)+K(44,64)*c(44)*c(64);
	coll_evap_2d(44,75) = coll_evap_2d(44,75)+K(44,65)*c(44)*c(65);
	coll_evap_2d(44,75) = coll_evap_2d(44,75)+K(44,66)*c(44)*c(66);
	coll_evap_2d(44,75) = coll_evap_2d(44,75)+K(44,67)*c(44)*c(67);
	coll_evap_2d(44,15) = coll_evap_2d(44,15)+K(44,69)*c(44)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(44,56)*c(44)*c(56);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(44,57)*c(44)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(44,62)*c(44)*c(62);
	% Evaporations resulting in this cluster
	coll_evap_2d(45,44) = coll_evap_2d(45,44)+E(1,44)*c(45);
	coll_evap_2d(46,44) = coll_evap_2d(46,44)+E(2,44)*c(46);
	coll_evap_2d(47,44) = coll_evap_2d(47,44)+E(7,44)*c(47);
	coll_evap_2d(48,44) = coll_evap_2d(48,44)+E(8,44)*c(48);
	coll_evap_2d(49,44) = coll_evap_2d(49,44)+E(14,44)*c(49);
	% External losses
	coll_evap_2d(44,71) = coll_evap_2d(44,71)+fcs*CS(44)*c(44);

% Cluster 45: 3A1B2N
	% Collisions removing this cluster
	coll_evap_2d(45,46) = coll_evap_2d(45,46)+K(1,45)*c(45)*c(1);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(2,45)*c(45)*c(2);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(2,45)*c(45)*c(2);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(3,45)*c(45)*c(3);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(3,45)*c(45)*c(3);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(4,45)*c(45)*c(4);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(4,45)*c(45)*c(4);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(5,45)*c(45)*c(5);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(5,45)*c(45)*c(5);
	coll_evap_2d(45,47) = coll_evap_2d(45,47)+K(6,45)*c(45)*c(6);
	coll_evap_2d(45,48) = coll_evap_2d(45,48)+K(7,45)*c(45)*c(7);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(8,45)*c(45)*c(8);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(9,45)*c(45)*c(9);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(10,45)*c(45)*c(10);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(11,45)*c(45)*c(11);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(12,45)*c(45)*c(12);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(12,45)*c(45)*c(12);
	coll_evap_2d(45,49) = coll_evap_2d(45,49)+K(13,45)*c(45)*c(13);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(14,45)*c(45)*c(14);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(15,45)*c(45)*c(15);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(16,45)*c(45)*c(16);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(17,45)*c(45)*c(17);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(18,45)*c(45)*c(18);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(18,45)*c(45)*c(18);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(19,45)*c(45)*c(19);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(19,45)*c(45)*c(19);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(20,45)*c(45)*c(20);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(21,45)*c(45)*c(21);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(22,45)*c(45)*c(22);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(23,45)*c(45)*c(23);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(24,45)*c(45)*c(24);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(24,45)*c(45)*c(24);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(25,45)*c(45)*c(25);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(25,45)*c(45)*c(25);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(26,45)*c(45)*c(26);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(27,45)*c(45)*c(27);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(28,45)*c(45)*c(28);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(29,45)*c(45)*c(29);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(30,45)*c(45)*c(30);
	coll_evap_2d(45,76) = coll_evap_2d(45,76)+K(31,45)*c(45)*c(31);
	coll_evap_2d(45,22) = coll_evap_2d(45,22)+K(45,50)*c(45)*c(50);
	coll_evap_2d(45,23) = coll_evap_2d(45,23)+K(45,51)*c(45)*c(51);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(45,52)*c(45)*c(52);
	coll_evap_2d(45,28) = coll_evap_2d(45,28)+K(45,53)*c(45)*c(53);
	coll_evap_2d(45,29) = coll_evap_2d(45,29)+K(45,54)*c(45)*c(54);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(45,55)*c(45)*c(55);
	coll_evap_2d(45,78) = coll_evap_2d(45,78)+K(45,56)*c(45)*c(56);
	coll_evap_2d(45,30) = coll_evap_2d(45,30)+K(45,57)*c(45)*c(57);
	coll_evap_2d(45,31) = coll_evap_2d(45,31)+K(45,58)*c(45)*c(58);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,59)*c(45)*c(59);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,60)*c(45)*c(60);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,61)*c(45)*c(61);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,62)*c(45)*c(62);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,63)*c(45)*c(63);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,64)*c(45)*c(64);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,65)*c(45)*c(65);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,66)*c(45)*c(66);
	coll_evap_2d(45,75) = coll_evap_2d(45,75)+K(45,67)*c(45)*c(67);
	coll_evap_2d(45,16) = coll_evap_2d(45,16)+K(45,69)*c(45)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(45,52)*c(45)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(45,55)*c(45)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(45,56)*c(45)*c(56);
	% Evaporations resulting in this cluster
	coll_evap_2d(46,45) = coll_evap_2d(46,45)+E(1,45)*c(46);
	coll_evap_2d(47,45) = coll_evap_2d(47,45)+E(6,45)*c(47);
	coll_evap_2d(48,45) = coll_evap_2d(48,45)+E(7,45)*c(48);
	coll_evap_2d(49,45) = coll_evap_2d(49,45)+E(13,45)*c(49);
	% External losses
	coll_evap_2d(45,71) = coll_evap_2d(45,71)+fcs*CS(45)*c(45);

% Cluster 46: 4A1B2N
	% Collisions removing this cluster
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(1,46)*c(46)*c(1);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(1,46)*c(46)*c(1);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(2,46)*c(46)*c(2);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(2,46)*c(46)*c(2);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(3,46)*c(46)*c(3);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(3,46)*c(46)*c(3);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(4,46)*c(46)*c(4);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(4,46)*c(46)*c(4);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(5,46)*c(46)*c(5);
	coll_evap_2d(78,46) = coll_evap_2d(78,46)+K(5,46)*c(46)*c(5);
	coll_evap_2d(46,48) = coll_evap_2d(46,48)+K(6,46)*c(46)*c(6);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(7,46)*c(46)*c(7);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(8,46)*c(46)*c(8);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(9,46)*c(46)*c(9);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(10,46)*c(46)*c(10);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(11,46)*c(46)*c(11);
	coll_evap_2d(46,49) = coll_evap_2d(46,49)+K(12,46)*c(46)*c(12);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(13,46)*c(46)*c(13);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(14,46)*c(46)*c(14);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(15,46)*c(46)*c(15);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(16,46)*c(46)*c(16);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(17,46)*c(46)*c(17);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(18,46)*c(46)*c(18);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(18,46)*c(46)*c(18);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(19,46)*c(46)*c(19);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(20,46)*c(46)*c(20);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(21,46)*c(46)*c(21);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(22,46)*c(46)*c(22);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(23,46)*c(46)*c(23);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(24,46)*c(46)*c(24);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(24,46)*c(46)*c(24);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(25,46)*c(46)*c(25);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(26,46)*c(46)*c(26);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(27,46)*c(46)*c(27);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(28,46)*c(46)*c(28);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(29,46)*c(46)*c(29);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(30,46)*c(46)*c(30);
	coll_evap_2d(46,76) = coll_evap_2d(46,76)+K(31,46)*c(46)*c(31);
	coll_evap_2d(46,23) = coll_evap_2d(46,23)+K(46,50)*c(46)*c(50);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(46,51)*c(46)*c(51);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(46,52)*c(46)*c(52);
	coll_evap_2d(46,29) = coll_evap_2d(46,29)+K(46,53)*c(46)*c(53);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(46,54)*c(46)*c(54);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(46,55)*c(46)*c(55);
	coll_evap_2d(46,78) = coll_evap_2d(46,78)+K(46,56)*c(46)*c(56);
	coll_evap_2d(46,31) = coll_evap_2d(46,31)+K(46,57)*c(46)*c(57);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,58)*c(46)*c(58);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,59)*c(46)*c(59);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,60)*c(46)*c(60);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,61)*c(46)*c(61);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,62)*c(46)*c(62);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,63)*c(46)*c(63);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,64)*c(46)*c(64);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,65)*c(46)*c(65);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,66)*c(46)*c(66);
	coll_evap_2d(46,75) = coll_evap_2d(46,75)+K(46,67)*c(46)*c(67);
	coll_evap_2d(46,17) = coll_evap_2d(46,17)+K(46,69)*c(46)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(46,51)*c(46)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(46,52)*c(46)*c(52);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(46,54)*c(46)*c(54);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(46,55)*c(46)*c(55);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+3*K(46,56)*c(46)*c(56);
	% Evaporations resulting in this cluster
	coll_evap_2d(48,46) = coll_evap_2d(48,46)+E(6,46)*c(48);
	coll_evap_2d(49,46) = coll_evap_2d(49,46)+E(12,46)*c(49);
	% External losses
	coll_evap_2d(46,71) = coll_evap_2d(46,71)+fcs*CS(46)*c(46);

% Cluster 47: 3A1B3N
	% Collisions removing this cluster
	coll_evap_2d(47,48) = coll_evap_2d(47,48)+K(1,47)*c(47)*c(1);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(2,47)*c(47)*c(2);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(3,47)*c(47)*c(3);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(4,47)*c(47)*c(4);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(5,47)*c(47)*c(5);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(6,47)*c(47)*c(6);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(6,47)*c(47)*c(6);
	coll_evap_2d(47,49) = coll_evap_2d(47,49)+K(7,47)*c(47)*c(7);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(8,47)*c(47)*c(8);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(9,47)*c(47)*c(9);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(10,47)*c(47)*c(10);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(11,47)*c(47)*c(11);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(12,47)*c(47)*c(12);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(12,47)*c(47)*c(12);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(13,47)*c(47)*c(13);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(13,47)*c(47)*c(13);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(14,47)*c(47)*c(14);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(15,47)*c(47)*c(15);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(16,47)*c(47)*c(16);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(17,47)*c(47)*c(17);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(18,47)*c(47)*c(18);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(18,47)*c(47)*c(18);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(19,47)*c(47)*c(19);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(19,47)*c(47)*c(19);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(20,47)*c(47)*c(20);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(21,47)*c(47)*c(21);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(22,47)*c(47)*c(22);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(23,47)*c(47)*c(23);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(24,47)*c(47)*c(24);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(24,47)*c(47)*c(24);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(25,47)*c(47)*c(25);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(25,47)*c(47)*c(25);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(26,47)*c(47)*c(26);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(27,47)*c(47)*c(27);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(28,47)*c(47)*c(28);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(29,47)*c(47)*c(29);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(30,47)*c(47)*c(30);
	coll_evap_2d(47,76) = coll_evap_2d(47,76)+K(31,47)*c(47)*c(31);
	coll_evap_2d(47,28) = coll_evap_2d(47,28)+K(47,50)*c(47)*c(50);
	coll_evap_2d(47,29) = coll_evap_2d(47,29)+K(47,51)*c(47)*c(51);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(47,52)*c(47)*c(52);
	coll_evap_2d(47,30) = coll_evap_2d(47,30)+K(47,53)*c(47)*c(53);
	coll_evap_2d(47,31) = coll_evap_2d(47,31)+K(47,54)*c(47)*c(54);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,55)*c(47)*c(55);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,56)*c(47)*c(56);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(47,57)*c(47)*c(57);
	coll_evap_2d(47,78) = coll_evap_2d(47,78)+K(47,58)*c(47)*c(58);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,59)*c(47)*c(59);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,60)*c(47)*c(60);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,61)*c(47)*c(61);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,62)*c(47)*c(62);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,63)*c(47)*c(63);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,64)*c(47)*c(64);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,65)*c(47)*c(65);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,66)*c(47)*c(66);
	coll_evap_2d(47,75) = coll_evap_2d(47,75)+K(47,67)*c(47)*c(67);
	coll_evap_2d(47,22) = coll_evap_2d(47,22)+K(47,69)*c(47)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(47,52)*c(47)*c(52);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(47,57)*c(47)*c(57);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(47,58)*c(47)*c(58);
	% Evaporations resulting in this cluster
	coll_evap_2d(48,47) = coll_evap_2d(48,47)+E(1,47)*c(48);
	coll_evap_2d(49,47) = coll_evap_2d(49,47)+E(7,47)*c(49);
	% External losses
	coll_evap_2d(47,71) = coll_evap_2d(47,71)+fcs*CS(47)*c(47);

% Cluster 48: 4A1B3N
	% Collisions removing this cluster
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(1,48)*c(48)*c(1);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(2,48)*c(48)*c(2);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(3,48)*c(48)*c(3);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(4,48)*c(48)*c(4);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(5,48)*c(48)*c(5);
	coll_evap_2d(48,49) = coll_evap_2d(48,49)+K(6,48)*c(48)*c(6);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(7,48)*c(48)*c(7);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(8,48)*c(48)*c(8);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(9,48)*c(48)*c(9);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(10,48)*c(48)*c(10);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(11,48)*c(48)*c(11);
	coll_evap_2d(48,78) = coll_evap_2d(48,78)+K(12,48)*c(48)*c(12);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(12,48)*c(48)*c(12);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(13,48)*c(48)*c(13);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(14,48)*c(48)*c(14);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(15,48)*c(48)*c(15);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(16,48)*c(48)*c(16);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(17,48)*c(48)*c(17);
	coll_evap_2d(48,78) = coll_evap_2d(48,78)+K(18,48)*c(48)*c(18);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(18,48)*c(48)*c(18);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(19,48)*c(48)*c(19);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(20,48)*c(48)*c(20);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(21,48)*c(48)*c(21);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(22,48)*c(48)*c(22);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(23,48)*c(48)*c(23);
	coll_evap_2d(48,78) = coll_evap_2d(48,78)+K(24,48)*c(48)*c(24);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(24,48)*c(48)*c(24);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(25,48)*c(48)*c(25);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(26,48)*c(48)*c(26);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(27,48)*c(48)*c(27);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(28,48)*c(48)*c(28);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(29,48)*c(48)*c(29);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(30,48)*c(48)*c(30);
	coll_evap_2d(48,76) = coll_evap_2d(48,76)+K(31,48)*c(48)*c(31);
	coll_evap_2d(48,29) = coll_evap_2d(48,29)+K(48,50)*c(48)*c(50);
	coll_evap_2d(48,78) = coll_evap_2d(48,78)+K(48,51)*c(48)*c(51);
	coll_evap_2d(48,78) = coll_evap_2d(48,78)+K(48,52)*c(48)*c(52);
	coll_evap_2d(48,31) = coll_evap_2d(48,31)+K(48,53)*c(48)*c(53);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,54)*c(48)*c(54);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,55)*c(48)*c(55);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,56)*c(48)*c(56);
	coll_evap_2d(48,78) = coll_evap_2d(48,78)+K(48,57)*c(48)*c(57);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,58)*c(48)*c(58);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,59)*c(48)*c(59);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,60)*c(48)*c(60);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,61)*c(48)*c(61);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,62)*c(48)*c(62);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,63)*c(48)*c(63);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,64)*c(48)*c(64);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,65)*c(48)*c(65);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,66)*c(48)*c(66);
	coll_evap_2d(48,75) = coll_evap_2d(48,75)+K(48,67)*c(48)*c(67);
	coll_evap_2d(48,23) = coll_evap_2d(48,23)+K(48,69)*c(48)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+K(48,51)*c(48)*c(51);
	coll_evap_2d(78,1) = coll_evap_2d(78,1)+2*K(48,52)*c(48)*c(52);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(48,57)*c(48)*c(57);
	% Evaporations resulting in this cluster
	coll_evap_2d(49,48) = coll_evap_2d(49,48)+E(6,48)*c(49);
	% External losses
	coll_evap_2d(48,71) = coll_evap_2d(48,71)+fcs*CS(48)*c(48);

% Cluster 49: 4A1B4N
	% Collisions removing this cluster
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(1,49)*c(49)*c(1);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(2,49)*c(49)*c(2);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(3,49)*c(49)*c(3);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(4,49)*c(49)*c(4);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(5,49)*c(49)*c(5);
	coll_evap_2d(49,78) = coll_evap_2d(49,78)+K(6,49)*c(49)*c(6);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(6,49)*c(49)*c(6);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(7,49)*c(49)*c(7);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(8,49)*c(49)*c(8);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(9,49)*c(49)*c(9);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(10,49)*c(49)*c(10);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(11,49)*c(49)*c(11);
	coll_evap_2d(49,78) = coll_evap_2d(49,78)+K(12,49)*c(49)*c(12);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(12,49)*c(49)*c(12);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(13,49)*c(49)*c(13);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(14,49)*c(49)*c(14);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(15,49)*c(49)*c(15);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(16,49)*c(49)*c(16);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(17,49)*c(49)*c(17);
	coll_evap_2d(49,78) = coll_evap_2d(49,78)+K(18,49)*c(49)*c(18);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(18,49)*c(49)*c(18);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(19,49)*c(49)*c(19);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(20,49)*c(49)*c(20);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(21,49)*c(49)*c(21);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(22,49)*c(49)*c(22);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(23,49)*c(49)*c(23);
	coll_evap_2d(49,78) = coll_evap_2d(49,78)+K(24,49)*c(49)*c(24);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(24,49)*c(49)*c(24);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(25,49)*c(49)*c(25);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(26,49)*c(49)*c(26);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(27,49)*c(49)*c(27);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(28,49)*c(49)*c(28);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(29,49)*c(49)*c(29);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(30,49)*c(49)*c(30);
	coll_evap_2d(49,76) = coll_evap_2d(49,76)+K(31,49)*c(49)*c(31);
	coll_evap_2d(49,31) = coll_evap_2d(49,31)+K(49,50)*c(49)*c(50);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,51)*c(49)*c(51);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,52)*c(49)*c(52);
	coll_evap_2d(49,78) = coll_evap_2d(49,78)+K(49,53)*c(49)*c(53);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,54)*c(49)*c(54);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,55)*c(49)*c(55);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,56)*c(49)*c(56);
	coll_evap_2d(49,78) = coll_evap_2d(49,78)+K(49,57)*c(49)*c(57);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,58)*c(49)*c(58);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,59)*c(49)*c(59);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,60)*c(49)*c(60);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,61)*c(49)*c(61);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,62)*c(49)*c(62);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,63)*c(49)*c(63);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,64)*c(49)*c(64);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,65)*c(49)*c(65);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,66)*c(49)*c(66);
	coll_evap_2d(49,75) = coll_evap_2d(49,75)+K(49,67)*c(49)*c(67);
	coll_evap_2d(49,29) = coll_evap_2d(49,29)+K(49,69)*c(49)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(49,53)*c(49)*c(53);
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+2*K(49,57)*c(49)*c(57);
	% External losses
	coll_evap_2d(49,71) = coll_evap_2d(49,71)+fcs*CS(49)*c(49);

% Cluster 50: 1N1P
	% Collisions removing this cluster
	coll_evap_2d(50,51) = coll_evap_2d(50,51)+K(1,50)*c(50)*c(1);
	coll_evap_2d(50,52) = coll_evap_2d(50,52)+K(2,50)*c(50)*c(2);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(3,50)*c(50)*c(3);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(3,50)*c(50)*c(3);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(4,50)*c(50)*c(4);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(4,50)*c(50)*c(4);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(5,50)*c(50)*c(5);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(5,50)*c(50)*c(5);
	coll_evap_2d(50,53) = coll_evap_2d(50,53)+K(6,50)*c(50)*c(6);
	coll_evap_2d(50,54) = coll_evap_2d(50,54)+K(7,50)*c(50)*c(7);
	coll_evap_2d(50,55) = coll_evap_2d(50,55)+K(8,50)*c(50)*c(8);
	coll_evap_2d(50,56) = coll_evap_2d(50,56)+K(9,50)*c(50)*c(9);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(10,50)*c(50)*c(10);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(10,50)*c(50)*c(10);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(11,50)*c(50)*c(11);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(11,50)*c(50)*c(11);
	coll_evap_2d(50,57) = coll_evap_2d(50,57)+K(12,50)*c(50)*c(12);
	coll_evap_2d(50,58) = coll_evap_2d(50,58)+K(13,50)*c(50)*c(13);
	coll_evap_2d(50,59) = coll_evap_2d(50,59)+K(14,50)*c(50)*c(14);
	coll_evap_2d(50,60) = coll_evap_2d(50,60)+K(15,50)*c(50)*c(15);
	coll_evap_2d(50,61) = coll_evap_2d(50,61)+K(16,50)*c(50)*c(16);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(17,50)*c(50)*c(17);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(17,50)*c(50)*c(17);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(18,50)*c(50)*c(18);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(18,50)*c(50)*c(18);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(19,50)*c(50)*c(19);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(19,50)*c(50)*c(19);
	coll_evap_2d(50,62) = coll_evap_2d(50,62)+K(20,50)*c(50)*c(20);
	coll_evap_2d(50,63) = coll_evap_2d(50,63)+K(21,50)*c(50)*c(21);
	coll_evap_2d(50,64) = coll_evap_2d(50,64)+K(22,50)*c(50)*c(22);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(23,50)*c(50)*c(23);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(23,50)*c(50)*c(23);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(24,50)*c(50)*c(24);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(24,50)*c(50)*c(24);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(25,50)*c(50)*c(25);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(25,50)*c(50)*c(25);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(26,50)*c(50)*c(26);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(26,50)*c(50)*c(26);
	coll_evap_2d(50,65) = coll_evap_2d(50,65)+K(27,50)*c(50)*c(27);
	coll_evap_2d(50,66) = coll_evap_2d(50,66)+K(28,50)*c(50)*c(28);
	coll_evap_2d(50,67) = coll_evap_2d(50,67)+K(29,50)*c(50)*c(29);
	coll_evap_2d(50,78) = coll_evap_2d(50,78)+K(30,50)*c(50)*c(30);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(30,50)*c(50)*c(30);
	coll_evap_2d(50,77) = coll_evap_2d(50,77)+K(31,50)*c(50)*c(31);
	coll_evap_2d(50,7) = coll_evap_2d(50,7)+K(32,50)*c(50)*c(32);
	coll_evap_2d(50,8) = coll_evap_2d(50,8)+K(33,50)*c(50)*c(33);
	coll_evap_2d(50,9) = coll_evap_2d(50,9)+K(34,50)*c(50)*c(34);
	coll_evap_2d(50,10) = coll_evap_2d(50,10)+K(35,50)*c(50)*c(35);
	coll_evap_2d(50,11) = coll_evap_2d(50,11)+K(36,50)*c(50)*c(36);
	coll_evap_2d(50,13) = coll_evap_2d(50,13)+K(37,50)*c(50)*c(37);
	coll_evap_2d(50,14) = coll_evap_2d(50,14)+K(38,50)*c(50)*c(38);
	coll_evap_2d(50,15) = coll_evap_2d(50,15)+K(39,50)*c(50)*c(39);
	coll_evap_2d(50,16) = coll_evap_2d(50,16)+K(40,50)*c(50)*c(40);
	coll_evap_2d(50,17) = coll_evap_2d(50,17)+K(41,50)*c(50)*c(41);
	coll_evap_2d(50,19) = coll_evap_2d(50,19)+K(42,50)*c(50)*c(42);
	coll_evap_2d(50,20) = coll_evap_2d(50,20)+K(43,50)*c(50)*c(43);
	coll_evap_2d(50,21) = coll_evap_2d(50,21)+K(44,50)*c(50)*c(44);
	coll_evap_2d(50,22) = coll_evap_2d(50,22)+K(45,50)*c(50)*c(45);
	coll_evap_2d(50,23) = coll_evap_2d(50,23)+K(46,50)*c(50)*c(46);
	coll_evap_2d(50,28) = coll_evap_2d(50,28)+K(47,50)*c(50)*c(47);
	coll_evap_2d(50,29) = coll_evap_2d(50,29)+K(48,50)*c(50)*c(48);
	coll_evap_2d(50,31) = coll_evap_2d(50,31)+K(49,50)*c(50)*c(49);
	coll_evap_2d(50,6) = coll_evap_2d(50,6)+K(50,68)*c(50)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(51,50) = coll_evap_2d(51,50)+E(1,50)*c(51);
	coll_evap_2d(52,50) = coll_evap_2d(52,50)+E(2,50)*c(52);
	coll_evap_2d(53,50) = coll_evap_2d(53,50)+E(6,50)*c(53);
	coll_evap_2d(54,50) = coll_evap_2d(54,50)+E(7,50)*c(54);
	coll_evap_2d(55,50) = coll_evap_2d(55,50)+E(8,50)*c(55);
	coll_evap_2d(56,50) = coll_evap_2d(56,50)+E(9,50)*c(56);
	coll_evap_2d(57,50) = coll_evap_2d(57,50)+E(12,50)*c(57);
	coll_evap_2d(58,50) = coll_evap_2d(58,50)+E(13,50)*c(58);
	coll_evap_2d(59,50) = coll_evap_2d(59,50)+E(14,50)*c(59);
	coll_evap_2d(60,50) = coll_evap_2d(60,50)+E(15,50)*c(60);
	coll_evap_2d(61,50) = coll_evap_2d(61,50)+E(16,50)*c(61);
	coll_evap_2d(62,50) = coll_evap_2d(62,50)+E(20,50)*c(62);
	coll_evap_2d(63,50) = coll_evap_2d(63,50)+E(21,50)*c(63);
	coll_evap_2d(64,50) = coll_evap_2d(64,50)+E(22,50)*c(64);
	coll_evap_2d(65,50) = coll_evap_2d(65,50)+E(27,50)*c(65);
	coll_evap_2d(66,50) = coll_evap_2d(66,50)+E(28,50)*c(66);
	coll_evap_2d(67,50) = coll_evap_2d(67,50)+E(29,50)*c(67);
	% External losses
	coll_evap_2d(50,71) = coll_evap_2d(50,71)+fcs*CS(50)*c(50);

% Cluster 51: 1A1N1P
	% Collisions removing this cluster
	coll_evap_2d(51,52) = coll_evap_2d(51,52)+K(1,51)*c(51)*c(1);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(2,51)*c(51)*c(2);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(2,51)*c(51)*c(2);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(3,51)*c(51)*c(3);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(3,51)*c(51)*c(3);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(4,51)*c(51)*c(4);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(4,51)*c(51)*c(4);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(5,51)*c(51)*c(5);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(5,51)*c(51)*c(5);
	coll_evap_2d(51,54) = coll_evap_2d(51,54)+K(6,51)*c(51)*c(6);
	coll_evap_2d(51,55) = coll_evap_2d(51,55)+K(7,51)*c(51)*c(7);
	coll_evap_2d(51,56) = coll_evap_2d(51,56)+K(8,51)*c(51)*c(8);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(9,51)*c(51)*c(9);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(9,51)*c(51)*c(9);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(10,51)*c(51)*c(10);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(10,51)*c(51)*c(10);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(11,51)*c(51)*c(11);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(11,51)*c(51)*c(11);
	coll_evap_2d(51,58) = coll_evap_2d(51,58)+K(12,51)*c(51)*c(12);
	coll_evap_2d(51,59) = coll_evap_2d(51,59)+K(13,51)*c(51)*c(13);
	coll_evap_2d(51,60) = coll_evap_2d(51,60)+K(14,51)*c(51)*c(14);
	coll_evap_2d(51,61) = coll_evap_2d(51,61)+K(15,51)*c(51)*c(15);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(16,51)*c(51)*c(16);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(16,51)*c(51)*c(16);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(17,51)*c(51)*c(17);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(17,51)*c(51)*c(17);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(18,51)*c(51)*c(18);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(18,51)*c(51)*c(18);
	coll_evap_2d(51,62) = coll_evap_2d(51,62)+K(19,51)*c(51)*c(19);
	coll_evap_2d(51,63) = coll_evap_2d(51,63)+K(20,51)*c(51)*c(20);
	coll_evap_2d(51,64) = coll_evap_2d(51,64)+K(21,51)*c(51)*c(21);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(22,51)*c(51)*c(22);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(22,51)*c(51)*c(22);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(23,51)*c(51)*c(23);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(23,51)*c(51)*c(23);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(24,51)*c(51)*c(24);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(24,51)*c(51)*c(24);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(25,51)*c(51)*c(25);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(25,51)*c(51)*c(25);
	coll_evap_2d(51,65) = coll_evap_2d(51,65)+K(26,51)*c(51)*c(26);
	coll_evap_2d(51,66) = coll_evap_2d(51,66)+K(27,51)*c(51)*c(27);
	coll_evap_2d(51,67) = coll_evap_2d(51,67)+K(28,51)*c(51)*c(28);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(29,51)*c(51)*c(29);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(29,51)*c(51)*c(29);
	coll_evap_2d(51,77) = coll_evap_2d(51,77)+K(30,51)*c(51)*c(30);
	coll_evap_2d(51,77) = coll_evap_2d(51,77)+K(31,51)*c(51)*c(31);
	coll_evap_2d(51,8) = coll_evap_2d(51,8)+K(32,51)*c(51)*c(32);
	coll_evap_2d(51,9) = coll_evap_2d(51,9)+K(33,51)*c(51)*c(33);
	coll_evap_2d(51,10) = coll_evap_2d(51,10)+K(34,51)*c(51)*c(34);
	coll_evap_2d(51,11) = coll_evap_2d(51,11)+K(35,51)*c(51)*c(35);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(36,51)*c(51)*c(36);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(36,51)*c(51)*c(36);
	coll_evap_2d(51,14) = coll_evap_2d(51,14)+K(37,51)*c(51)*c(37);
	coll_evap_2d(51,15) = coll_evap_2d(51,15)+K(38,51)*c(51)*c(38);
	coll_evap_2d(51,16) = coll_evap_2d(51,16)+K(39,51)*c(51)*c(39);
	coll_evap_2d(51,17) = coll_evap_2d(51,17)+K(40,51)*c(51)*c(40);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(41,51)*c(51)*c(41);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(41,51)*c(51)*c(41);
	coll_evap_2d(51,20) = coll_evap_2d(51,20)+K(42,51)*c(51)*c(42);
	coll_evap_2d(51,21) = coll_evap_2d(51,21)+K(43,51)*c(51)*c(43);
	coll_evap_2d(51,22) = coll_evap_2d(51,22)+K(44,51)*c(51)*c(44);
	coll_evap_2d(51,23) = coll_evap_2d(51,23)+K(45,51)*c(51)*c(45);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(46,51)*c(51)*c(46);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(46,51)*c(51)*c(46);
	coll_evap_2d(51,29) = coll_evap_2d(51,29)+K(47,51)*c(51)*c(47);
	coll_evap_2d(51,78) = coll_evap_2d(51,78)+K(48,51)*c(51)*c(48);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(48,51)*c(51)*c(48);
	coll_evap_2d(51,75) = coll_evap_2d(51,75)+K(49,51)*c(51)*c(49);
	coll_evap_2d(51,7) = coll_evap_2d(51,7)+K(51,68)*c(51)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(52,51) = coll_evap_2d(52,51)+E(1,51)*c(52);
	coll_evap_2d(54,51) = coll_evap_2d(54,51)+E(6,51)*c(54);
	coll_evap_2d(55,51) = coll_evap_2d(55,51)+E(7,51)*c(55);
	coll_evap_2d(56,51) = coll_evap_2d(56,51)+E(8,51)*c(56);
	coll_evap_2d(58,51) = coll_evap_2d(58,51)+E(12,51)*c(58);
	coll_evap_2d(59,51) = coll_evap_2d(59,51)+E(13,51)*c(59);
	coll_evap_2d(60,51) = coll_evap_2d(60,51)+E(14,51)*c(60);
	coll_evap_2d(61,51) = coll_evap_2d(61,51)+E(15,51)*c(61);
	coll_evap_2d(62,51) = coll_evap_2d(62,51)+E(19,51)*c(62);
	coll_evap_2d(63,51) = coll_evap_2d(63,51)+E(20,51)*c(63);
	coll_evap_2d(64,51) = coll_evap_2d(64,51)+E(21,51)*c(64);
	coll_evap_2d(65,51) = coll_evap_2d(65,51)+E(26,51)*c(65);
	coll_evap_2d(66,51) = coll_evap_2d(66,51)+E(27,51)*c(66);
	coll_evap_2d(67,51) = coll_evap_2d(67,51)+E(28,51)*c(67);
	% External losses
	coll_evap_2d(51,71) = coll_evap_2d(51,71)+fcs*CS(51)*c(51);

% Cluster 52: 2A1N1P
	% Collisions removing this cluster
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(1,52)*c(52)*c(1);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(1,52)*c(52)*c(1);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(2,52)*c(52)*c(2);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(2,52)*c(52)*c(2);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(3,52)*c(52)*c(3);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(3,52)*c(52)*c(3);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(4,52)*c(52)*c(4);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(4,52)*c(52)*c(4);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(5,52)*c(52)*c(5);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(5,52)*c(52)*c(5);
	coll_evap_2d(52,55) = coll_evap_2d(52,55)+K(6,52)*c(52)*c(6);
	coll_evap_2d(52,56) = coll_evap_2d(52,56)+K(7,52)*c(52)*c(7);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(8,52)*c(52)*c(8);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(8,52)*c(52)*c(8);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(9,52)*c(52)*c(9);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(9,52)*c(52)*c(9);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(10,52)*c(52)*c(10);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(10,52)*c(52)*c(10);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(11,52)*c(52)*c(11);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(11,52)*c(52)*c(11);
	coll_evap_2d(52,59) = coll_evap_2d(52,59)+K(12,52)*c(52)*c(12);
	coll_evap_2d(52,60) = coll_evap_2d(52,60)+K(13,52)*c(52)*c(13);
	coll_evap_2d(52,61) = coll_evap_2d(52,61)+K(14,52)*c(52)*c(14);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(15,52)*c(52)*c(15);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(15,52)*c(52)*c(15);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(16,52)*c(52)*c(16);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(16,52)*c(52)*c(16);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(17,52)*c(52)*c(17);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(17,52)*c(52)*c(17);
	coll_evap_2d(52,62) = coll_evap_2d(52,62)+K(18,52)*c(52)*c(18);
	coll_evap_2d(52,63) = coll_evap_2d(52,63)+K(19,52)*c(52)*c(19);
	coll_evap_2d(52,64) = coll_evap_2d(52,64)+K(20,52)*c(52)*c(20);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(21,52)*c(52)*c(21);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(21,52)*c(52)*c(21);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(22,52)*c(52)*c(22);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(22,52)*c(52)*c(22);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(23,52)*c(52)*c(23);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(23,52)*c(52)*c(23);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(24,52)*c(52)*c(24);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(24,52)*c(52)*c(24);
	coll_evap_2d(52,65) = coll_evap_2d(52,65)+K(25,52)*c(52)*c(25);
	coll_evap_2d(52,66) = coll_evap_2d(52,66)+K(26,52)*c(52)*c(26);
	coll_evap_2d(52,67) = coll_evap_2d(52,67)+K(27,52)*c(52)*c(27);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(28,52)*c(52)*c(28);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(28,52)*c(52)*c(28);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(29,52)*c(52)*c(29);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(29,52)*c(52)*c(29);
	coll_evap_2d(52,77) = coll_evap_2d(52,77)+K(30,52)*c(52)*c(30);
	coll_evap_2d(52,77) = coll_evap_2d(52,77)+K(31,52)*c(52)*c(31);
	coll_evap_2d(52,9) = coll_evap_2d(52,9)+K(32,52)*c(52)*c(32);
	coll_evap_2d(52,10) = coll_evap_2d(52,10)+K(33,52)*c(52)*c(33);
	coll_evap_2d(52,11) = coll_evap_2d(52,11)+K(34,52)*c(52)*c(34);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(35,52)*c(52)*c(35);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(35,52)*c(52)*c(35);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(36,52)*c(52)*c(36);
	coll_evap_2d(78,11) = coll_evap_2d(78,11)+K(36,52)*c(52)*c(36);
	coll_evap_2d(52,15) = coll_evap_2d(52,15)+K(37,52)*c(52)*c(37);
	coll_evap_2d(52,16) = coll_evap_2d(52,16)+K(38,52)*c(52)*c(38);
	coll_evap_2d(52,17) = coll_evap_2d(52,17)+K(39,52)*c(52)*c(39);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(40,52)*c(52)*c(40);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(40,52)*c(52)*c(40);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(41,52)*c(52)*c(41);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(41,52)*c(52)*c(41);
	coll_evap_2d(52,21) = coll_evap_2d(52,21)+K(42,52)*c(52)*c(42);
	coll_evap_2d(52,22) = coll_evap_2d(52,22)+K(43,52)*c(52)*c(43);
	coll_evap_2d(52,23) = coll_evap_2d(52,23)+K(44,52)*c(52)*c(44);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(45,52)*c(52)*c(45);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(45,52)*c(52)*c(45);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(46,52)*c(52)*c(46);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(46,52)*c(52)*c(46);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(47,52)*c(52)*c(47);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(47,52)*c(52)*c(47);
	coll_evap_2d(52,78) = coll_evap_2d(52,78)+K(48,52)*c(52)*c(48);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(48,52)*c(52)*c(48);
	coll_evap_2d(52,75) = coll_evap_2d(52,75)+K(49,52)*c(52)*c(49);
	coll_evap_2d(52,8) = coll_evap_2d(52,8)+K(52,68)*c(52)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(55,52) = coll_evap_2d(55,52)+E(6,52)*c(55);
	coll_evap_2d(56,52) = coll_evap_2d(56,52)+E(7,52)*c(56);
	coll_evap_2d(59,52) = coll_evap_2d(59,52)+E(12,52)*c(59);
	coll_evap_2d(60,52) = coll_evap_2d(60,52)+E(13,52)*c(60);
	coll_evap_2d(61,52) = coll_evap_2d(61,52)+E(14,52)*c(61);
	coll_evap_2d(62,52) = coll_evap_2d(62,52)+E(18,52)*c(62);
	coll_evap_2d(63,52) = coll_evap_2d(63,52)+E(19,52)*c(63);
	coll_evap_2d(64,52) = coll_evap_2d(64,52)+E(20,52)*c(64);
	coll_evap_2d(65,52) = coll_evap_2d(65,52)+E(25,52)*c(65);
	coll_evap_2d(66,52) = coll_evap_2d(66,52)+E(26,52)*c(66);
	coll_evap_2d(67,52) = coll_evap_2d(67,52)+E(27,52)*c(67);
	% External losses
	coll_evap_2d(52,71) = coll_evap_2d(52,71)+fcs*CS(52)*c(52);

% Cluster 53: 2N1P
	% Collisions removing this cluster
	coll_evap_2d(53,54) = coll_evap_2d(53,54)+K(1,53)*c(53)*c(1);
	coll_evap_2d(53,55) = coll_evap_2d(53,55)+K(2,53)*c(53)*c(2);
	coll_evap_2d(53,56) = coll_evap_2d(53,56)+K(3,53)*c(53)*c(3);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(4,53)*c(53)*c(4);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(4,53)*c(53)*c(4);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(5,53)*c(53)*c(5);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(5,53)*c(53)*c(5);
	coll_evap_2d(53,57) = coll_evap_2d(53,57)+K(6,53)*c(53)*c(6);
	coll_evap_2d(53,58) = coll_evap_2d(53,58)+K(7,53)*c(53)*c(7);
	coll_evap_2d(53,59) = coll_evap_2d(53,59)+K(8,53)*c(53)*c(8);
	coll_evap_2d(53,60) = coll_evap_2d(53,60)+K(9,53)*c(53)*c(9);
	coll_evap_2d(53,61) = coll_evap_2d(53,61)+K(10,53)*c(53)*c(10);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(11,53)*c(53)*c(11);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(11,53)*c(53)*c(11);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(12,53)*c(53)*c(12);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(12,53)*c(53)*c(12);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(13,53)*c(53)*c(13);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(13,53)*c(53)*c(13);
	coll_evap_2d(53,62) = coll_evap_2d(53,62)+K(14,53)*c(53)*c(14);
	coll_evap_2d(53,63) = coll_evap_2d(53,63)+K(15,53)*c(53)*c(15);
	coll_evap_2d(53,64) = coll_evap_2d(53,64)+K(16,53)*c(53)*c(16);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(17,53)*c(53)*c(17);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(17,53)*c(53)*c(17);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(18,53)*c(53)*c(18);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(18,53)*c(53)*c(18);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(19,53)*c(53)*c(19);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(19,53)*c(53)*c(19);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(20,53)*c(53)*c(20);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(20,53)*c(53)*c(20);
	coll_evap_2d(53,65) = coll_evap_2d(53,65)+K(21,53)*c(53)*c(21);
	coll_evap_2d(53,66) = coll_evap_2d(53,66)+K(22,53)*c(53)*c(22);
	coll_evap_2d(53,67) = coll_evap_2d(53,67)+K(23,53)*c(53)*c(23);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(24,53)*c(53)*c(24);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(24,53)*c(53)*c(24);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(25,53)*c(53)*c(25);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(25,53)*c(53)*c(25);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(26,53)*c(53)*c(26);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(26,53)*c(53)*c(26);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(27,53)*c(53)*c(27);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(27,53)*c(53)*c(27);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(28,53)*c(53)*c(28);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(28,53)*c(53)*c(28);
	coll_evap_2d(53,77) = coll_evap_2d(53,77)+K(29,53)*c(53)*c(29);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(30,53)*c(53)*c(30);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(30,53)*c(53)*c(30);
	coll_evap_2d(53,77) = coll_evap_2d(53,77)+K(31,53)*c(53)*c(31);
	coll_evap_2d(53,13) = coll_evap_2d(53,13)+K(32,53)*c(53)*c(32);
	coll_evap_2d(53,14) = coll_evap_2d(53,14)+K(33,53)*c(53)*c(33);
	coll_evap_2d(53,15) = coll_evap_2d(53,15)+K(34,53)*c(53)*c(34);
	coll_evap_2d(53,16) = coll_evap_2d(53,16)+K(35,53)*c(53)*c(35);
	coll_evap_2d(53,17) = coll_evap_2d(53,17)+K(36,53)*c(53)*c(36);
	coll_evap_2d(53,19) = coll_evap_2d(53,19)+K(37,53)*c(53)*c(37);
	coll_evap_2d(53,20) = coll_evap_2d(53,20)+K(38,53)*c(53)*c(38);
	coll_evap_2d(53,21) = coll_evap_2d(53,21)+K(39,53)*c(53)*c(39);
	coll_evap_2d(53,22) = coll_evap_2d(53,22)+K(40,53)*c(53)*c(40);
	coll_evap_2d(53,23) = coll_evap_2d(53,23)+K(41,53)*c(53)*c(41);
	coll_evap_2d(53,25) = coll_evap_2d(53,25)+K(42,53)*c(53)*c(42);
	coll_evap_2d(53,26) = coll_evap_2d(53,26)+K(43,53)*c(53)*c(43);
	coll_evap_2d(53,27) = coll_evap_2d(53,27)+K(44,53)*c(53)*c(44);
	coll_evap_2d(53,28) = coll_evap_2d(53,28)+K(45,53)*c(53)*c(45);
	coll_evap_2d(53,29) = coll_evap_2d(53,29)+K(46,53)*c(53)*c(46);
	coll_evap_2d(53,30) = coll_evap_2d(53,30)+K(47,53)*c(53)*c(47);
	coll_evap_2d(53,31) = coll_evap_2d(53,31)+K(48,53)*c(53)*c(48);
	coll_evap_2d(53,78) = coll_evap_2d(53,78)+K(49,53)*c(53)*c(49);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(49,53)*c(53)*c(49);
	coll_evap_2d(53,12) = coll_evap_2d(53,12)+K(53,68)*c(53)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(54,53) = coll_evap_2d(54,53)+E(1,53)*c(54);
	coll_evap_2d(55,53) = coll_evap_2d(55,53)+E(2,53)*c(55);
	coll_evap_2d(56,53) = coll_evap_2d(56,53)+E(3,53)*c(56);
	coll_evap_2d(57,53) = coll_evap_2d(57,53)+E(6,53)*c(57);
	coll_evap_2d(58,53) = coll_evap_2d(58,53)+E(7,53)*c(58);
	coll_evap_2d(59,53) = coll_evap_2d(59,53)+E(8,53)*c(59);
	coll_evap_2d(60,53) = coll_evap_2d(60,53)+E(9,53)*c(60);
	coll_evap_2d(61,53) = coll_evap_2d(61,53)+E(10,53)*c(61);
	coll_evap_2d(62,53) = coll_evap_2d(62,53)+E(14,53)*c(62);
	coll_evap_2d(63,53) = coll_evap_2d(63,53)+E(15,53)*c(63);
	coll_evap_2d(64,53) = coll_evap_2d(64,53)+E(16,53)*c(64);
	coll_evap_2d(65,53) = coll_evap_2d(65,53)+E(21,53)*c(65);
	coll_evap_2d(66,53) = coll_evap_2d(66,53)+E(22,53)*c(66);
	coll_evap_2d(67,53) = coll_evap_2d(67,53)+E(23,53)*c(67);
	% External losses
	coll_evap_2d(53,71) = coll_evap_2d(53,71)+fcs*CS(53)*c(53);

% Cluster 54: 1A2N1P
	% Collisions removing this cluster
	coll_evap_2d(54,55) = coll_evap_2d(54,55)+K(1,54)*c(54)*c(1);
	coll_evap_2d(54,56) = coll_evap_2d(54,56)+K(2,54)*c(54)*c(2);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(3,54)*c(54)*c(3);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(3,54)*c(54)*c(3);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(4,54)*c(54)*c(4);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(4,54)*c(54)*c(4);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(5,54)*c(54)*c(5);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(5,54)*c(54)*c(5);
	coll_evap_2d(54,58) = coll_evap_2d(54,58)+K(6,54)*c(54)*c(6);
	coll_evap_2d(54,59) = coll_evap_2d(54,59)+K(7,54)*c(54)*c(7);
	coll_evap_2d(54,60) = coll_evap_2d(54,60)+K(8,54)*c(54)*c(8);
	coll_evap_2d(54,61) = coll_evap_2d(54,61)+K(9,54)*c(54)*c(9);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(10,54)*c(54)*c(10);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(10,54)*c(54)*c(10);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(11,54)*c(54)*c(11);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(11,54)*c(54)*c(11);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(12,54)*c(54)*c(12);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(12,54)*c(54)*c(12);
	coll_evap_2d(54,62) = coll_evap_2d(54,62)+K(13,54)*c(54)*c(13);
	coll_evap_2d(54,63) = coll_evap_2d(54,63)+K(14,54)*c(54)*c(14);
	coll_evap_2d(54,64) = coll_evap_2d(54,64)+K(15,54)*c(54)*c(15);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(16,54)*c(54)*c(16);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(16,54)*c(54)*c(16);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(17,54)*c(54)*c(17);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(17,54)*c(54)*c(17);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(18,54)*c(54)*c(18);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(18,54)*c(54)*c(18);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(19,54)*c(54)*c(19);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(19,54)*c(54)*c(19);
	coll_evap_2d(54,65) = coll_evap_2d(54,65)+K(20,54)*c(54)*c(20);
	coll_evap_2d(54,66) = coll_evap_2d(54,66)+K(21,54)*c(54)*c(21);
	coll_evap_2d(54,67) = coll_evap_2d(54,67)+K(22,54)*c(54)*c(22);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(23,54)*c(54)*c(23);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(23,54)*c(54)*c(23);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(24,54)*c(54)*c(24);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(24,54)*c(54)*c(24);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(25,54)*c(54)*c(25);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(25,54)*c(54)*c(25);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(26,54)*c(54)*c(26);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(26,54)*c(54)*c(26);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(27,54)*c(54)*c(27);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(27,54)*c(54)*c(27);
	coll_evap_2d(54,77) = coll_evap_2d(54,77)+K(28,54)*c(54)*c(28);
	coll_evap_2d(54,77) = coll_evap_2d(54,77)+K(29,54)*c(54)*c(29);
	coll_evap_2d(54,77) = coll_evap_2d(54,77)+K(30,54)*c(54)*c(30);
	coll_evap_2d(54,77) = coll_evap_2d(54,77)+K(31,54)*c(54)*c(31);
	coll_evap_2d(54,14) = coll_evap_2d(54,14)+K(32,54)*c(54)*c(32);
	coll_evap_2d(54,15) = coll_evap_2d(54,15)+K(33,54)*c(54)*c(33);
	coll_evap_2d(54,16) = coll_evap_2d(54,16)+K(34,54)*c(54)*c(34);
	coll_evap_2d(54,17) = coll_evap_2d(54,17)+K(35,54)*c(54)*c(35);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(36,54)*c(54)*c(36);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(36,54)*c(54)*c(36);
	coll_evap_2d(54,20) = coll_evap_2d(54,20)+K(37,54)*c(54)*c(37);
	coll_evap_2d(54,21) = coll_evap_2d(54,21)+K(38,54)*c(54)*c(38);
	coll_evap_2d(54,22) = coll_evap_2d(54,22)+K(39,54)*c(54)*c(39);
	coll_evap_2d(54,23) = coll_evap_2d(54,23)+K(40,54)*c(54)*c(40);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(41,54)*c(54)*c(41);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(41,54)*c(54)*c(41);
	coll_evap_2d(54,26) = coll_evap_2d(54,26)+K(42,54)*c(54)*c(42);
	coll_evap_2d(54,27) = coll_evap_2d(54,27)+K(43,54)*c(54)*c(43);
	coll_evap_2d(54,28) = coll_evap_2d(54,28)+K(44,54)*c(54)*c(44);
	coll_evap_2d(54,29) = coll_evap_2d(54,29)+K(45,54)*c(54)*c(45);
	coll_evap_2d(54,78) = coll_evap_2d(54,78)+K(46,54)*c(54)*c(46);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(46,54)*c(54)*c(46);
	coll_evap_2d(54,31) = coll_evap_2d(54,31)+K(47,54)*c(54)*c(47);
	coll_evap_2d(54,75) = coll_evap_2d(54,75)+K(48,54)*c(54)*c(48);
	coll_evap_2d(54,75) = coll_evap_2d(54,75)+K(49,54)*c(54)*c(49);
	coll_evap_2d(54,13) = coll_evap_2d(54,13)+K(54,68)*c(54)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(55,54) = coll_evap_2d(55,54)+E(1,54)*c(55);
	coll_evap_2d(56,54) = coll_evap_2d(56,54)+E(2,54)*c(56);
	coll_evap_2d(58,54) = coll_evap_2d(58,54)+E(6,54)*c(58);
	coll_evap_2d(59,54) = coll_evap_2d(59,54)+E(7,54)*c(59);
	coll_evap_2d(60,54) = coll_evap_2d(60,54)+E(8,54)*c(60);
	coll_evap_2d(61,54) = coll_evap_2d(61,54)+E(9,54)*c(61);
	coll_evap_2d(62,54) = coll_evap_2d(62,54)+E(13,54)*c(62);
	coll_evap_2d(63,54) = coll_evap_2d(63,54)+E(14,54)*c(63);
	coll_evap_2d(64,54) = coll_evap_2d(64,54)+E(15,54)*c(64);
	coll_evap_2d(65,54) = coll_evap_2d(65,54)+E(20,54)*c(65);
	coll_evap_2d(66,54) = coll_evap_2d(66,54)+E(21,54)*c(66);
	coll_evap_2d(67,54) = coll_evap_2d(67,54)+E(22,54)*c(67);
	% External losses
	coll_evap_2d(54,71) = coll_evap_2d(54,71)+fcs*CS(54)*c(54);

% Cluster 55: 2A2N1P
	% Collisions removing this cluster
	coll_evap_2d(55,56) = coll_evap_2d(55,56)+K(1,55)*c(55)*c(1);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(2,55)*c(55)*c(2);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(2,55)*c(55)*c(2);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(3,55)*c(55)*c(3);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(3,55)*c(55)*c(3);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(4,55)*c(55)*c(4);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(4,55)*c(55)*c(4);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(5,55)*c(55)*c(5);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(5,55)*c(55)*c(5);
	coll_evap_2d(55,59) = coll_evap_2d(55,59)+K(6,55)*c(55)*c(6);
	coll_evap_2d(55,60) = coll_evap_2d(55,60)+K(7,55)*c(55)*c(7);
	coll_evap_2d(55,61) = coll_evap_2d(55,61)+K(8,55)*c(55)*c(8);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(9,55)*c(55)*c(9);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(9,55)*c(55)*c(9);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(10,55)*c(55)*c(10);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(10,55)*c(55)*c(10);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(11,55)*c(55)*c(11);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(11,55)*c(55)*c(11);
	coll_evap_2d(55,62) = coll_evap_2d(55,62)+K(12,55)*c(55)*c(12);
	coll_evap_2d(55,63) = coll_evap_2d(55,63)+K(13,55)*c(55)*c(13);
	coll_evap_2d(55,64) = coll_evap_2d(55,64)+K(14,55)*c(55)*c(14);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(15,55)*c(55)*c(15);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(15,55)*c(55)*c(15);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(16,55)*c(55)*c(16);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(16,55)*c(55)*c(16);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(17,55)*c(55)*c(17);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(17,55)*c(55)*c(17);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(18,55)*c(55)*c(18);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(18,55)*c(55)*c(18);
	coll_evap_2d(55,65) = coll_evap_2d(55,65)+K(19,55)*c(55)*c(19);
	coll_evap_2d(55,66) = coll_evap_2d(55,66)+K(20,55)*c(55)*c(20);
	coll_evap_2d(55,67) = coll_evap_2d(55,67)+K(21,55)*c(55)*c(21);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(22,55)*c(55)*c(22);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(22,55)*c(55)*c(22);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(23,55)*c(55)*c(23);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(23,55)*c(55)*c(23);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(24,55)*c(55)*c(24);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(24,55)*c(55)*c(24);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(25,55)*c(55)*c(25);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(25,55)*c(55)*c(25);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(26,55)*c(55)*c(26);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(26,55)*c(55)*c(26);
	coll_evap_2d(55,77) = coll_evap_2d(55,77)+K(27,55)*c(55)*c(27);
	coll_evap_2d(55,77) = coll_evap_2d(55,77)+K(28,55)*c(55)*c(28);
	coll_evap_2d(55,77) = coll_evap_2d(55,77)+K(29,55)*c(55)*c(29);
	coll_evap_2d(55,77) = coll_evap_2d(55,77)+K(30,55)*c(55)*c(30);
	coll_evap_2d(55,77) = coll_evap_2d(55,77)+K(31,55)*c(55)*c(31);
	coll_evap_2d(55,15) = coll_evap_2d(55,15)+K(32,55)*c(55)*c(32);
	coll_evap_2d(55,16) = coll_evap_2d(55,16)+K(33,55)*c(55)*c(33);
	coll_evap_2d(55,17) = coll_evap_2d(55,17)+K(34,55)*c(55)*c(34);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(35,55)*c(55)*c(35);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(35,55)*c(55)*c(35);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(36,55)*c(55)*c(36);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(36,55)*c(55)*c(36);
	coll_evap_2d(55,21) = coll_evap_2d(55,21)+K(37,55)*c(55)*c(37);
	coll_evap_2d(55,22) = coll_evap_2d(55,22)+K(38,55)*c(55)*c(38);
	coll_evap_2d(55,23) = coll_evap_2d(55,23)+K(39,55)*c(55)*c(39);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(40,55)*c(55)*c(40);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(40,55)*c(55)*c(40);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(41,55)*c(55)*c(41);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(41,55)*c(55)*c(41);
	coll_evap_2d(55,27) = coll_evap_2d(55,27)+K(42,55)*c(55)*c(42);
	coll_evap_2d(55,28) = coll_evap_2d(55,28)+K(43,55)*c(55)*c(43);
	coll_evap_2d(55,29) = coll_evap_2d(55,29)+K(44,55)*c(55)*c(44);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(45,55)*c(55)*c(45);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(45,55)*c(55)*c(45);
	coll_evap_2d(55,78) = coll_evap_2d(55,78)+K(46,55)*c(55)*c(46);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(46,55)*c(55)*c(46);
	coll_evap_2d(55,75) = coll_evap_2d(55,75)+K(47,55)*c(55)*c(47);
	coll_evap_2d(55,75) = coll_evap_2d(55,75)+K(48,55)*c(55)*c(48);
	coll_evap_2d(55,75) = coll_evap_2d(55,75)+K(49,55)*c(55)*c(49);
	coll_evap_2d(55,14) = coll_evap_2d(55,14)+K(55,68)*c(55)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(56,55) = coll_evap_2d(56,55)+E(1,55)*c(56);
	coll_evap_2d(59,55) = coll_evap_2d(59,55)+E(6,55)*c(59);
	coll_evap_2d(60,55) = coll_evap_2d(60,55)+E(7,55)*c(60);
	coll_evap_2d(61,55) = coll_evap_2d(61,55)+E(8,55)*c(61);
	coll_evap_2d(62,55) = coll_evap_2d(62,55)+E(12,55)*c(62);
	coll_evap_2d(63,55) = coll_evap_2d(63,55)+E(13,55)*c(63);
	coll_evap_2d(64,55) = coll_evap_2d(64,55)+E(14,55)*c(64);
	coll_evap_2d(65,55) = coll_evap_2d(65,55)+E(19,55)*c(65);
	coll_evap_2d(66,55) = coll_evap_2d(66,55)+E(20,55)*c(66);
	coll_evap_2d(67,55) = coll_evap_2d(67,55)+E(21,55)*c(67);
	% External losses
	coll_evap_2d(55,71) = coll_evap_2d(55,71)+fcs*CS(55)*c(55);

% Cluster 56: 3A2N1P
	% Collisions removing this cluster
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(1,56)*c(56)*c(1);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(1,56)*c(56)*c(1);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(2,56)*c(56)*c(2);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(2,56)*c(56)*c(2);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(3,56)*c(56)*c(3);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(3,56)*c(56)*c(3);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(4,56)*c(56)*c(4);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(4,56)*c(56)*c(4);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(5,56)*c(56)*c(5);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(5,56)*c(56)*c(5);
	coll_evap_2d(56,60) = coll_evap_2d(56,60)+K(6,56)*c(56)*c(6);
	coll_evap_2d(56,61) = coll_evap_2d(56,61)+K(7,56)*c(56)*c(7);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(8,56)*c(56)*c(8);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(8,56)*c(56)*c(8);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(9,56)*c(56)*c(9);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(9,56)*c(56)*c(9);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(10,56)*c(56)*c(10);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(10,56)*c(56)*c(10);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(11,56)*c(56)*c(11);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(11,56)*c(56)*c(11);
	coll_evap_2d(56,63) = coll_evap_2d(56,63)+K(12,56)*c(56)*c(12);
	coll_evap_2d(56,64) = coll_evap_2d(56,64)+K(13,56)*c(56)*c(13);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(14,56)*c(56)*c(14);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(14,56)*c(56)*c(14);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(15,56)*c(56)*c(15);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(15,56)*c(56)*c(15);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(16,56)*c(56)*c(16);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(16,56)*c(56)*c(16);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(17,56)*c(56)*c(17);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(17,56)*c(56)*c(17);
	coll_evap_2d(56,65) = coll_evap_2d(56,65)+K(18,56)*c(56)*c(18);
	coll_evap_2d(56,66) = coll_evap_2d(56,66)+K(19,56)*c(56)*c(19);
	coll_evap_2d(56,67) = coll_evap_2d(56,67)+K(20,56)*c(56)*c(20);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(21,56)*c(56)*c(21);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(21,56)*c(56)*c(21);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(22,56)*c(56)*c(22);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(22,56)*c(56)*c(22);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(23,56)*c(56)*c(23);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(23,56)*c(56)*c(23);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(24,56)*c(56)*c(24);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(24,56)*c(56)*c(24);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(25,56)*c(56)*c(25);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(25,56)*c(56)*c(25);
	coll_evap_2d(56,77) = coll_evap_2d(56,77)+K(26,56)*c(56)*c(26);
	coll_evap_2d(56,77) = coll_evap_2d(56,77)+K(27,56)*c(56)*c(27);
	coll_evap_2d(56,77) = coll_evap_2d(56,77)+K(28,56)*c(56)*c(28);
	coll_evap_2d(56,77) = coll_evap_2d(56,77)+K(29,56)*c(56)*c(29);
	coll_evap_2d(56,77) = coll_evap_2d(56,77)+K(30,56)*c(56)*c(30);
	coll_evap_2d(56,77) = coll_evap_2d(56,77)+K(31,56)*c(56)*c(31);
	coll_evap_2d(56,16) = coll_evap_2d(56,16)+K(32,56)*c(56)*c(32);
	coll_evap_2d(56,17) = coll_evap_2d(56,17)+K(33,56)*c(56)*c(33);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(34,56)*c(56)*c(34);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(34,56)*c(56)*c(34);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(35,56)*c(56)*c(35);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(35,56)*c(56)*c(35);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(36,56)*c(56)*c(36);
	coll_evap_2d(78,17) = coll_evap_2d(78,17)+K(36,56)*c(56)*c(36);
	coll_evap_2d(56,22) = coll_evap_2d(56,22)+K(37,56)*c(56)*c(37);
	coll_evap_2d(56,23) = coll_evap_2d(56,23)+K(38,56)*c(56)*c(38);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(39,56)*c(56)*c(39);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(39,56)*c(56)*c(39);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(40,56)*c(56)*c(40);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(40,56)*c(56)*c(40);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(41,56)*c(56)*c(41);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(41,56)*c(56)*c(41);
	coll_evap_2d(56,28) = coll_evap_2d(56,28)+K(42,56)*c(56)*c(42);
	coll_evap_2d(56,29) = coll_evap_2d(56,29)+K(43,56)*c(56)*c(43);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(44,56)*c(56)*c(44);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(44,56)*c(56)*c(44);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(45,56)*c(56)*c(45);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(45,56)*c(56)*c(45);
	coll_evap_2d(56,78) = coll_evap_2d(56,78)+K(46,56)*c(56)*c(46);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(46,56)*c(56)*c(46);
	coll_evap_2d(56,75) = coll_evap_2d(56,75)+K(47,56)*c(56)*c(47);
	coll_evap_2d(56,75) = coll_evap_2d(56,75)+K(48,56)*c(56)*c(48);
	coll_evap_2d(56,75) = coll_evap_2d(56,75)+K(49,56)*c(56)*c(49);
	coll_evap_2d(56,15) = coll_evap_2d(56,15)+K(56,68)*c(56)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(60,56) = coll_evap_2d(60,56)+E(6,56)*c(60);
	coll_evap_2d(61,56) = coll_evap_2d(61,56)+E(7,56)*c(61);
	coll_evap_2d(63,56) = coll_evap_2d(63,56)+E(12,56)*c(63);
	coll_evap_2d(64,56) = coll_evap_2d(64,56)+E(13,56)*c(64);
	coll_evap_2d(65,56) = coll_evap_2d(65,56)+E(18,56)*c(65);
	coll_evap_2d(66,56) = coll_evap_2d(66,56)+E(19,56)*c(66);
	coll_evap_2d(67,56) = coll_evap_2d(67,56)+E(20,56)*c(67);
	% External losses
	coll_evap_2d(56,71) = coll_evap_2d(56,71)+fcs*CS(56)*c(56);

% Cluster 57: 3N1P
	% Collisions removing this cluster
	coll_evap_2d(57,58) = coll_evap_2d(57,58)+K(1,57)*c(57)*c(1);
	coll_evap_2d(57,59) = coll_evap_2d(57,59)+K(2,57)*c(57)*c(2);
	coll_evap_2d(57,60) = coll_evap_2d(57,60)+K(3,57)*c(57)*c(3);
	coll_evap_2d(57,61) = coll_evap_2d(57,61)+K(4,57)*c(57)*c(4);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(5,57)*c(57)*c(5);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(5,57)*c(57)*c(5);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(6,57)*c(57)*c(6);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(6,57)*c(57)*c(6);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(7,57)*c(57)*c(7);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(7,57)*c(57)*c(7);
	coll_evap_2d(57,62) = coll_evap_2d(57,62)+K(8,57)*c(57)*c(8);
	coll_evap_2d(57,63) = coll_evap_2d(57,63)+K(9,57)*c(57)*c(9);
	coll_evap_2d(57,64) = coll_evap_2d(57,64)+K(10,57)*c(57)*c(10);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(11,57)*c(57)*c(11);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(11,57)*c(57)*c(11);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(12,57)*c(57)*c(12);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(12,57)*c(57)*c(12);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(13,57)*c(57)*c(13);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(13,57)*c(57)*c(13);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(14,57)*c(57)*c(14);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(14,57)*c(57)*c(14);
	coll_evap_2d(57,65) = coll_evap_2d(57,65)+K(15,57)*c(57)*c(15);
	coll_evap_2d(57,66) = coll_evap_2d(57,66)+K(16,57)*c(57)*c(16);
	coll_evap_2d(57,67) = coll_evap_2d(57,67)+K(17,57)*c(57)*c(17);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(18,57)*c(57)*c(18);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(18,57)*c(57)*c(18);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(19,57)*c(57)*c(19);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(19,57)*c(57)*c(19);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(20,57)*c(57)*c(20);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(20,57)*c(57)*c(20);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(21,57)*c(57)*c(21);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(21,57)*c(57)*c(21);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(22,57)*c(57)*c(22);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(22,57)*c(57)*c(22);
	coll_evap_2d(57,77) = coll_evap_2d(57,77)+K(23,57)*c(57)*c(23);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(24,57)*c(57)*c(24);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(24,57)*c(57)*c(24);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(25,57)*c(57)*c(25);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(25,57)*c(57)*c(25);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(26,57)*c(57)*c(26);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(26,57)*c(57)*c(26);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(27,57)*c(57)*c(27);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(27,57)*c(57)*c(27);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(28,57)*c(57)*c(28);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(28,57)*c(57)*c(28);
	coll_evap_2d(57,77) = coll_evap_2d(57,77)+K(29,57)*c(57)*c(29);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(30,57)*c(57)*c(30);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(30,57)*c(57)*c(30);
	coll_evap_2d(57,77) = coll_evap_2d(57,77)+K(31,57)*c(57)*c(31);
	coll_evap_2d(57,19) = coll_evap_2d(57,19)+K(32,57)*c(57)*c(32);
	coll_evap_2d(57,20) = coll_evap_2d(57,20)+K(33,57)*c(57)*c(33);
	coll_evap_2d(57,21) = coll_evap_2d(57,21)+K(34,57)*c(57)*c(34);
	coll_evap_2d(57,22) = coll_evap_2d(57,22)+K(35,57)*c(57)*c(35);
	coll_evap_2d(57,23) = coll_evap_2d(57,23)+K(36,57)*c(57)*c(36);
	coll_evap_2d(57,25) = coll_evap_2d(57,25)+K(37,57)*c(57)*c(37);
	coll_evap_2d(57,26) = coll_evap_2d(57,26)+K(38,57)*c(57)*c(38);
	coll_evap_2d(57,27) = coll_evap_2d(57,27)+K(39,57)*c(57)*c(39);
	coll_evap_2d(57,28) = coll_evap_2d(57,28)+K(40,57)*c(57)*c(40);
	coll_evap_2d(57,29) = coll_evap_2d(57,29)+K(41,57)*c(57)*c(41);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(42,57)*c(57)*c(42);
	coll_evap_2d(78,25) = coll_evap_2d(78,25)+K(42,57)*c(57)*c(42);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(43,57)*c(57)*c(43);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(43,57)*c(57)*c(43);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(44,57)*c(57)*c(44);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(44,57)*c(57)*c(44);
	coll_evap_2d(57,30) = coll_evap_2d(57,30)+K(45,57)*c(57)*c(45);
	coll_evap_2d(57,31) = coll_evap_2d(57,31)+K(46,57)*c(57)*c(46);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(47,57)*c(57)*c(47);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(47,57)*c(57)*c(47);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(48,57)*c(57)*c(48);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(48,57)*c(57)*c(48);
	coll_evap_2d(57,78) = coll_evap_2d(57,78)+K(49,57)*c(57)*c(49);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(49,57)*c(57)*c(49);
	coll_evap_2d(57,18) = coll_evap_2d(57,18)+K(57,68)*c(57)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(58,57) = coll_evap_2d(58,57)+E(1,57)*c(58);
	coll_evap_2d(59,57) = coll_evap_2d(59,57)+E(2,57)*c(59);
	coll_evap_2d(60,57) = coll_evap_2d(60,57)+E(3,57)*c(60);
	coll_evap_2d(61,57) = coll_evap_2d(61,57)+E(4,57)*c(61);
	coll_evap_2d(62,57) = coll_evap_2d(62,57)+E(8,57)*c(62);
	coll_evap_2d(63,57) = coll_evap_2d(63,57)+E(9,57)*c(63);
	coll_evap_2d(64,57) = coll_evap_2d(64,57)+E(10,57)*c(64);
	coll_evap_2d(65,57) = coll_evap_2d(65,57)+E(15,57)*c(65);
	coll_evap_2d(66,57) = coll_evap_2d(66,57)+E(16,57)*c(66);
	coll_evap_2d(67,57) = coll_evap_2d(67,57)+E(17,57)*c(67);
	% External losses
	coll_evap_2d(57,71) = coll_evap_2d(57,71)+fcs*CS(57)*c(57);

% Cluster 58: 1A3N1P
	% Collisions removing this cluster
	coll_evap_2d(58,59) = coll_evap_2d(58,59)+K(1,58)*c(58)*c(1);
	coll_evap_2d(58,60) = coll_evap_2d(58,60)+K(2,58)*c(58)*c(2);
	coll_evap_2d(58,61) = coll_evap_2d(58,61)+K(3,58)*c(58)*c(3);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(4,58)*c(58)*c(4);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(4,58)*c(58)*c(4);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(5,58)*c(58)*c(5);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(5,58)*c(58)*c(5);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(6,58)*c(58)*c(6);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(6,58)*c(58)*c(6);
	coll_evap_2d(58,62) = coll_evap_2d(58,62)+K(7,58)*c(58)*c(7);
	coll_evap_2d(58,63) = coll_evap_2d(58,63)+K(8,58)*c(58)*c(8);
	coll_evap_2d(58,64) = coll_evap_2d(58,64)+K(9,58)*c(58)*c(9);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(10,58)*c(58)*c(10);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(10,58)*c(58)*c(10);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(11,58)*c(58)*c(11);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(11,58)*c(58)*c(11);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(12,58)*c(58)*c(12);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(12,58)*c(58)*c(12);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(13,58)*c(58)*c(13);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(13,58)*c(58)*c(13);
	coll_evap_2d(58,65) = coll_evap_2d(58,65)+K(14,58)*c(58)*c(14);
	coll_evap_2d(58,66) = coll_evap_2d(58,66)+K(15,58)*c(58)*c(15);
	coll_evap_2d(58,67) = coll_evap_2d(58,67)+K(16,58)*c(58)*c(16);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(17,58)*c(58)*c(17);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(17,58)*c(58)*c(17);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(18,58)*c(58)*c(18);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(18,58)*c(58)*c(18);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(19,58)*c(58)*c(19);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(19,58)*c(58)*c(19);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(20,58)*c(58)*c(20);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(20,58)*c(58)*c(20);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(21,58)*c(58)*c(21);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(21,58)*c(58)*c(21);
	coll_evap_2d(58,77) = coll_evap_2d(58,77)+K(22,58)*c(58)*c(22);
	coll_evap_2d(58,77) = coll_evap_2d(58,77)+K(23,58)*c(58)*c(23);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(24,58)*c(58)*c(24);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(24,58)*c(58)*c(24);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(25,58)*c(58)*c(25);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(25,58)*c(58)*c(25);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(26,58)*c(58)*c(26);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(26,58)*c(58)*c(26);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(27,58)*c(58)*c(27);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(27,58)*c(58)*c(27);
	coll_evap_2d(58,77) = coll_evap_2d(58,77)+K(28,58)*c(58)*c(28);
	coll_evap_2d(58,77) = coll_evap_2d(58,77)+K(29,58)*c(58)*c(29);
	coll_evap_2d(58,77) = coll_evap_2d(58,77)+K(30,58)*c(58)*c(30);
	coll_evap_2d(58,77) = coll_evap_2d(58,77)+K(31,58)*c(58)*c(31);
	coll_evap_2d(58,20) = coll_evap_2d(58,20)+K(32,58)*c(58)*c(32);
	coll_evap_2d(58,21) = coll_evap_2d(58,21)+K(33,58)*c(58)*c(33);
	coll_evap_2d(58,22) = coll_evap_2d(58,22)+K(34,58)*c(58)*c(34);
	coll_evap_2d(58,23) = coll_evap_2d(58,23)+K(35,58)*c(58)*c(35);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(36,58)*c(58)*c(36);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(36,58)*c(58)*c(36);
	coll_evap_2d(58,26) = coll_evap_2d(58,26)+K(37,58)*c(58)*c(37);
	coll_evap_2d(58,27) = coll_evap_2d(58,27)+K(38,58)*c(58)*c(38);
	coll_evap_2d(58,28) = coll_evap_2d(58,28)+K(39,58)*c(58)*c(39);
	coll_evap_2d(58,29) = coll_evap_2d(58,29)+K(40,58)*c(58)*c(40);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(41,58)*c(58)*c(41);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(41,58)*c(58)*c(41);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(42,58)*c(58)*c(42);
	coll_evap_2d(78,26) = coll_evap_2d(78,26)+K(42,58)*c(58)*c(42);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(43,58)*c(58)*c(43);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(43,58)*c(58)*c(43);
	coll_evap_2d(58,30) = coll_evap_2d(58,30)+K(44,58)*c(58)*c(44);
	coll_evap_2d(58,31) = coll_evap_2d(58,31)+K(45,58)*c(58)*c(45);
	coll_evap_2d(58,75) = coll_evap_2d(58,75)+K(46,58)*c(58)*c(46);
	coll_evap_2d(58,78) = coll_evap_2d(58,78)+K(47,58)*c(58)*c(47);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(47,58)*c(58)*c(47);
	coll_evap_2d(58,75) = coll_evap_2d(58,75)+K(48,58)*c(58)*c(48);
	coll_evap_2d(58,75) = coll_evap_2d(58,75)+K(49,58)*c(58)*c(49);
	coll_evap_2d(58,19) = coll_evap_2d(58,19)+K(58,68)*c(58)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(59,58) = coll_evap_2d(59,58)+E(1,58)*c(59);
	coll_evap_2d(60,58) = coll_evap_2d(60,58)+E(2,58)*c(60);
	coll_evap_2d(61,58) = coll_evap_2d(61,58)+E(3,58)*c(61);
	coll_evap_2d(62,58) = coll_evap_2d(62,58)+E(7,58)*c(62);
	coll_evap_2d(63,58) = coll_evap_2d(63,58)+E(8,58)*c(63);
	coll_evap_2d(64,58) = coll_evap_2d(64,58)+E(9,58)*c(64);
	coll_evap_2d(65,58) = coll_evap_2d(65,58)+E(14,58)*c(65);
	coll_evap_2d(66,58) = coll_evap_2d(66,58)+E(15,58)*c(66);
	coll_evap_2d(67,58) = coll_evap_2d(67,58)+E(16,58)*c(67);
	% External losses
	coll_evap_2d(58,71) = coll_evap_2d(58,71)+fcs*CS(58)*c(58);

% Cluster 59: 2A3N1P
	% Collisions removing this cluster
	coll_evap_2d(59,60) = coll_evap_2d(59,60)+K(1,59)*c(59)*c(1);
	coll_evap_2d(59,61) = coll_evap_2d(59,61)+K(2,59)*c(59)*c(2);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(3,59)*c(59)*c(3);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(3,59)*c(59)*c(3);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(4,59)*c(59)*c(4);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(4,59)*c(59)*c(4);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(5,59)*c(59)*c(5);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(5,59)*c(59)*c(5);
	coll_evap_2d(59,62) = coll_evap_2d(59,62)+K(6,59)*c(59)*c(6);
	coll_evap_2d(59,63) = coll_evap_2d(59,63)+K(7,59)*c(59)*c(7);
	coll_evap_2d(59,64) = coll_evap_2d(59,64)+K(8,59)*c(59)*c(8);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(9,59)*c(59)*c(9);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(9,59)*c(59)*c(9);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(10,59)*c(59)*c(10);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(10,59)*c(59)*c(10);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(11,59)*c(59)*c(11);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(11,59)*c(59)*c(11);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(12,59)*c(59)*c(12);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(12,59)*c(59)*c(12);
	coll_evap_2d(59,65) = coll_evap_2d(59,65)+K(13,59)*c(59)*c(13);
	coll_evap_2d(59,66) = coll_evap_2d(59,66)+K(14,59)*c(59)*c(14);
	coll_evap_2d(59,67) = coll_evap_2d(59,67)+K(15,59)*c(59)*c(15);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(16,59)*c(59)*c(16);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(16,59)*c(59)*c(16);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(17,59)*c(59)*c(17);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(17,59)*c(59)*c(17);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(18,59)*c(59)*c(18);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(18,59)*c(59)*c(18);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(19,59)*c(59)*c(19);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(19,59)*c(59)*c(19);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(20,59)*c(59)*c(20);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(20,59)*c(59)*c(20);
	coll_evap_2d(59,77) = coll_evap_2d(59,77)+K(21,59)*c(59)*c(21);
	coll_evap_2d(59,77) = coll_evap_2d(59,77)+K(22,59)*c(59)*c(22);
	coll_evap_2d(59,77) = coll_evap_2d(59,77)+K(23,59)*c(59)*c(23);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(24,59)*c(59)*c(24);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(24,59)*c(59)*c(24);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(25,59)*c(59)*c(25);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(25,59)*c(59)*c(25);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(26,59)*c(59)*c(26);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(26,59)*c(59)*c(26);
	coll_evap_2d(59,77) = coll_evap_2d(59,77)+K(27,59)*c(59)*c(27);
	coll_evap_2d(59,77) = coll_evap_2d(59,77)+K(28,59)*c(59)*c(28);
	coll_evap_2d(59,77) = coll_evap_2d(59,77)+K(29,59)*c(59)*c(29);
	coll_evap_2d(59,77) = coll_evap_2d(59,77)+K(30,59)*c(59)*c(30);
	coll_evap_2d(59,77) = coll_evap_2d(59,77)+K(31,59)*c(59)*c(31);
	coll_evap_2d(59,21) = coll_evap_2d(59,21)+K(32,59)*c(59)*c(32);
	coll_evap_2d(59,22) = coll_evap_2d(59,22)+K(33,59)*c(59)*c(33);
	coll_evap_2d(59,23) = coll_evap_2d(59,23)+K(34,59)*c(59)*c(34);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(35,59)*c(59)*c(35);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(35,59)*c(59)*c(35);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(36,59)*c(59)*c(36);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(36,59)*c(59)*c(36);
	coll_evap_2d(59,27) = coll_evap_2d(59,27)+K(37,59)*c(59)*c(37);
	coll_evap_2d(59,28) = coll_evap_2d(59,28)+K(38,59)*c(59)*c(38);
	coll_evap_2d(59,29) = coll_evap_2d(59,29)+K(39,59)*c(59)*c(39);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(40,59)*c(59)*c(40);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(40,59)*c(59)*c(40);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(41,59)*c(59)*c(41);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(41,59)*c(59)*c(41);
	coll_evap_2d(59,78) = coll_evap_2d(59,78)+K(42,59)*c(59)*c(42);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(42,59)*c(59)*c(42);
	coll_evap_2d(59,30) = coll_evap_2d(59,30)+K(43,59)*c(59)*c(43);
	coll_evap_2d(59,31) = coll_evap_2d(59,31)+K(44,59)*c(59)*c(44);
	coll_evap_2d(59,75) = coll_evap_2d(59,75)+K(45,59)*c(59)*c(45);
	coll_evap_2d(59,75) = coll_evap_2d(59,75)+K(46,59)*c(59)*c(46);
	coll_evap_2d(59,75) = coll_evap_2d(59,75)+K(47,59)*c(59)*c(47);
	coll_evap_2d(59,75) = coll_evap_2d(59,75)+K(48,59)*c(59)*c(48);
	coll_evap_2d(59,75) = coll_evap_2d(59,75)+K(49,59)*c(59)*c(49);
	coll_evap_2d(59,20) = coll_evap_2d(59,20)+K(59,68)*c(59)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(60,59) = coll_evap_2d(60,59)+E(1,59)*c(60);
	coll_evap_2d(61,59) = coll_evap_2d(61,59)+E(2,59)*c(61);
	coll_evap_2d(62,59) = coll_evap_2d(62,59)+E(6,59)*c(62);
	coll_evap_2d(63,59) = coll_evap_2d(63,59)+E(7,59)*c(63);
	coll_evap_2d(64,59) = coll_evap_2d(64,59)+E(8,59)*c(64);
	coll_evap_2d(65,59) = coll_evap_2d(65,59)+E(13,59)*c(65);
	coll_evap_2d(66,59) = coll_evap_2d(66,59)+E(14,59)*c(66);
	coll_evap_2d(67,59) = coll_evap_2d(67,59)+E(15,59)*c(67);
	% External losses
	coll_evap_2d(59,71) = coll_evap_2d(59,71)+fcs*CS(59)*c(59);

% Cluster 60: 3A3N1P
	% Collisions removing this cluster
	coll_evap_2d(60,61) = coll_evap_2d(60,61)+K(1,60)*c(60)*c(1);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(2,60)*c(60)*c(2);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(2,60)*c(60)*c(2);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(3,60)*c(60)*c(3);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(3,60)*c(60)*c(3);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(4,60)*c(60)*c(4);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(4,60)*c(60)*c(4);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(5,60)*c(60)*c(5);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(5,60)*c(60)*c(5);
	coll_evap_2d(60,63) = coll_evap_2d(60,63)+K(6,60)*c(60)*c(6);
	coll_evap_2d(60,64) = coll_evap_2d(60,64)+K(7,60)*c(60)*c(7);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(8,60)*c(60)*c(8);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(8,60)*c(60)*c(8);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(9,60)*c(60)*c(9);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(9,60)*c(60)*c(9);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(10,60)*c(60)*c(10);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(10,60)*c(60)*c(10);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(11,60)*c(60)*c(11);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(11,60)*c(60)*c(11);
	coll_evap_2d(60,65) = coll_evap_2d(60,65)+K(12,60)*c(60)*c(12);
	coll_evap_2d(60,66) = coll_evap_2d(60,66)+K(13,60)*c(60)*c(13);
	coll_evap_2d(60,67) = coll_evap_2d(60,67)+K(14,60)*c(60)*c(14);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(15,60)*c(60)*c(15);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(15,60)*c(60)*c(15);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(16,60)*c(60)*c(16);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(16,60)*c(60)*c(16);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(17,60)*c(60)*c(17);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(17,60)*c(60)*c(17);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(18,60)*c(60)*c(18);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(18,60)*c(60)*c(18);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(19,60)*c(60)*c(19);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(19,60)*c(60)*c(19);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(20,60)*c(60)*c(20);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(21,60)*c(60)*c(21);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(22,60)*c(60)*c(22);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(23,60)*c(60)*c(23);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(24,60)*c(60)*c(24);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(24,60)*c(60)*c(24);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(25,60)*c(60)*c(25);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(25,60)*c(60)*c(25);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(26,60)*c(60)*c(26);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(27,60)*c(60)*c(27);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(28,60)*c(60)*c(28);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(29,60)*c(60)*c(29);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(30,60)*c(60)*c(30);
	coll_evap_2d(60,77) = coll_evap_2d(60,77)+K(31,60)*c(60)*c(31);
	coll_evap_2d(60,22) = coll_evap_2d(60,22)+K(32,60)*c(60)*c(32);
	coll_evap_2d(60,23) = coll_evap_2d(60,23)+K(33,60)*c(60)*c(33);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(34,60)*c(60)*c(34);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(34,60)*c(60)*c(34);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(35,60)*c(60)*c(35);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(35,60)*c(60)*c(35);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(36,60)*c(60)*c(36);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(36,60)*c(60)*c(36);
	coll_evap_2d(60,28) = coll_evap_2d(60,28)+K(37,60)*c(60)*c(37);
	coll_evap_2d(60,29) = coll_evap_2d(60,29)+K(38,60)*c(60)*c(38);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(39,60)*c(60)*c(39);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(39,60)*c(60)*c(39);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(40,60)*c(60)*c(40);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(40,60)*c(60)*c(40);
	coll_evap_2d(60,78) = coll_evap_2d(60,78)+K(41,60)*c(60)*c(41);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(41,60)*c(60)*c(41);
	coll_evap_2d(60,30) = coll_evap_2d(60,30)+K(42,60)*c(60)*c(42);
	coll_evap_2d(60,31) = coll_evap_2d(60,31)+K(43,60)*c(60)*c(43);
	coll_evap_2d(60,75) = coll_evap_2d(60,75)+K(44,60)*c(60)*c(44);
	coll_evap_2d(60,75) = coll_evap_2d(60,75)+K(45,60)*c(60)*c(45);
	coll_evap_2d(60,75) = coll_evap_2d(60,75)+K(46,60)*c(60)*c(46);
	coll_evap_2d(60,75) = coll_evap_2d(60,75)+K(47,60)*c(60)*c(47);
	coll_evap_2d(60,75) = coll_evap_2d(60,75)+K(48,60)*c(60)*c(48);
	coll_evap_2d(60,75) = coll_evap_2d(60,75)+K(49,60)*c(60)*c(49);
	coll_evap_2d(60,21) = coll_evap_2d(60,21)+K(60,68)*c(60)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(61,60) = coll_evap_2d(61,60)+E(1,60)*c(61);
	coll_evap_2d(63,60) = coll_evap_2d(63,60)+E(6,60)*c(63);
	coll_evap_2d(64,60) = coll_evap_2d(64,60)+E(7,60)*c(64);
	coll_evap_2d(65,60) = coll_evap_2d(65,60)+E(12,60)*c(65);
	coll_evap_2d(66,60) = coll_evap_2d(66,60)+E(13,60)*c(66);
	coll_evap_2d(67,60) = coll_evap_2d(67,60)+E(14,60)*c(67);
	% External losses
	coll_evap_2d(60,71) = coll_evap_2d(60,71)+fcs*CS(60)*c(60);

% Cluster 61: 4A3N1P
	% Collisions removing this cluster
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(1,61)*c(61)*c(1);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(1,61)*c(61)*c(1);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(2,61)*c(61)*c(2);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(2,61)*c(61)*c(2);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(3,61)*c(61)*c(3);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(3,61)*c(61)*c(3);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(4,61)*c(61)*c(4);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(4,61)*c(61)*c(4);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(5,61)*c(61)*c(5);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(5,61)*c(61)*c(5);
	coll_evap_2d(61,64) = coll_evap_2d(61,64)+K(6,61)*c(61)*c(6);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(7,61)*c(61)*c(7);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(7,61)*c(61)*c(7);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(8,61)*c(61)*c(8);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(8,61)*c(61)*c(8);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(9,61)*c(61)*c(9);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(9,61)*c(61)*c(9);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(10,61)*c(61)*c(10);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(10,61)*c(61)*c(10);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(11,61)*c(61)*c(11);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(11,61)*c(61)*c(11);
	coll_evap_2d(61,66) = coll_evap_2d(61,66)+K(12,61)*c(61)*c(12);
	coll_evap_2d(61,67) = coll_evap_2d(61,67)+K(13,61)*c(61)*c(13);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(14,61)*c(61)*c(14);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(14,61)*c(61)*c(14);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(15,61)*c(61)*c(15);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(15,61)*c(61)*c(15);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(16,61)*c(61)*c(16);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(16,61)*c(61)*c(16);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(17,61)*c(61)*c(17);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(17,61)*c(61)*c(17);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(18,61)*c(61)*c(18);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(18,61)*c(61)*c(18);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(19,61)*c(61)*c(19);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(20,61)*c(61)*c(20);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(21,61)*c(61)*c(21);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(22,61)*c(61)*c(22);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(23,61)*c(61)*c(23);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(24,61)*c(61)*c(24);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(24,61)*c(61)*c(24);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(25,61)*c(61)*c(25);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(26,61)*c(61)*c(26);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(27,61)*c(61)*c(27);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(28,61)*c(61)*c(28);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(29,61)*c(61)*c(29);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(30,61)*c(61)*c(30);
	coll_evap_2d(61,77) = coll_evap_2d(61,77)+K(31,61)*c(61)*c(31);
	coll_evap_2d(61,23) = coll_evap_2d(61,23)+K(32,61)*c(61)*c(32);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(33,61)*c(61)*c(33);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(33,61)*c(61)*c(33);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(34,61)*c(61)*c(34);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(34,61)*c(61)*c(34);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(35,61)*c(61)*c(35);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(35,61)*c(61)*c(35);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(36,61)*c(61)*c(36);
	coll_evap_2d(78,23) = coll_evap_2d(78,23)+K(36,61)*c(61)*c(36);
	coll_evap_2d(61,29) = coll_evap_2d(61,29)+K(37,61)*c(61)*c(37);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(38,61)*c(61)*c(38);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(38,61)*c(61)*c(38);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(39,61)*c(61)*c(39);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(39,61)*c(61)*c(39);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(40,61)*c(61)*c(40);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(40,61)*c(61)*c(40);
	coll_evap_2d(61,78) = coll_evap_2d(61,78)+K(41,61)*c(61)*c(41);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(41,61)*c(61)*c(41);
	coll_evap_2d(61,31) = coll_evap_2d(61,31)+K(42,61)*c(61)*c(42);
	coll_evap_2d(61,75) = coll_evap_2d(61,75)+K(43,61)*c(61)*c(43);
	coll_evap_2d(61,75) = coll_evap_2d(61,75)+K(44,61)*c(61)*c(44);
	coll_evap_2d(61,75) = coll_evap_2d(61,75)+K(45,61)*c(61)*c(45);
	coll_evap_2d(61,75) = coll_evap_2d(61,75)+K(46,61)*c(61)*c(46);
	coll_evap_2d(61,75) = coll_evap_2d(61,75)+K(47,61)*c(61)*c(47);
	coll_evap_2d(61,75) = coll_evap_2d(61,75)+K(48,61)*c(61)*c(48);
	coll_evap_2d(61,75) = coll_evap_2d(61,75)+K(49,61)*c(61)*c(49);
	coll_evap_2d(61,22) = coll_evap_2d(61,22)+K(61,68)*c(61)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(64,61) = coll_evap_2d(64,61)+E(6,61)*c(64);
	coll_evap_2d(66,61) = coll_evap_2d(66,61)+E(12,61)*c(66);
	coll_evap_2d(67,61) = coll_evap_2d(67,61)+E(13,61)*c(67);
	% External losses
	coll_evap_2d(61,71) = coll_evap_2d(61,71)+fcs*CS(61)*c(61);

% Cluster 62: 2A4N1P
	% Collisions removing this cluster
	coll_evap_2d(62,63) = coll_evap_2d(62,63)+K(1,62)*c(62)*c(1);
	coll_evap_2d(62,64) = coll_evap_2d(62,64)+K(2,62)*c(62)*c(2);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(3,62)*c(62)*c(3);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(3,62)*c(62)*c(3);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(4,62)*c(62)*c(4);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(4,62)*c(62)*c(4);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(5,62)*c(62)*c(5);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(5,62)*c(62)*c(5);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(6,62)*c(62)*c(6);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(6,62)*c(62)*c(6);
	coll_evap_2d(62,65) = coll_evap_2d(62,65)+K(7,62)*c(62)*c(7);
	coll_evap_2d(62,66) = coll_evap_2d(62,66)+K(8,62)*c(62)*c(8);
	coll_evap_2d(62,67) = coll_evap_2d(62,67)+K(9,62)*c(62)*c(9);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(10,62)*c(62)*c(10);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(10,62)*c(62)*c(10);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(11,62)*c(62)*c(11);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(11,62)*c(62)*c(11);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(12,62)*c(62)*c(12);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(12,62)*c(62)*c(12);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(13,62)*c(62)*c(13);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(13,62)*c(62)*c(13);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(14,62)*c(62)*c(14);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(14,62)*c(62)*c(14);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(15,62)*c(62)*c(15);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(16,62)*c(62)*c(16);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(17,62)*c(62)*c(17);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(18,62)*c(62)*c(18);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(18,62)*c(62)*c(18);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(19,62)*c(62)*c(19);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(19,62)*c(62)*c(19);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(20,62)*c(62)*c(20);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(20,62)*c(62)*c(20);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(21,62)*c(62)*c(21);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(22,62)*c(62)*c(22);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(23,62)*c(62)*c(23);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(24,62)*c(62)*c(24);
	coll_evap_2d(78,62) = coll_evap_2d(78,62)+K(24,62)*c(62)*c(24);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(25,62)*c(62)*c(25);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(25,62)*c(62)*c(25);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(26,62)*c(62)*c(26);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(26,62)*c(62)*c(26);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(27,62)*c(62)*c(27);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(28,62)*c(62)*c(28);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(29,62)*c(62)*c(29);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(30,62)*c(62)*c(30);
	coll_evap_2d(62,77) = coll_evap_2d(62,77)+K(31,62)*c(62)*c(31);
	coll_evap_2d(62,27) = coll_evap_2d(62,27)+K(32,62)*c(62)*c(32);
	coll_evap_2d(62,28) = coll_evap_2d(62,28)+K(33,62)*c(62)*c(33);
	coll_evap_2d(62,29) = coll_evap_2d(62,29)+K(34,62)*c(62)*c(34);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(35,62)*c(62)*c(35);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(35,62)*c(62)*c(35);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(36,62)*c(62)*c(36);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(36,62)*c(62)*c(36);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(37,62)*c(62)*c(37);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(37,62)*c(62)*c(37);
	coll_evap_2d(62,30) = coll_evap_2d(62,30)+K(38,62)*c(62)*c(38);
	coll_evap_2d(62,31) = coll_evap_2d(62,31)+K(39,62)*c(62)*c(39);
	coll_evap_2d(62,75) = coll_evap_2d(62,75)+K(40,62)*c(62)*c(40);
	coll_evap_2d(62,75) = coll_evap_2d(62,75)+K(41,62)*c(62)*c(41);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(42,62)*c(62)*c(42);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(42,62)*c(62)*c(42);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(43,62)*c(62)*c(43);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(43,62)*c(62)*c(43);
	coll_evap_2d(62,78) = coll_evap_2d(62,78)+K(44,62)*c(62)*c(44);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(44,62)*c(62)*c(44);
	coll_evap_2d(62,75) = coll_evap_2d(62,75)+K(45,62)*c(62)*c(45);
	coll_evap_2d(62,75) = coll_evap_2d(62,75)+K(46,62)*c(62)*c(46);
	coll_evap_2d(62,75) = coll_evap_2d(62,75)+K(47,62)*c(62)*c(47);
	coll_evap_2d(62,75) = coll_evap_2d(62,75)+K(48,62)*c(62)*c(48);
	coll_evap_2d(62,75) = coll_evap_2d(62,75)+K(49,62)*c(62)*c(49);
	coll_evap_2d(62,26) = coll_evap_2d(62,26)+K(62,68)*c(62)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(63,62) = coll_evap_2d(63,62)+E(1,62)*c(63);
	coll_evap_2d(64,62) = coll_evap_2d(64,62)+E(2,62)*c(64);
	coll_evap_2d(65,62) = coll_evap_2d(65,62)+E(7,62)*c(65);
	coll_evap_2d(66,62) = coll_evap_2d(66,62)+E(8,62)*c(66);
	coll_evap_2d(67,62) = coll_evap_2d(67,62)+E(9,62)*c(67);
	% External losses
	coll_evap_2d(62,71) = coll_evap_2d(62,71)+fcs*CS(62)*c(62);

% Cluster 63: 3A4N1P
	% Collisions removing this cluster
	coll_evap_2d(63,64) = coll_evap_2d(63,64)+K(1,63)*c(63)*c(1);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(2,63)*c(63)*c(2);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(2,63)*c(63)*c(2);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(3,63)*c(63)*c(3);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(3,63)*c(63)*c(3);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(4,63)*c(63)*c(4);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(4,63)*c(63)*c(4);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(5,63)*c(63)*c(5);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(5,63)*c(63)*c(5);
	coll_evap_2d(63,65) = coll_evap_2d(63,65)+K(6,63)*c(63)*c(6);
	coll_evap_2d(63,66) = coll_evap_2d(63,66)+K(7,63)*c(63)*c(7);
	coll_evap_2d(63,67) = coll_evap_2d(63,67)+K(8,63)*c(63)*c(8);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(9,63)*c(63)*c(9);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(9,63)*c(63)*c(9);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(10,63)*c(63)*c(10);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(10,63)*c(63)*c(10);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(11,63)*c(63)*c(11);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(11,63)*c(63)*c(11);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(12,63)*c(63)*c(12);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(12,63)*c(63)*c(12);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(13,63)*c(63)*c(13);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(13,63)*c(63)*c(13);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(14,63)*c(63)*c(14);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(15,63)*c(63)*c(15);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(16,63)*c(63)*c(16);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(17,63)*c(63)*c(17);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(18,63)*c(63)*c(18);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(18,63)*c(63)*c(18);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(19,63)*c(63)*c(19);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(19,63)*c(63)*c(19);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(20,63)*c(63)*c(20);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(21,63)*c(63)*c(21);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(22,63)*c(63)*c(22);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(23,63)*c(63)*c(23);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(24,63)*c(63)*c(24);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(24,63)*c(63)*c(24);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(25,63)*c(63)*c(25);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(25,63)*c(63)*c(25);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(26,63)*c(63)*c(26);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(27,63)*c(63)*c(27);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(28,63)*c(63)*c(28);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(29,63)*c(63)*c(29);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(30,63)*c(63)*c(30);
	coll_evap_2d(63,77) = coll_evap_2d(63,77)+K(31,63)*c(63)*c(31);
	coll_evap_2d(63,28) = coll_evap_2d(63,28)+K(32,63)*c(63)*c(32);
	coll_evap_2d(63,29) = coll_evap_2d(63,29)+K(33,63)*c(63)*c(33);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(34,63)*c(63)*c(34);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(34,63)*c(63)*c(34);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(35,63)*c(63)*c(35);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(35,63)*c(63)*c(35);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(36,63)*c(63)*c(36);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(36,63)*c(63)*c(36);
	coll_evap_2d(63,30) = coll_evap_2d(63,30)+K(37,63)*c(63)*c(37);
	coll_evap_2d(63,31) = coll_evap_2d(63,31)+K(38,63)*c(63)*c(38);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(39,63)*c(63)*c(39);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(40,63)*c(63)*c(40);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(41,63)*c(63)*c(41);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(42,63)*c(63)*c(42);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(42,63)*c(63)*c(42);
	coll_evap_2d(63,78) = coll_evap_2d(63,78)+K(43,63)*c(63)*c(43);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(43,63)*c(63)*c(43);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(44,63)*c(63)*c(44);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(45,63)*c(63)*c(45);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(46,63)*c(63)*c(46);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(47,63)*c(63)*c(47);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(48,63)*c(63)*c(48);
	coll_evap_2d(63,75) = coll_evap_2d(63,75)+K(49,63)*c(63)*c(49);
	coll_evap_2d(63,27) = coll_evap_2d(63,27)+K(63,68)*c(63)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(64,63) = coll_evap_2d(64,63)+E(1,63)*c(64);
	coll_evap_2d(65,63) = coll_evap_2d(65,63)+E(6,63)*c(65);
	coll_evap_2d(66,63) = coll_evap_2d(66,63)+E(7,63)*c(66);
	coll_evap_2d(67,63) = coll_evap_2d(67,63)+E(8,63)*c(67);
	% External losses
	coll_evap_2d(63,71) = coll_evap_2d(63,71)+fcs*CS(63)*c(63);

% Cluster 64: 4A4N1P
	% Collisions removing this cluster
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(1,64)*c(64)*c(1);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(1,64)*c(64)*c(1);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(2,64)*c(64)*c(2);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(2,64)*c(64)*c(2);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(3,64)*c(64)*c(3);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(3,64)*c(64)*c(3);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(4,64)*c(64)*c(4);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(4,64)*c(64)*c(4);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(5,64)*c(64)*c(5);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(5,64)*c(64)*c(5);
	coll_evap_2d(64,66) = coll_evap_2d(64,66)+K(6,64)*c(64)*c(6);
	coll_evap_2d(64,67) = coll_evap_2d(64,67)+K(7,64)*c(64)*c(7);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(8,64)*c(64)*c(8);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(8,64)*c(64)*c(8);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(9,64)*c(64)*c(9);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(9,64)*c(64)*c(9);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(10,64)*c(64)*c(10);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(10,64)*c(64)*c(10);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(11,64)*c(64)*c(11);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(11,64)*c(64)*c(11);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(12,64)*c(64)*c(12);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(12,64)*c(64)*c(12);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(13,64)*c(64)*c(13);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(14,64)*c(64)*c(14);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(15,64)*c(64)*c(15);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(16,64)*c(64)*c(16);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(17,64)*c(64)*c(17);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(18,64)*c(64)*c(18);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(18,64)*c(64)*c(18);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(19,64)*c(64)*c(19);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(20,64)*c(64)*c(20);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(21,64)*c(64)*c(21);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(22,64)*c(64)*c(22);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(23,64)*c(64)*c(23);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(24,64)*c(64)*c(24);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(24,64)*c(64)*c(24);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(25,64)*c(64)*c(25);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(26,64)*c(64)*c(26);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(27,64)*c(64)*c(27);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(28,64)*c(64)*c(28);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(29,64)*c(64)*c(29);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(30,64)*c(64)*c(30);
	coll_evap_2d(64,77) = coll_evap_2d(64,77)+K(31,64)*c(64)*c(31);
	coll_evap_2d(64,29) = coll_evap_2d(64,29)+K(32,64)*c(64)*c(32);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(33,64)*c(64)*c(33);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(33,64)*c(64)*c(33);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(34,64)*c(64)*c(34);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(34,64)*c(64)*c(34);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(35,64)*c(64)*c(35);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(35,64)*c(64)*c(35);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(36,64)*c(64)*c(36);
	coll_evap_2d(78,29) = coll_evap_2d(78,29)+K(36,64)*c(64)*c(36);
	coll_evap_2d(64,31) = coll_evap_2d(64,31)+K(37,64)*c(64)*c(37);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(38,64)*c(64)*c(38);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(39,64)*c(64)*c(39);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(40,64)*c(64)*c(40);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(41,64)*c(64)*c(41);
	coll_evap_2d(64,78) = coll_evap_2d(64,78)+K(42,64)*c(64)*c(42);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(42,64)*c(64)*c(42);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(43,64)*c(64)*c(43);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(44,64)*c(64)*c(44);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(45,64)*c(64)*c(45);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(46,64)*c(64)*c(46);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(47,64)*c(64)*c(47);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(48,64)*c(64)*c(48);
	coll_evap_2d(64,75) = coll_evap_2d(64,75)+K(49,64)*c(64)*c(49);
	coll_evap_2d(64,28) = coll_evap_2d(64,28)+K(64,68)*c(64)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(66,64) = coll_evap_2d(66,64)+E(6,64)*c(66);
	coll_evap_2d(67,64) = coll_evap_2d(67,64)+E(7,64)*c(67);
	% External losses
	coll_evap_2d(64,71) = coll_evap_2d(64,71)+fcs*CS(64)*c(64);

% Cluster 65: 3A5N1P
	% Collisions removing this cluster
	coll_evap_2d(65,66) = coll_evap_2d(65,66)+K(1,65)*c(65)*c(1);
	coll_evap_2d(65,67) = coll_evap_2d(65,67)+K(2,65)*c(65)*c(2);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(3,65)*c(65)*c(3);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(3,65)*c(65)*c(3);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(4,65)*c(65)*c(4);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(4,65)*c(65)*c(4);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(5,65)*c(65)*c(5);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(5,65)*c(65)*c(5);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(6,65)*c(65)*c(6);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(6,65)*c(65)*c(6);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(7,65)*c(65)*c(7);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(7,65)*c(65)*c(7);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(8,65)*c(65)*c(8);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(9,65)*c(65)*c(9);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(10,65)*c(65)*c(10);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(11,65)*c(65)*c(11);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(12,65)*c(65)*c(12);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(12,65)*c(65)*c(12);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(13,65)*c(65)*c(13);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(13,65)*c(65)*c(13);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(14,65)*c(65)*c(14);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(15,65)*c(65)*c(15);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(16,65)*c(65)*c(16);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(17,65)*c(65)*c(17);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(18,65)*c(65)*c(18);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(18,65)*c(65)*c(18);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(19,65)*c(65)*c(19);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(19,65)*c(65)*c(19);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(20,65)*c(65)*c(20);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(21,65)*c(65)*c(21);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(22,65)*c(65)*c(22);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(23,65)*c(65)*c(23);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(24,65)*c(65)*c(24);
	coll_evap_2d(78,65) = coll_evap_2d(78,65)+K(24,65)*c(65)*c(24);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(25,65)*c(65)*c(25);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(25,65)*c(65)*c(25);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(26,65)*c(65)*c(26);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(27,65)*c(65)*c(27);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(28,65)*c(65)*c(28);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(29,65)*c(65)*c(29);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(30,65)*c(65)*c(30);
	coll_evap_2d(65,77) = coll_evap_2d(65,77)+K(31,65)*c(65)*c(31);
	coll_evap_2d(65,30) = coll_evap_2d(65,30)+K(32,65)*c(65)*c(32);
	coll_evap_2d(65,31) = coll_evap_2d(65,31)+K(33,65)*c(65)*c(33);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(34,65)*c(65)*c(34);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(35,65)*c(65)*c(35);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(36,65)*c(65)*c(36);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(37,65)*c(65)*c(37);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(37,65)*c(65)*c(37);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(38,65)*c(65)*c(38);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(38,65)*c(65)*c(38);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(39,65)*c(65)*c(39);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(40,65)*c(65)*c(40);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(41,65)*c(65)*c(41);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(42,65)*c(65)*c(42);
	coll_evap_2d(78,30) = coll_evap_2d(78,30)+K(42,65)*c(65)*c(42);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(43,65)*c(65)*c(43);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(43,65)*c(65)*c(43);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(44,65)*c(65)*c(44);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(45,65)*c(65)*c(45);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(46,65)*c(65)*c(46);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(47,65)*c(65)*c(47);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(48,65)*c(65)*c(48);
	coll_evap_2d(65,75) = coll_evap_2d(65,75)+K(49,65)*c(65)*c(49);
	coll_evap_2d(65,78) = coll_evap_2d(65,78)+K(65,68)*c(65)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	coll_evap_2d(78,6) = coll_evap_2d(78,6)+K(65,68)*c(65)*c(68);
	% Evaporations resulting in this cluster
	coll_evap_2d(66,65) = coll_evap_2d(66,65)+E(1,65)*c(66);
	coll_evap_2d(67,65) = coll_evap_2d(67,65)+E(2,65)*c(67);
	% External losses
	coll_evap_2d(65,71) = coll_evap_2d(65,71)+fcs*CS(65)*c(65);

% Cluster 66: 4A5N1P
	% Collisions removing this cluster
	coll_evap_2d(66,67) = coll_evap_2d(66,67)+K(1,66)*c(66)*c(1);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(2,66)*c(66)*c(2);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(2,66)*c(66)*c(2);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(3,66)*c(66)*c(3);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(3,66)*c(66)*c(3);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(4,66)*c(66)*c(4);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(4,66)*c(66)*c(4);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(5,66)*c(66)*c(5);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(5,66)*c(66)*c(5);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(6,66)*c(66)*c(6);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(6,66)*c(66)*c(6);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(7,66)*c(66)*c(7);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(8,66)*c(66)*c(8);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(9,66)*c(66)*c(9);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(10,66)*c(66)*c(10);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(11,66)*c(66)*c(11);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(12,66)*c(66)*c(12);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(12,66)*c(66)*c(12);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(13,66)*c(66)*c(13);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(14,66)*c(66)*c(14);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(15,66)*c(66)*c(15);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(16,66)*c(66)*c(16);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(17,66)*c(66)*c(17);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(18,66)*c(66)*c(18);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(18,66)*c(66)*c(18);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(19,66)*c(66)*c(19);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(20,66)*c(66)*c(20);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(21,66)*c(66)*c(21);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(22,66)*c(66)*c(22);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(23,66)*c(66)*c(23);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(24,66)*c(66)*c(24);
	coll_evap_2d(78,66) = coll_evap_2d(78,66)+K(24,66)*c(66)*c(24);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(25,66)*c(66)*c(25);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(26,66)*c(66)*c(26);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(27,66)*c(66)*c(27);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(28,66)*c(66)*c(28);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(29,66)*c(66)*c(29);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(30,66)*c(66)*c(30);
	coll_evap_2d(66,77) = coll_evap_2d(66,77)+K(31,66)*c(66)*c(31);
	coll_evap_2d(66,31) = coll_evap_2d(66,31)+K(32,66)*c(66)*c(32);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(33,66)*c(66)*c(33);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(34,66)*c(66)*c(34);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(35,66)*c(66)*c(35);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(36,66)*c(66)*c(36);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(37,66)*c(66)*c(37);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(37,66)*c(66)*c(37);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(38,66)*c(66)*c(38);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(39,66)*c(66)*c(39);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(40,66)*c(66)*c(40);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(41,66)*c(66)*c(41);
	coll_evap_2d(66,78) = coll_evap_2d(66,78)+K(42,66)*c(66)*c(42);
	coll_evap_2d(78,31) = coll_evap_2d(78,31)+K(42,66)*c(66)*c(42);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(43,66)*c(66)*c(43);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(44,66)*c(66)*c(44);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(45,66)*c(66)*c(45);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(46,66)*c(66)*c(46);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(47,66)*c(66)*c(47);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(48,66)*c(66)*c(48);
	coll_evap_2d(66,75) = coll_evap_2d(66,75)+K(49,66)*c(66)*c(49);
	coll_evap_2d(66,30) = coll_evap_2d(66,30)+K(66,68)*c(66)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% Evaporations resulting in this cluster
	coll_evap_2d(67,66) = coll_evap_2d(67,66)+E(1,66)*c(67);
	% External losses
	coll_evap_2d(66,71) = coll_evap_2d(66,71)+fcs*CS(66)*c(66);

% Cluster 67: 5A5N1P
	% Collisions removing this cluster
	coll_evap_2d(67,78) = coll_evap_2d(67,78)+K(1,67)*c(67)*c(1);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(1,67)*c(67)*c(1);
	coll_evap_2d(67,78) = coll_evap_2d(67,78)+K(2,67)*c(67)*c(2);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(2,67)*c(67)*c(2);
	coll_evap_2d(67,78) = coll_evap_2d(67,78)+K(3,67)*c(67)*c(3);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(3,67)*c(67)*c(3);
	coll_evap_2d(67,78) = coll_evap_2d(67,78)+K(4,67)*c(67)*c(4);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(4,67)*c(67)*c(4);
	coll_evap_2d(67,78) = coll_evap_2d(67,78)+K(5,67)*c(67)*c(5);
	coll_evap_2d(78,67) = coll_evap_2d(78,67)+K(5,67)*c(67)*c(5);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(6,67)*c(67)*c(6);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(7,67)*c(67)*c(7);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(8,67)*c(67)*c(8);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(9,67)*c(67)*c(9);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(10,67)*c(67)*c(10);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(11,67)*c(67)*c(11);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(12,67)*c(67)*c(12);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(13,67)*c(67)*c(13);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(14,67)*c(67)*c(14);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(15,67)*c(67)*c(15);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(16,67)*c(67)*c(16);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(17,67)*c(67)*c(17);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(18,67)*c(67)*c(18);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(19,67)*c(67)*c(19);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(20,67)*c(67)*c(20);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(21,67)*c(67)*c(21);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(22,67)*c(67)*c(22);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(23,67)*c(67)*c(23);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(24,67)*c(67)*c(24);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(25,67)*c(67)*c(25);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(26,67)*c(67)*c(26);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(27,67)*c(67)*c(27);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(28,67)*c(67)*c(28);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(29,67)*c(67)*c(29);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(30,67)*c(67)*c(30);
	coll_evap_2d(67,77) = coll_evap_2d(67,77)+K(31,67)*c(67)*c(31);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(32,67)*c(67)*c(32);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(33,67)*c(67)*c(33);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(34,67)*c(67)*c(34);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(35,67)*c(67)*c(35);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(36,67)*c(67)*c(36);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(37,67)*c(67)*c(37);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(38,67)*c(67)*c(38);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(39,67)*c(67)*c(39);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(40,67)*c(67)*c(40);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(41,67)*c(67)*c(41);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(42,67)*c(67)*c(42);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(43,67)*c(67)*c(43);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(44,67)*c(67)*c(44);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(45,67)*c(67)*c(45);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(46,67)*c(67)*c(46);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(47,67)*c(67)*c(47);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(48,67)*c(67)*c(48);
	coll_evap_2d(67,75) = coll_evap_2d(67,75)+K(49,67)*c(67)*c(49);
	coll_evap_2d(67,31) = coll_evap_2d(67,31)+K(67,68)*c(67)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% External losses
	coll_evap_2d(67,71) = coll_evap_2d(67,71)+fcs*CS(67)*c(67);

% Cluster 68: generic negative ion 
	% Collisions removing this cluster
	coll_evap_2d(68,32) = coll_evap_2d(68,32)+K(1,68)*c(68)*c(1);
	coll_evap_2d(68,33) = coll_evap_2d(68,33)+K(2,68)*c(68)*c(2);
	coll_evap_2d(68,34) = coll_evap_2d(68,34)+K(3,68)*c(68)*c(3);
	coll_evap_2d(68,35) = coll_evap_2d(68,35)+K(4,68)*c(68)*c(4);
	coll_evap_2d(68,36) = coll_evap_2d(68,36)+K(5,68)*c(68)*c(5);
	coll_evap_2d(68,37) = coll_evap_2d(68,37)+K(7,68)*c(68)*c(7);
	coll_evap_2d(68,38) = coll_evap_2d(68,38)+K(8,68)*c(68)*c(8);
	coll_evap_2d(68,39) = coll_evap_2d(68,39)+K(9,68)*c(68)*c(9);
	coll_evap_2d(68,40) = coll_evap_2d(68,40)+K(10,68)*c(68)*c(10);
	coll_evap_2d(68,41) = coll_evap_2d(68,41)+K(11,68)*c(68)*c(11);
	coll_evap_2d(68,42) = coll_evap_2d(68,42)+K(13,68)*c(68)*c(13);
	coll_evap_2d(68,43) = coll_evap_2d(68,43)+K(14,68)*c(68)*c(14);
	coll_evap_2d(68,44) = coll_evap_2d(68,44)+K(15,68)*c(68)*c(15);
	coll_evap_2d(68,45) = coll_evap_2d(68,45)+K(16,68)*c(68)*c(16);
	coll_evap_2d(68,46) = coll_evap_2d(68,46)+K(17,68)*c(68)*c(17);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(19,68)*c(68)*c(19);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(19,68)*c(68)*c(19);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(20,68)*c(68)*c(20);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(20,68)*c(68)*c(20);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(21,68)*c(68)*c(21);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(21,68)*c(68)*c(21);
	coll_evap_2d(68,47) = coll_evap_2d(68,47)+K(22,68)*c(68)*c(22);
	coll_evap_2d(68,48) = coll_evap_2d(68,48)+K(23,68)*c(68)*c(23);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(25,68)*c(68)*c(25);
	coll_evap_2d(78,42) = coll_evap_2d(78,42)+K(25,68)*c(68)*c(25);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(26,68)*c(68)*c(26);
	coll_evap_2d(78,43) = coll_evap_2d(78,43)+K(26,68)*c(68)*c(26);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(27,68)*c(68)*c(27);
	coll_evap_2d(78,44) = coll_evap_2d(78,44)+K(27,68)*c(68)*c(27);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(28,68)*c(68)*c(28);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(28,68)*c(68)*c(28);
	coll_evap_2d(68,49) = coll_evap_2d(68,49)+K(29,68)*c(68)*c(29);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(30,68)*c(68)*c(30);
	coll_evap_2d(78,47) = coll_evap_2d(78,47)+K(30,68)*c(68)*c(30);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(31,68)*c(68)*c(31);
	coll_evap_2d(78,49) = coll_evap_2d(78,49)+K(31,68)*c(68)*c(31);
	coll_evap_2d(68,6) = coll_evap_2d(68,6)+K(50,68)*c(68)*c(50);
	coll_evap_2d(68,7) = coll_evap_2d(68,7)+K(51,68)*c(68)*c(51);
	coll_evap_2d(68,8) = coll_evap_2d(68,8)+K(52,68)*c(68)*c(52);
	coll_evap_2d(68,12) = coll_evap_2d(68,12)+K(53,68)*c(68)*c(53);
	coll_evap_2d(68,13) = coll_evap_2d(68,13)+K(54,68)*c(68)*c(54);
	coll_evap_2d(68,14) = coll_evap_2d(68,14)+K(55,68)*c(68)*c(55);
	coll_evap_2d(68,15) = coll_evap_2d(68,15)+K(56,68)*c(68)*c(56);
	coll_evap_2d(68,18) = coll_evap_2d(68,18)+K(57,68)*c(68)*c(57);
	coll_evap_2d(68,19) = coll_evap_2d(68,19)+K(58,68)*c(68)*c(58);
	coll_evap_2d(68,20) = coll_evap_2d(68,20)+K(59,68)*c(68)*c(59);
	coll_evap_2d(68,21) = coll_evap_2d(68,21)+K(60,68)*c(68)*c(60);
	coll_evap_2d(68,22) = coll_evap_2d(68,22)+K(61,68)*c(68)*c(61);
	coll_evap_2d(68,26) = coll_evap_2d(68,26)+K(62,68)*c(68)*c(62);
	coll_evap_2d(68,27) = coll_evap_2d(68,27)+K(63,68)*c(68)*c(63);
	coll_evap_2d(68,28) = coll_evap_2d(68,28)+K(64,68)*c(68)*c(64);
	coll_evap_2d(68,78) = coll_evap_2d(68,78)+K(65,68)*c(68)*c(65);
	coll_evap_2d(78,27) = coll_evap_2d(78,27)+K(65,68)*c(68)*c(65);
	coll_evap_2d(68,30) = coll_evap_2d(68,30)+K(66,68)*c(68)*c(66);
	coll_evap_2d(68,31) = coll_evap_2d(68,31)+K(67,68)*c(68)*c(67);
	coll_evap_2d(68,74) = coll_evap_2d(68,74)+K(68,69)*c(68)*c(69);
	% More products from the same collisions (monomers from the boundary etc.)
	% External losses
	coll_evap_2d(68,71) = coll_evap_2d(68,71)+fcs*CS(68)*c(68);

% Cluster 69: generic positive ion 
	% Collisions removing this cluster
	coll_evap_2d(69,50) = coll_evap_2d(69,50)+K(6,69)*c(69)*c(6);
	coll_evap_2d(69,51) = coll_evap_2d(69,51)+K(7,69)*c(69)*c(7);
	coll_evap_2d(69,52) = coll_evap_2d(69,52)+K(8,69)*c(69)*c(8);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(9,69)*c(69)*c(9);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(9,69)*c(69)*c(9);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(10,69)*c(69)*c(10);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(10,69)*c(69)*c(10);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(11,69)*c(69)*c(11);
	coll_evap_2d(78,52) = coll_evap_2d(78,52)+K(11,69)*c(69)*c(11);
	coll_evap_2d(69,53) = coll_evap_2d(69,53)+K(12,69)*c(69)*c(12);
	coll_evap_2d(69,54) = coll_evap_2d(69,54)+K(13,69)*c(69)*c(13);
	coll_evap_2d(69,55) = coll_evap_2d(69,55)+K(14,69)*c(69)*c(14);
	coll_evap_2d(69,56) = coll_evap_2d(69,56)+K(15,69)*c(69)*c(15);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(16,69)*c(69)*c(16);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(16,69)*c(69)*c(16);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(17,69)*c(69)*c(17);
	coll_evap_2d(78,56) = coll_evap_2d(78,56)+K(17,69)*c(69)*c(17);
	coll_evap_2d(69,57) = coll_evap_2d(69,57)+K(18,69)*c(69)*c(18);
	coll_evap_2d(69,58) = coll_evap_2d(69,58)+K(19,69)*c(69)*c(19);
	coll_evap_2d(69,59) = coll_evap_2d(69,59)+K(20,69)*c(69)*c(20);
	coll_evap_2d(69,60) = coll_evap_2d(69,60)+K(21,69)*c(69)*c(21);
	coll_evap_2d(69,61) = coll_evap_2d(69,61)+K(22,69)*c(69)*c(22);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(23,69)*c(69)*c(23);
	coll_evap_2d(78,61) = coll_evap_2d(78,61)+K(23,69)*c(69)*c(23);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(24,69)*c(69)*c(24);
	coll_evap_2d(78,57) = coll_evap_2d(78,57)+K(24,69)*c(69)*c(24);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(25,69)*c(69)*c(25);
	coll_evap_2d(78,58) = coll_evap_2d(78,58)+K(25,69)*c(69)*c(25);
	coll_evap_2d(69,62) = coll_evap_2d(69,62)+K(26,69)*c(69)*c(26);
	coll_evap_2d(69,63) = coll_evap_2d(69,63)+K(27,69)*c(69)*c(27);
	coll_evap_2d(69,64) = coll_evap_2d(69,64)+K(28,69)*c(69)*c(28);
	coll_evap_2d(69,78) = coll_evap_2d(69,78)+K(29,69)*c(69)*c(29);
	coll_evap_2d(78,64) = coll_evap_2d(78,64)+K(29,69)*c(69)*c(29);
	coll_evap_2d(69,66) = coll_evap_2d(69,66)+K(30,69)*c(69)*c(30);
	coll_evap_2d(69,67) = coll_evap_2d(69,67)+K(31,69)*c(69)*c(31);
	coll_evap_2d(69,1) = coll_evap_2d(69,1)+K(32,69)*c(69)*c(32);
	coll_evap_2d(69,2) = coll_evap_2d(69,2)+K(33,69)*c(69)*c(33);
	coll_evap_2d(69,3) = coll_evap_2d(69,3)+K(34,69)*c(69)*c(34);
	coll_evap_2d(69,4) = coll_evap_2d(69,4)+K(35,69)*c(69)*c(35);
	coll_evap_2d(69,5) = coll_evap_2d(69,5)+K(36,69)*c(69)*c(36);
	coll_evap_2d(69,7) = coll_evap_2d(69,7)+K(37,69)*c(69)*c(37);
	coll_evap_2d(69,8) = coll_evap_2d(69,8)+K(38,69)*c(69)*c(38);
	coll_evap_2d(69,9) = coll_evap_2d(69,9)+K(39,69)*c(69)*c(39);
	coll_evap_2d(69,10) = coll_evap_2d(69,10)+K(40,69)*c(69)*c(40);
	coll_evap_2d(69,11) = coll_evap_2d(69,11)+K(41,69)*c(69)*c(41);
	coll_evap_2d(69,13) = coll_evap_2d(69,13)+K(42,69)*c(69)*c(42);
	coll_evap_2d(69,14) = coll_evap_2d(69,14)+K(43,69)*c(69)*c(43);
	coll_evap_2d(69,15) = coll_evap_2d(69,15)+K(44,69)*c(69)*c(44);
	coll_evap_2d(69,16) = coll_evap_2d(69,16)+K(45,69)*c(69)*c(45);
	coll_evap_2d(69,17) = coll_evap_2d(69,17)+K(46,69)*c(69)*c(46);
	coll_evap_2d(69,22) = coll_evap_2d(69,22)+K(47,69)*c(69)*c(47);
	coll_evap_2d(69,23) = coll_evap_2d(69,23)+K(48,69)*c(69)*c(48);
	coll_evap_2d(69,29) = coll_evap_2d(69,29)+K(49,69)*c(69)*c(49);
	coll_evap_2d(69,74) = coll_evap_2d(69,74)+K(68,69)*c(69)*c(68);
	% More products from the same collisions (monomers from the boundary etc.)
	% External losses
	coll_evap_2d(69,71) = coll_evap_2d(69,71)+fcs*CS(69)*c(69);


% Matrix for collisions that lead succesfully out of the system:
% flux_out(i,j,k) is the outgoing flux from clusters i and j, where
% k=1 for neutral-neutral, 2 for neutral-negative, 3 for neutral-positive and 4 for recombination collisions
	flux_out(1,31,1) = K(1,31)*c(1)*c(31);
	flux_out(2,30,1) = K(2,30)*c(2)*c(30);
	flux_out(2,31,1) = K(2,31)*c(2)*c(31);
	flux_out(3,30,1) = K(3,30)*c(3)*c(30);
	flux_out(3,31,1) = K(3,31)*c(3)*c(31);
	flux_out(4,30,1) = K(4,30)*c(4)*c(30);
	flux_out(4,31,1) = K(4,31)*c(4)*c(31);
	flux_out(5,30,1) = K(5,30)*c(5)*c(30);
	flux_out(5,31,1) = K(5,31)*c(5)*c(31);
	flux_out(7,29,1) = K(7,29)*c(7)*c(29);
	flux_out(7,31,1) = K(7,31)*c(7)*c(31);
	flux_out(8,28,1) = K(8,28)*c(8)*c(28);
	flux_out(8,29,1) = K(8,29)*c(8)*c(29);
	flux_out(8,30,1) = K(8,30)*c(8)*c(30);
	flux_out(8,31,1) = K(8,31)*c(8)*c(31);
	flux_out(9,27,1) = K(9,27)*c(9)*c(27);
	flux_out(9,28,1) = K(9,28)*c(9)*c(28);
	flux_out(9,29,1) = K(9,29)*c(9)*c(29);
	flux_out(9,30,1) = K(9,30)*c(9)*c(30);
	flux_out(9,31,1) = K(9,31)*c(9)*c(31);
	flux_out(10,26,1) = K(10,26)*c(10)*c(26);
	flux_out(10,27,1) = K(10,27)*c(10)*c(27);
	flux_out(10,28,1) = K(10,28)*c(10)*c(28);
	flux_out(10,29,1) = K(10,29)*c(10)*c(29);
	flux_out(10,30,1) = K(10,30)*c(10)*c(30);
	flux_out(10,31,1) = K(10,31)*c(10)*c(31);
	flux_out(11,25,1) = K(11,25)*c(11)*c(25);
	flux_out(11,26,1) = K(11,26)*c(11)*c(26);
	flux_out(11,27,1) = K(11,27)*c(11)*c(27);
	flux_out(11,28,1) = K(11,28)*c(11)*c(28);
	flux_out(11,29,1) = K(11,29)*c(11)*c(29);
	flux_out(11,30,1) = K(11,30)*c(11)*c(30);
	flux_out(11,31,1) = K(11,31)*c(11)*c(31);
	flux_out(13,23,1) = K(13,23)*c(13)*c(23);
	flux_out(13,29,1) = K(13,29)*c(13)*c(29);
	flux_out(13,31,1) = K(13,31)*c(13)*c(31);
	flux_out(14,22,1) = K(14,22)*c(14)*c(22);
	flux_out(14,23,1) = K(14,23)*c(14)*c(23);
	flux_out(14,28,1) = K(14,28)*c(14)*c(28);
	flux_out(14,29,1) = K(14,29)*c(14)*c(29);
	flux_out(14,30,1) = K(14,30)*c(14)*c(30);
	flux_out(14,31,1) = K(14,31)*c(14)*c(31);
	flux_out(15,21,1) = K(15,21)*c(15)*c(21);
	flux_out(15,22,1) = K(15,22)*c(15)*c(22);
	flux_out(15,23,1) = K(15,23)*c(15)*c(23);
	flux_out(15,27,1) = K(15,27)*c(15)*c(27);
	flux_out(15,28,1) = K(15,28)*c(15)*c(28);
	flux_out(15,29,1) = K(15,29)*c(15)*c(29);
	flux_out(15,30,1) = K(15,30)*c(15)*c(30);
	flux_out(15,31,1) = K(15,31)*c(15)*c(31);
	flux_out(16,20,1) = K(16,20)*c(16)*c(20);
	flux_out(16,21,1) = K(16,21)*c(16)*c(21);
	flux_out(16,22,1) = K(16,22)*c(16)*c(22);
	flux_out(16,23,1) = K(16,23)*c(16)*c(23);
	flux_out(16,26,1) = K(16,26)*c(16)*c(26);
	flux_out(16,27,1) = K(16,27)*c(16)*c(27);
	flux_out(16,28,1) = K(16,28)*c(16)*c(28);
	flux_out(16,29,1) = K(16,29)*c(16)*c(29);
	flux_out(16,30,1) = K(16,30)*c(16)*c(30);
	flux_out(16,31,1) = K(16,31)*c(16)*c(31);
	flux_out(17,19,1) = K(17,19)*c(17)*c(19);
	flux_out(17,20,1) = K(17,20)*c(17)*c(20);
	flux_out(17,21,1) = K(17,21)*c(17)*c(21);
	flux_out(17,22,1) = K(17,22)*c(17)*c(22);
	flux_out(17,23,1) = K(17,23)*c(17)*c(23);
	flux_out(17,25,1) = K(17,25)*c(17)*c(25);
	flux_out(17,26,1) = K(17,26)*c(17)*c(26);
	flux_out(17,27,1) = K(17,27)*c(17)*c(27);
	flux_out(17,28,1) = K(17,28)*c(17)*c(28);
	flux_out(17,29,1) = K(17,29)*c(17)*c(29);
	flux_out(17,30,1) = K(17,30)*c(17)*c(30);
	flux_out(17,31,1) = K(17,31)*c(17)*c(31);
	flux_out(19,23,1) = K(19,23)*c(19)*c(23);
	flux_out(19,29,1) = K(19,29)*c(19)*c(29);
	flux_out(19,31,1) = K(19,31)*c(19)*c(31);
	flux_out(20,22,1) = K(20,22)*c(20)*c(22);
	flux_out(20,23,1) = K(20,23)*c(20)*c(23);
	flux_out(20,28,1) = K(20,28)*c(20)*c(28);
	flux_out(20,29,1) = K(20,29)*c(20)*c(29);
	flux_out(20,30,1) = K(20,30)*c(20)*c(30);
	flux_out(20,31,1) = K(20,31)*c(20)*c(31);
	flux_out(21,21,1) = 0.5*K(21,21)*c(21)*c(21);
	flux_out(21,22,1) = K(21,22)*c(21)*c(22);
	flux_out(21,23,1) = K(21,23)*c(21)*c(23);
	flux_out(21,27,1) = K(21,27)*c(21)*c(27);
	flux_out(21,28,1) = K(21,28)*c(21)*c(28);
	flux_out(21,29,1) = K(21,29)*c(21)*c(29);
	flux_out(21,30,1) = K(21,30)*c(21)*c(30);
	flux_out(21,31,1) = K(21,31)*c(21)*c(31);
	flux_out(22,22,1) = 0.5*K(22,22)*c(22)*c(22);
	flux_out(22,23,1) = K(22,23)*c(22)*c(23);
	flux_out(22,26,1) = K(22,26)*c(22)*c(26);
	flux_out(22,27,1) = K(22,27)*c(22)*c(27);
	flux_out(22,28,1) = K(22,28)*c(22)*c(28);
	flux_out(22,29,1) = K(22,29)*c(22)*c(29);
	flux_out(22,30,1) = K(22,30)*c(22)*c(30);
	flux_out(22,31,1) = K(22,31)*c(22)*c(31);
	flux_out(23,23,1) = 0.5*K(23,23)*c(23)*c(23);
	flux_out(23,25,1) = K(23,25)*c(23)*c(25);
	flux_out(23,26,1) = K(23,26)*c(23)*c(26);
	flux_out(23,27,1) = K(23,27)*c(23)*c(27);
	flux_out(23,28,1) = K(23,28)*c(23)*c(28);
	flux_out(23,29,1) = K(23,29)*c(23)*c(29);
	flux_out(23,30,1) = K(23,30)*c(23)*c(30);
	flux_out(23,31,1) = K(23,31)*c(23)*c(31);
	flux_out(25,29,1) = K(25,29)*c(25)*c(29);
	flux_out(25,31,1) = K(25,31)*c(25)*c(31);
	flux_out(26,28,1) = K(26,28)*c(26)*c(28);
	flux_out(26,29,1) = K(26,29)*c(26)*c(29);
	flux_out(26,30,1) = K(26,30)*c(26)*c(30);
	flux_out(26,31,1) = K(26,31)*c(26)*c(31);
	flux_out(27,27,1) = 0.5*K(27,27)*c(27)*c(27);
	flux_out(27,28,1) = K(27,28)*c(27)*c(28);
	flux_out(27,29,1) = K(27,29)*c(27)*c(29);
	flux_out(27,30,1) = K(27,30)*c(27)*c(30);
	flux_out(27,31,1) = K(27,31)*c(27)*c(31);
	flux_out(28,28,1) = 0.5*K(28,28)*c(28)*c(28);
	flux_out(28,29,1) = K(28,29)*c(28)*c(29);
	flux_out(28,30,1) = K(28,30)*c(28)*c(30);
	flux_out(28,31,1) = K(28,31)*c(28)*c(31);
	flux_out(29,29,1) = 0.5*K(29,29)*c(29)*c(29);
	flux_out(29,30,1) = K(29,30)*c(29)*c(30);
	flux_out(29,31,1) = K(29,31)*c(29)*c(31);
	flux_out(30,30,1) = 0.5*K(30,30)*c(30)*c(30);
	flux_out(30,31,1) = K(30,31)*c(30)*c(31);
	flux_out(31,31,1) = 0.5*K(31,31)*c(31)*c(31);
	flux_out(32,67,4) = K(32,67)*c(32)*c(67);
	flux_out(33,66,4) = K(33,66)*c(33)*c(66);
	flux_out(33,67,4) = K(33,67)*c(33)*c(67);
	flux_out(34,65,4) = K(34,65)*c(34)*c(65);
	flux_out(34,66,4) = K(34,66)*c(34)*c(66);
	flux_out(34,67,4) = K(34,67)*c(34)*c(67);
	flux_out(35,65,4) = K(35,65)*c(35)*c(65);
	flux_out(35,66,4) = K(35,66)*c(35)*c(66);
	flux_out(35,67,4) = K(35,67)*c(35)*c(67);
	flux_out(36,65,4) = K(36,65)*c(36)*c(65);
	flux_out(36,66,4) = K(36,66)*c(36)*c(66);
	flux_out(36,67,4) = K(36,67)*c(36)*c(67);
	flux_out(37,67,4) = K(37,67)*c(37)*c(67);
	flux_out(38,64,4) = K(38,64)*c(38)*c(64);
	flux_out(38,66,4) = K(38,66)*c(38)*c(66);
	flux_out(38,67,4) = K(38,67)*c(38)*c(67);
	flux_out(39,63,4) = K(39,63)*c(39)*c(63);
	flux_out(39,64,4) = K(39,64)*c(39)*c(64);
	flux_out(39,65,4) = K(39,65)*c(39)*c(65);
	flux_out(39,66,4) = K(39,66)*c(39)*c(66);
	flux_out(39,67,4) = K(39,67)*c(39)*c(67);
	flux_out(40,62,4) = K(40,62)*c(40)*c(62);
	flux_out(40,63,4) = K(40,63)*c(40)*c(63);
	flux_out(40,64,4) = K(40,64)*c(40)*c(64);
	flux_out(40,65,4) = K(40,65)*c(40)*c(65);
	flux_out(40,66,4) = K(40,66)*c(40)*c(66);
	flux_out(40,67,4) = K(40,67)*c(40)*c(67);
	flux_out(41,62,4) = K(41,62)*c(41)*c(62);
	flux_out(41,63,4) = K(41,63)*c(41)*c(63);
	flux_out(41,64,4) = K(41,64)*c(41)*c(64);
	flux_out(41,65,4) = K(41,65)*c(41)*c(65);
	flux_out(41,66,4) = K(41,66)*c(41)*c(66);
	flux_out(41,67,4) = K(41,67)*c(41)*c(67);
	flux_out(42,67,4) = K(42,67)*c(42)*c(67);
	flux_out(43,61,4) = K(43,61)*c(43)*c(61);
	flux_out(43,64,4) = K(43,64)*c(43)*c(64);
	flux_out(43,66,4) = K(43,66)*c(43)*c(66);
	flux_out(43,67,4) = K(43,67)*c(43)*c(67);
	flux_out(44,60,4) = K(44,60)*c(44)*c(60);
	flux_out(44,61,4) = K(44,61)*c(44)*c(61);
	flux_out(44,63,4) = K(44,63)*c(44)*c(63);
	flux_out(44,64,4) = K(44,64)*c(44)*c(64);
	flux_out(44,65,4) = K(44,65)*c(44)*c(65);
	flux_out(44,66,4) = K(44,66)*c(44)*c(66);
	flux_out(44,67,4) = K(44,67)*c(44)*c(67);
	flux_out(45,59,4) = K(45,59)*c(45)*c(59);
	flux_out(45,60,4) = K(45,60)*c(45)*c(60);
	flux_out(45,61,4) = K(45,61)*c(45)*c(61);
	flux_out(45,62,4) = K(45,62)*c(45)*c(62);
	flux_out(45,63,4) = K(45,63)*c(45)*c(63);
	flux_out(45,64,4) = K(45,64)*c(45)*c(64);
	flux_out(45,65,4) = K(45,65)*c(45)*c(65);
	flux_out(45,66,4) = K(45,66)*c(45)*c(66);
	flux_out(45,67,4) = K(45,67)*c(45)*c(67);
	flux_out(46,58,4) = K(46,58)*c(46)*c(58);
	flux_out(46,59,4) = K(46,59)*c(46)*c(59);
	flux_out(46,60,4) = K(46,60)*c(46)*c(60);
	flux_out(46,61,4) = K(46,61)*c(46)*c(61);
	flux_out(46,62,4) = K(46,62)*c(46)*c(62);
	flux_out(46,63,4) = K(46,63)*c(46)*c(63);
	flux_out(46,64,4) = K(46,64)*c(46)*c(64);
	flux_out(46,65,4) = K(46,65)*c(46)*c(65);
	flux_out(46,66,4) = K(46,66)*c(46)*c(66);
	flux_out(46,67,4) = K(46,67)*c(46)*c(67);
	flux_out(47,55,4) = K(47,55)*c(47)*c(55);
	flux_out(47,56,4) = K(47,56)*c(47)*c(56);
	flux_out(47,59,4) = K(47,59)*c(47)*c(59);
	flux_out(47,60,4) = K(47,60)*c(47)*c(60);
	flux_out(47,61,4) = K(47,61)*c(47)*c(61);
	flux_out(47,62,4) = K(47,62)*c(47)*c(62);
	flux_out(47,63,4) = K(47,63)*c(47)*c(63);
	flux_out(47,64,4) = K(47,64)*c(47)*c(64);
	flux_out(47,65,4) = K(47,65)*c(47)*c(65);
	flux_out(47,66,4) = K(47,66)*c(47)*c(66);
	flux_out(47,67,4) = K(47,67)*c(47)*c(67);
	flux_out(48,54,4) = K(48,54)*c(48)*c(54);
	flux_out(48,55,4) = K(48,55)*c(48)*c(55);
	flux_out(48,56,4) = K(48,56)*c(48)*c(56);
	flux_out(48,58,4) = K(48,58)*c(48)*c(58);
	flux_out(48,59,4) = K(48,59)*c(48)*c(59);
	flux_out(48,60,4) = K(48,60)*c(48)*c(60);
	flux_out(48,61,4) = K(48,61)*c(48)*c(61);
	flux_out(48,62,4) = K(48,62)*c(48)*c(62);
	flux_out(48,63,4) = K(48,63)*c(48)*c(63);
	flux_out(48,64,4) = K(48,64)*c(48)*c(64);
	flux_out(48,65,4) = K(48,65)*c(48)*c(65);
	flux_out(48,66,4) = K(48,66)*c(48)*c(66);
	flux_out(48,67,4) = K(48,67)*c(48)*c(67);
	flux_out(49,51,4) = K(49,51)*c(49)*c(51);
	flux_out(49,52,4) = K(49,52)*c(49)*c(52);
	flux_out(49,54,4) = K(49,54)*c(49)*c(54);
	flux_out(49,55,4) = K(49,55)*c(49)*c(55);
	flux_out(49,56,4) = K(49,56)*c(49)*c(56);
	flux_out(49,58,4) = K(49,58)*c(49)*c(58);
	flux_out(49,59,4) = K(49,59)*c(49)*c(59);
	flux_out(49,60,4) = K(49,60)*c(49)*c(60);
	flux_out(49,61,4) = K(49,61)*c(49)*c(61);
	flux_out(49,62,4) = K(49,62)*c(49)*c(62);
	flux_out(49,63,4) = K(49,63)*c(49)*c(63);
	flux_out(49,64,4) = K(49,64)*c(49)*c(64);
	flux_out(49,65,4) = K(49,65)*c(49)*c(65);
	flux_out(49,66,4) = K(49,66)*c(49)*c(66);
	flux_out(49,67,4) = K(49,67)*c(49)*c(67);
	flux_out(1,48,2) = K(1,48)*c(1)*c(48);
	flux_out(1,49,2) = K(1,49)*c(1)*c(49);
	flux_out(2,47,2) = K(2,47)*c(2)*c(47);
	flux_out(2,48,2) = K(2,48)*c(2)*c(48);
	flux_out(2,49,2) = K(2,49)*c(2)*c(49);
	flux_out(3,47,2) = K(3,47)*c(3)*c(47);
	flux_out(3,48,2) = K(3,48)*c(3)*c(48);
	flux_out(3,49,2) = K(3,49)*c(3)*c(49);
	flux_out(4,47,2) = K(4,47)*c(4)*c(47);
	flux_out(4,48,2) = K(4,48)*c(4)*c(48);
	flux_out(4,49,2) = K(4,49)*c(4)*c(49);
	flux_out(5,47,2) = K(5,47)*c(5)*c(47);
	flux_out(5,48,2) = K(5,48)*c(5)*c(48);
	flux_out(5,49,2) = K(5,49)*c(5)*c(49);
	flux_out(7,46,2) = K(7,46)*c(7)*c(46);
	flux_out(7,48,2) = K(7,48)*c(7)*c(48);
	flux_out(7,49,2) = K(7,49)*c(7)*c(49);
	flux_out(8,45,2) = K(8,45)*c(8)*c(45);
	flux_out(8,46,2) = K(8,46)*c(8)*c(46);
	flux_out(8,47,2) = K(8,47)*c(8)*c(47);
	flux_out(8,48,2) = K(8,48)*c(8)*c(48);
	flux_out(8,49,2) = K(8,49)*c(8)*c(49);
	flux_out(9,44,2) = K(9,44)*c(9)*c(44);
	flux_out(9,45,2) = K(9,45)*c(9)*c(45);
	flux_out(9,46,2) = K(9,46)*c(9)*c(46);
	flux_out(9,47,2) = K(9,47)*c(9)*c(47);
	flux_out(9,48,2) = K(9,48)*c(9)*c(48);
	flux_out(9,49,2) = K(9,49)*c(9)*c(49);
	flux_out(10,43,2) = K(10,43)*c(10)*c(43);
	flux_out(10,44,2) = K(10,44)*c(10)*c(44);
	flux_out(10,45,2) = K(10,45)*c(10)*c(45);
	flux_out(10,46,2) = K(10,46)*c(10)*c(46);
	flux_out(10,47,2) = K(10,47)*c(10)*c(47);
	flux_out(10,48,2) = K(10,48)*c(10)*c(48);
	flux_out(10,49,2) = K(10,49)*c(10)*c(49);
	flux_out(11,42,2) = K(11,42)*c(11)*c(42);
	flux_out(11,43,2) = K(11,43)*c(11)*c(43);
	flux_out(11,44,2) = K(11,44)*c(11)*c(44);
	flux_out(11,45,2) = K(11,45)*c(11)*c(45);
	flux_out(11,46,2) = K(11,46)*c(11)*c(46);
	flux_out(11,47,2) = K(11,47)*c(11)*c(47);
	flux_out(11,48,2) = K(11,48)*c(11)*c(48);
	flux_out(11,49,2) = K(11,49)*c(11)*c(49);
	flux_out(13,41,2) = K(13,41)*c(13)*c(41);
	flux_out(13,46,2) = K(13,46)*c(13)*c(46);
	flux_out(13,48,2) = K(13,48)*c(13)*c(48);
	flux_out(13,49,2) = K(13,49)*c(13)*c(49);
	flux_out(14,40,2) = K(14,40)*c(14)*c(40);
	flux_out(14,41,2) = K(14,41)*c(14)*c(41);
	flux_out(14,45,2) = K(14,45)*c(14)*c(45);
	flux_out(14,46,2) = K(14,46)*c(14)*c(46);
	flux_out(14,47,2) = K(14,47)*c(14)*c(47);
	flux_out(14,48,2) = K(14,48)*c(14)*c(48);
	flux_out(14,49,2) = K(14,49)*c(14)*c(49);
	flux_out(15,39,2) = K(15,39)*c(15)*c(39);
	flux_out(15,40,2) = K(15,40)*c(15)*c(40);
	flux_out(15,41,2) = K(15,41)*c(15)*c(41);
	flux_out(15,44,2) = K(15,44)*c(15)*c(44);
	flux_out(15,45,2) = K(15,45)*c(15)*c(45);
	flux_out(15,46,2) = K(15,46)*c(15)*c(46);
	flux_out(15,47,2) = K(15,47)*c(15)*c(47);
	flux_out(15,48,2) = K(15,48)*c(15)*c(48);
	flux_out(15,49,2) = K(15,49)*c(15)*c(49);
	flux_out(16,38,2) = K(16,38)*c(16)*c(38);
	flux_out(16,39,2) = K(16,39)*c(16)*c(39);
	flux_out(16,40,2) = K(16,40)*c(16)*c(40);
	flux_out(16,41,2) = K(16,41)*c(16)*c(41);
	flux_out(16,43,2) = K(16,43)*c(16)*c(43);
	flux_out(16,44,2) = K(16,44)*c(16)*c(44);
	flux_out(16,45,2) = K(16,45)*c(16)*c(45);
	flux_out(16,46,2) = K(16,46)*c(16)*c(46);
	flux_out(16,47,2) = K(16,47)*c(16)*c(47);
	flux_out(16,48,2) = K(16,48)*c(16)*c(48);
	flux_out(16,49,2) = K(16,49)*c(16)*c(49);
	flux_out(17,37,2) = K(17,37)*c(17)*c(37);
	flux_out(17,38,2) = K(17,38)*c(17)*c(38);
	flux_out(17,39,2) = K(17,39)*c(17)*c(39);
	flux_out(17,40,2) = K(17,40)*c(17)*c(40);
	flux_out(17,41,2) = K(17,41)*c(17)*c(41);
	flux_out(17,42,2) = K(17,42)*c(17)*c(42);
	flux_out(17,43,2) = K(17,43)*c(17)*c(43);
	flux_out(17,44,2) = K(17,44)*c(17)*c(44);
	flux_out(17,45,2) = K(17,45)*c(17)*c(45);
	flux_out(17,46,2) = K(17,46)*c(17)*c(46);
	flux_out(17,47,2) = K(17,47)*c(17)*c(47);
	flux_out(17,48,2) = K(17,48)*c(17)*c(48);
	flux_out(17,49,2) = K(17,49)*c(17)*c(49);
	flux_out(19,36,2) = K(19,36)*c(19)*c(36);
	flux_out(19,41,2) = K(19,41)*c(19)*c(41);
	flux_out(19,46,2) = K(19,46)*c(19)*c(46);
	flux_out(19,48,2) = K(19,48)*c(19)*c(48);
	flux_out(19,49,2) = K(19,49)*c(19)*c(49);
	flux_out(20,35,2) = K(20,35)*c(20)*c(35);
	flux_out(20,36,2) = K(20,36)*c(20)*c(36);
	flux_out(20,40,2) = K(20,40)*c(20)*c(40);
	flux_out(20,41,2) = K(20,41)*c(20)*c(41);
	flux_out(20,45,2) = K(20,45)*c(20)*c(45);
	flux_out(20,46,2) = K(20,46)*c(20)*c(46);
	flux_out(20,47,2) = K(20,47)*c(20)*c(47);
	flux_out(20,48,2) = K(20,48)*c(20)*c(48);
	flux_out(20,49,2) = K(20,49)*c(20)*c(49);
	flux_out(21,34,2) = K(21,34)*c(21)*c(34);
	flux_out(21,35,2) = K(21,35)*c(21)*c(35);
	flux_out(21,36,2) = K(21,36)*c(21)*c(36);
	flux_out(21,39,2) = K(21,39)*c(21)*c(39);
	flux_out(21,40,2) = K(21,40)*c(21)*c(40);
	flux_out(21,41,2) = K(21,41)*c(21)*c(41);
	flux_out(21,44,2) = K(21,44)*c(21)*c(44);
	flux_out(21,45,2) = K(21,45)*c(21)*c(45);
	flux_out(21,46,2) = K(21,46)*c(21)*c(46);
	flux_out(21,47,2) = K(21,47)*c(21)*c(47);
	flux_out(21,48,2) = K(21,48)*c(21)*c(48);
	flux_out(21,49,2) = K(21,49)*c(21)*c(49);
	flux_out(22,33,2) = K(22,33)*c(22)*c(33);
	flux_out(22,34,2) = K(22,34)*c(22)*c(34);
	flux_out(22,35,2) = K(22,35)*c(22)*c(35);
	flux_out(22,36,2) = K(22,36)*c(22)*c(36);
	flux_out(22,38,2) = K(22,38)*c(22)*c(38);
	flux_out(22,39,2) = K(22,39)*c(22)*c(39);
	flux_out(22,40,2) = K(22,40)*c(22)*c(40);
	flux_out(22,41,2) = K(22,41)*c(22)*c(41);
	flux_out(22,43,2) = K(22,43)*c(22)*c(43);
	flux_out(22,44,2) = K(22,44)*c(22)*c(44);
	flux_out(22,45,2) = K(22,45)*c(22)*c(45);
	flux_out(22,46,2) = K(22,46)*c(22)*c(46);
	flux_out(22,47,2) = K(22,47)*c(22)*c(47);
	flux_out(22,48,2) = K(22,48)*c(22)*c(48);
	flux_out(22,49,2) = K(22,49)*c(22)*c(49);
	flux_out(23,32,2) = K(23,32)*c(23)*c(32);
	flux_out(23,33,2) = K(23,33)*c(23)*c(33);
	flux_out(23,34,2) = K(23,34)*c(23)*c(34);
	flux_out(23,35,2) = K(23,35)*c(23)*c(35);
	flux_out(23,36,2) = K(23,36)*c(23)*c(36);
	flux_out(23,37,2) = K(23,37)*c(23)*c(37);
	flux_out(23,38,2) = K(23,38)*c(23)*c(38);
	flux_out(23,39,2) = K(23,39)*c(23)*c(39);
	flux_out(23,40,2) = K(23,40)*c(23)*c(40);
	flux_out(23,41,2) = K(23,41)*c(23)*c(41);
	flux_out(23,42,2) = K(23,42)*c(23)*c(42);
	flux_out(23,43,2) = K(23,43)*c(23)*c(43);
	flux_out(23,44,2) = K(23,44)*c(23)*c(44);
	flux_out(23,45,2) = K(23,45)*c(23)*c(45);
	flux_out(23,46,2) = K(23,46)*c(23)*c(46);
	flux_out(23,47,2) = K(23,47)*c(23)*c(47);
	flux_out(23,48,2) = K(23,48)*c(23)*c(48);
	flux_out(23,49,2) = K(23,49)*c(23)*c(49);
	flux_out(25,36,2) = K(25,36)*c(25)*c(36);
	flux_out(25,41,2) = K(25,41)*c(25)*c(41);
	flux_out(25,46,2) = K(25,46)*c(25)*c(46);
	flux_out(25,48,2) = K(25,48)*c(25)*c(48);
	flux_out(25,49,2) = K(25,49)*c(25)*c(49);
	flux_out(26,35,2) = K(26,35)*c(26)*c(35);
	flux_out(26,36,2) = K(26,36)*c(26)*c(36);
	flux_out(26,40,2) = K(26,40)*c(26)*c(40);
	flux_out(26,41,2) = K(26,41)*c(26)*c(41);
	flux_out(26,45,2) = K(26,45)*c(26)*c(45);
	flux_out(26,46,2) = K(26,46)*c(26)*c(46);
	flux_out(26,47,2) = K(26,47)*c(26)*c(47);
	flux_out(26,48,2) = K(26,48)*c(26)*c(48);
	flux_out(26,49,2) = K(26,49)*c(26)*c(49);
	flux_out(27,34,2) = K(27,34)*c(27)*c(34);
	flux_out(27,35,2) = K(27,35)*c(27)*c(35);
	flux_out(27,36,2) = K(27,36)*c(27)*c(36);
	flux_out(27,39,2) = K(27,39)*c(27)*c(39);
	flux_out(27,40,2) = K(27,40)*c(27)*c(40);
	flux_out(27,41,2) = K(27,41)*c(27)*c(41);
	flux_out(27,44,2) = K(27,44)*c(27)*c(44);
	flux_out(27,45,2) = K(27,45)*c(27)*c(45);
	flux_out(27,46,2) = K(27,46)*c(27)*c(46);
	flux_out(27,47,2) = K(27,47)*c(27)*c(47);
	flux_out(27,48,2) = K(27,48)*c(27)*c(48);
	flux_out(27,49,2) = K(27,49)*c(27)*c(49);
	flux_out(28,33,2) = K(28,33)*c(28)*c(33);
	flux_out(28,34,2) = K(28,34)*c(28)*c(34);
	flux_out(28,35,2) = K(28,35)*c(28)*c(35);
	flux_out(28,36,2) = K(28,36)*c(28)*c(36);
	flux_out(28,38,2) = K(28,38)*c(28)*c(38);
	flux_out(28,39,2) = K(28,39)*c(28)*c(39);
	flux_out(28,40,2) = K(28,40)*c(28)*c(40);
	flux_out(28,41,2) = K(28,41)*c(28)*c(41);
	flux_out(28,43,2) = K(28,43)*c(28)*c(43);
	flux_out(28,44,2) = K(28,44)*c(28)*c(44);
	flux_out(28,45,2) = K(28,45)*c(28)*c(45);
	flux_out(28,46,2) = K(28,46)*c(28)*c(46);
	flux_out(28,47,2) = K(28,47)*c(28)*c(47);
	flux_out(28,48,2) = K(28,48)*c(28)*c(48);
	flux_out(28,49,2) = K(28,49)*c(28)*c(49);
	flux_out(29,32,2) = K(29,32)*c(29)*c(32);
	flux_out(29,33,2) = K(29,33)*c(29)*c(33);
	flux_out(29,34,2) = K(29,34)*c(29)*c(34);
	flux_out(29,35,2) = K(29,35)*c(29)*c(35);
	flux_out(29,36,2) = K(29,36)*c(29)*c(36);
	flux_out(29,37,2) = K(29,37)*c(29)*c(37);
	flux_out(29,38,2) = K(29,38)*c(29)*c(38);
	flux_out(29,39,2) = K(29,39)*c(29)*c(39);
	flux_out(29,40,2) = K(29,40)*c(29)*c(40);
	flux_out(29,41,2) = K(29,41)*c(29)*c(41);
	flux_out(29,42,2) = K(29,42)*c(29)*c(42);
	flux_out(29,43,2) = K(29,43)*c(29)*c(43);
	flux_out(29,44,2) = K(29,44)*c(29)*c(44);
	flux_out(29,45,2) = K(29,45)*c(29)*c(45);
	flux_out(29,46,2) = K(29,46)*c(29)*c(46);
	flux_out(29,47,2) = K(29,47)*c(29)*c(47);
	flux_out(29,48,2) = K(29,48)*c(29)*c(48);
	flux_out(29,49,2) = K(29,49)*c(29)*c(49);
	flux_out(30,33,2) = K(30,33)*c(30)*c(33);
	flux_out(30,34,2) = K(30,34)*c(30)*c(34);
	flux_out(30,35,2) = K(30,35)*c(30)*c(35);
	flux_out(30,36,2) = K(30,36)*c(30)*c(36);
	flux_out(30,38,2) = K(30,38)*c(30)*c(38);
	flux_out(30,39,2) = K(30,39)*c(30)*c(39);
	flux_out(30,40,2) = K(30,40)*c(30)*c(40);
	flux_out(30,41,2) = K(30,41)*c(30)*c(41);
	flux_out(30,43,2) = K(30,43)*c(30)*c(43);
	flux_out(30,44,2) = K(30,44)*c(30)*c(44);
	flux_out(30,45,2) = K(30,45)*c(30)*c(45);
	flux_out(30,46,2) = K(30,46)*c(30)*c(46);
	flux_out(30,47,2) = K(30,47)*c(30)*c(47);
	flux_out(30,48,2) = K(30,48)*c(30)*c(48);
	flux_out(30,49,2) = K(30,49)*c(30)*c(49);
	flux_out(31,32,2) = K(31,32)*c(31)*c(32);
	flux_out(31,33,2) = K(31,33)*c(31)*c(33);
	flux_out(31,34,2) = K(31,34)*c(31)*c(34);
	flux_out(31,35,2) = K(31,35)*c(31)*c(35);
	flux_out(31,36,2) = K(31,36)*c(31)*c(36);
	flux_out(31,37,2) = K(31,37)*c(31)*c(37);
	flux_out(31,38,2) = K(31,38)*c(31)*c(38);
	flux_out(31,39,2) = K(31,39)*c(31)*c(39);
	flux_out(31,40,2) = K(31,40)*c(31)*c(40);
	flux_out(31,41,2) = K(31,41)*c(31)*c(41);
	flux_out(31,42,2) = K(31,42)*c(31)*c(42);
	flux_out(31,43,2) = K(31,43)*c(31)*c(43);
	flux_out(31,44,2) = K(31,44)*c(31)*c(44);
	flux_out(31,45,2) = K(31,45)*c(31)*c(45);
	flux_out(31,46,2) = K(31,46)*c(31)*c(46);
	flux_out(31,47,2) = K(31,47)*c(31)*c(47);
	flux_out(31,48,2) = K(31,48)*c(31)*c(48);
	flux_out(31,49,2) = K(31,49)*c(31)*c(49);
	flux_out(6,67,3) = K(6,67)*c(6)*c(67);
	flux_out(7,66,3) = K(7,66)*c(7)*c(66);
	flux_out(7,67,3) = K(7,67)*c(7)*c(67);
	flux_out(8,65,3) = K(8,65)*c(8)*c(65);
	flux_out(8,66,3) = K(8,66)*c(8)*c(66);
	flux_out(8,67,3) = K(8,67)*c(8)*c(67);
	flux_out(9,65,3) = K(9,65)*c(9)*c(65);
	flux_out(9,66,3) = K(9,66)*c(9)*c(66);
	flux_out(9,67,3) = K(9,67)*c(9)*c(67);
	flux_out(10,65,3) = K(10,65)*c(10)*c(65);
	flux_out(10,66,3) = K(10,66)*c(10)*c(66);
	flux_out(10,67,3) = K(10,67)*c(10)*c(67);
	flux_out(11,65,3) = K(11,65)*c(11)*c(65);
	flux_out(11,66,3) = K(11,66)*c(11)*c(66);
	flux_out(11,67,3) = K(11,67)*c(11)*c(67);
	flux_out(12,67,3) = K(12,67)*c(12)*c(67);
	flux_out(13,64,3) = K(13,64)*c(13)*c(64);
	flux_out(13,66,3) = K(13,66)*c(13)*c(66);
	flux_out(13,67,3) = K(13,67)*c(13)*c(67);
	flux_out(14,63,3) = K(14,63)*c(14)*c(63);
	flux_out(14,64,3) = K(14,64)*c(14)*c(64);
	flux_out(14,65,3) = K(14,65)*c(14)*c(65);
	flux_out(14,66,3) = K(14,66)*c(14)*c(66);
	flux_out(14,67,3) = K(14,67)*c(14)*c(67);
	flux_out(15,62,3) = K(15,62)*c(15)*c(62);
	flux_out(15,63,3) = K(15,63)*c(15)*c(63);
	flux_out(15,64,3) = K(15,64)*c(15)*c(64);
	flux_out(15,65,3) = K(15,65)*c(15)*c(65);
	flux_out(15,66,3) = K(15,66)*c(15)*c(66);
	flux_out(15,67,3) = K(15,67)*c(15)*c(67);
	flux_out(16,62,3) = K(16,62)*c(16)*c(62);
	flux_out(16,63,3) = K(16,63)*c(16)*c(63);
	flux_out(16,64,3) = K(16,64)*c(16)*c(64);
	flux_out(16,65,3) = K(16,65)*c(16)*c(65);
	flux_out(16,66,3) = K(16,66)*c(16)*c(66);
	flux_out(16,67,3) = K(16,67)*c(16)*c(67);
	flux_out(17,62,3) = K(17,62)*c(17)*c(62);
	flux_out(17,63,3) = K(17,63)*c(17)*c(63);
	flux_out(17,64,3) = K(17,64)*c(17)*c(64);
	flux_out(17,65,3) = K(17,65)*c(17)*c(65);
	flux_out(17,66,3) = K(17,66)*c(17)*c(66);
	flux_out(17,67,3) = K(17,67)*c(17)*c(67);
	flux_out(18,67,3) = K(18,67)*c(18)*c(67);
	flux_out(19,61,3) = K(19,61)*c(19)*c(61);
	flux_out(19,64,3) = K(19,64)*c(19)*c(64);
	flux_out(19,66,3) = K(19,66)*c(19)*c(66);
	flux_out(19,67,3) = K(19,67)*c(19)*c(67);
	flux_out(20,60,3) = K(20,60)*c(20)*c(60);
	flux_out(20,61,3) = K(20,61)*c(20)*c(61);
	flux_out(20,63,3) = K(20,63)*c(20)*c(63);
	flux_out(20,64,3) = K(20,64)*c(20)*c(64);
	flux_out(20,65,3) = K(20,65)*c(20)*c(65);
	flux_out(20,66,3) = K(20,66)*c(20)*c(66);
	flux_out(20,67,3) = K(20,67)*c(20)*c(67);
	flux_out(21,59,3) = K(21,59)*c(21)*c(59);
	flux_out(21,60,3) = K(21,60)*c(21)*c(60);
	flux_out(21,61,3) = K(21,61)*c(21)*c(61);
	flux_out(21,62,3) = K(21,62)*c(21)*c(62);
	flux_out(21,63,3) = K(21,63)*c(21)*c(63);
	flux_out(21,64,3) = K(21,64)*c(21)*c(64);
	flux_out(21,65,3) = K(21,65)*c(21)*c(65);
	flux_out(21,66,3) = K(21,66)*c(21)*c(66);
	flux_out(21,67,3) = K(21,67)*c(21)*c(67);
	flux_out(22,58,3) = K(22,58)*c(22)*c(58);
	flux_out(22,59,3) = K(22,59)*c(22)*c(59);
	flux_out(22,60,3) = K(22,60)*c(22)*c(60);
	flux_out(22,61,3) = K(22,61)*c(22)*c(61);
	flux_out(22,62,3) = K(22,62)*c(22)*c(62);
	flux_out(22,63,3) = K(22,63)*c(22)*c(63);
	flux_out(22,64,3) = K(22,64)*c(22)*c(64);
	flux_out(22,65,3) = K(22,65)*c(22)*c(65);
	flux_out(22,66,3) = K(22,66)*c(22)*c(66);
	flux_out(22,67,3) = K(22,67)*c(22)*c(67);
	flux_out(23,57,3) = K(23,57)*c(23)*c(57);
	flux_out(23,58,3) = K(23,58)*c(23)*c(58);
	flux_out(23,59,3) = K(23,59)*c(23)*c(59);
	flux_out(23,60,3) = K(23,60)*c(23)*c(60);
	flux_out(23,61,3) = K(23,61)*c(23)*c(61);
	flux_out(23,62,3) = K(23,62)*c(23)*c(62);
	flux_out(23,63,3) = K(23,63)*c(23)*c(63);
	flux_out(23,64,3) = K(23,64)*c(23)*c(64);
	flux_out(23,65,3) = K(23,65)*c(23)*c(65);
	flux_out(23,66,3) = K(23,66)*c(23)*c(66);
	flux_out(23,67,3) = K(23,67)*c(23)*c(67);
	flux_out(24,67,3) = K(24,67)*c(24)*c(67);
	flux_out(25,61,3) = K(25,61)*c(25)*c(61);
	flux_out(25,64,3) = K(25,64)*c(25)*c(64);
	flux_out(25,66,3) = K(25,66)*c(25)*c(66);
	flux_out(25,67,3) = K(25,67)*c(25)*c(67);
	flux_out(26,56,3) = K(26,56)*c(26)*c(56);
	flux_out(26,60,3) = K(26,60)*c(26)*c(60);
	flux_out(26,61,3) = K(26,61)*c(26)*c(61);
	flux_out(26,63,3) = K(26,63)*c(26)*c(63);
	flux_out(26,64,3) = K(26,64)*c(26)*c(64);
	flux_out(26,65,3) = K(26,65)*c(26)*c(65);
	flux_out(26,66,3) = K(26,66)*c(26)*c(66);
	flux_out(26,67,3) = K(26,67)*c(26)*c(67);
	flux_out(27,55,3) = K(27,55)*c(27)*c(55);
	flux_out(27,56,3) = K(27,56)*c(27)*c(56);
	flux_out(27,59,3) = K(27,59)*c(27)*c(59);
	flux_out(27,60,3) = K(27,60)*c(27)*c(60);
	flux_out(27,61,3) = K(27,61)*c(27)*c(61);
	flux_out(27,62,3) = K(27,62)*c(27)*c(62);
	flux_out(27,63,3) = K(27,63)*c(27)*c(63);
	flux_out(27,64,3) = K(27,64)*c(27)*c(64);
	flux_out(27,65,3) = K(27,65)*c(27)*c(65);
	flux_out(27,66,3) = K(27,66)*c(27)*c(66);
	flux_out(27,67,3) = K(27,67)*c(27)*c(67);
	flux_out(28,54,3) = K(28,54)*c(28)*c(54);
	flux_out(28,55,3) = K(28,55)*c(28)*c(55);
	flux_out(28,56,3) = K(28,56)*c(28)*c(56);
	flux_out(28,58,3) = K(28,58)*c(28)*c(58);
	flux_out(28,59,3) = K(28,59)*c(28)*c(59);
	flux_out(28,60,3) = K(28,60)*c(28)*c(60);
	flux_out(28,61,3) = K(28,61)*c(28)*c(61);
	flux_out(28,62,3) = K(28,62)*c(28)*c(62);
	flux_out(28,63,3) = K(28,63)*c(28)*c(63);
	flux_out(28,64,3) = K(28,64)*c(28)*c(64);
	flux_out(28,65,3) = K(28,65)*c(28)*c(65);
	flux_out(28,66,3) = K(28,66)*c(28)*c(66);
	flux_out(28,67,3) = K(28,67)*c(28)*c(67);
	flux_out(29,53,3) = K(29,53)*c(29)*c(53);
	flux_out(29,54,3) = K(29,54)*c(29)*c(54);
	flux_out(29,55,3) = K(29,55)*c(29)*c(55);
	flux_out(29,56,3) = K(29,56)*c(29)*c(56);
	flux_out(29,57,3) = K(29,57)*c(29)*c(57);
	flux_out(29,58,3) = K(29,58)*c(29)*c(58);
	flux_out(29,59,3) = K(29,59)*c(29)*c(59);
	flux_out(29,60,3) = K(29,60)*c(29)*c(60);
	flux_out(29,61,3) = K(29,61)*c(29)*c(61);
	flux_out(29,62,3) = K(29,62)*c(29)*c(62);
	flux_out(29,63,3) = K(29,63)*c(29)*c(63);
	flux_out(29,64,3) = K(29,64)*c(29)*c(64);
	flux_out(29,65,3) = K(29,65)*c(29)*c(65);
	flux_out(29,66,3) = K(29,66)*c(29)*c(66);
	flux_out(29,67,3) = K(29,67)*c(29)*c(67);
	flux_out(30,51,3) = K(30,51)*c(30)*c(51);
	flux_out(30,52,3) = K(30,52)*c(30)*c(52);
	flux_out(30,54,3) = K(30,54)*c(30)*c(54);
	flux_out(30,55,3) = K(30,55)*c(30)*c(55);
	flux_out(30,56,3) = K(30,56)*c(30)*c(56);
	flux_out(30,58,3) = K(30,58)*c(30)*c(58);
	flux_out(30,59,3) = K(30,59)*c(30)*c(59);
	flux_out(30,60,3) = K(30,60)*c(30)*c(60);
	flux_out(30,61,3) = K(30,61)*c(30)*c(61);
	flux_out(30,62,3) = K(30,62)*c(30)*c(62);
	flux_out(30,63,3) = K(30,63)*c(30)*c(63);
	flux_out(30,64,3) = K(30,64)*c(30)*c(64);
	flux_out(30,65,3) = K(30,65)*c(30)*c(65);
	flux_out(30,66,3) = K(30,66)*c(30)*c(66);
	flux_out(30,67,3) = K(30,67)*c(30)*c(67);
	flux_out(31,50,3) = K(31,50)*c(31)*c(50);
	flux_out(31,51,3) = K(31,51)*c(31)*c(51);
	flux_out(31,52,3) = K(31,52)*c(31)*c(52);
	flux_out(31,53,3) = K(31,53)*c(31)*c(53);
	flux_out(31,54,3) = K(31,54)*c(31)*c(54);
	flux_out(31,55,3) = K(31,55)*c(31)*c(55);
	flux_out(31,56,3) = K(31,56)*c(31)*c(56);
	flux_out(31,57,3) = K(31,57)*c(31)*c(57);
	flux_out(31,58,3) = K(31,58)*c(31)*c(58);
	flux_out(31,59,3) = K(31,59)*c(31)*c(59);
	flux_out(31,60,3) = K(31,60)*c(31)*c(60);
	flux_out(31,61,3) = K(31,61)*c(31)*c(61);
	flux_out(31,62,3) = K(31,62)*c(31)*c(62);
	flux_out(31,63,3) = K(31,63)*c(31)*c(63);
	flux_out(31,64,3) = K(31,64)*c(31)*c(64);
	flux_out(31,65,3) = K(31,65)*c(31)*c(65);
	flux_out(31,66,3) = K(31,66)*c(31)*c(66);
	flux_out(31,67,3) = K(31,67)*c(31)*c(67);

% Combining collisions and evaporations into net fluxes.
	for i = 1:78
		for j = (i+1):78
			net = coll_evap_2d(i,j)-coll_evap_2d(j,i);
			if net > 0
				flux_2d(i,j) = net;
			else
				flux_2d(j,i) = -net;
			end
		end
	end



% Adding given source terms to the flux matrix and solving source terms of monomers, if needed
	flux_2d(70,1:69) = source';

	if calc_sources == 1
		sources(1) = sum(coll_evap_2d(1,:))-sum(coll_evap_2d([1:78],1));
		if source(1) == 0
			flux_2d(70,1) = sources(1);
		end
		sources(6) = sum(coll_evap_2d(6,:))-sum(coll_evap_2d([1:78],6));
		if source(6) == 0
			flux_2d(70,6) = sources(6);
		end
		sources(68) = sum(coll_evap_2d(68,:));
		if source(68) == 0
			flux_2d(70,68) = sources(68);
		end
		sources(69) = sum(coll_evap_2d(69,:));
		if source(69) == 0
			flux_2d(70,69) = sources(69);
		end
	end

end
